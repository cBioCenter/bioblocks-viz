!function(e){function t(t){for(var r,s,o=t[0],l=t[1],u=t[2],d=0,p=[];d<o.length;d++)s=o[d],Object.prototype.hasOwnProperty.call(a,s)&&a[s]&&p.push(a[s][0]),a[s]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(c&&c(t);p.length;)p.shift()();return i.push.apply(i,u||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,o=1;o<n.length;o++){var l=n[o];0!==a[l]&&(r=!1)}r&&(i.splice(t--,1),e=s(s.s=n[0]))}return e}var r={},a={0:0},i=[];function s(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=r,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=t,o=o.slice();for(var u=0;u<o.length;u++)t(o[u]);var c=l;i.push([0,2,5,6,4,7,1,8,9,3,10]),n()}({"./.storybook/config.ts":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/addon-knobs/dist/index.js"),a=n("./node_modules/@storybook/react/dist/client/index.js");n("./assets/semantic.flat.min.css");var i=n("./.storybook/decorators.tsx");a.addDecorator(r.withKnobs),a.addDecorator(i.withProvider),a.addParameters({options:{panelPosition:"right"}}),a.configure((function(){var e=n("./docs/stories sync recursive \\.tsx$");e.keys().forEach(e)}),e)}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./.storybook/decorators.tsx":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/react/index.js"),a=n("./node_modules/react-redux/es/index.js"),i=n("./src/reducer/index.ts");t.withProvider=function(e){return r.createElement(a.Provider,{store:i.BBStore},e())}},"./assets/semantic.flat.min.css":function(e,t,n){},"./docs/stories sync recursive \\.tsx$":function(e,t,n){var r={"./communication/ResidueSelection.stories.tsx":"./docs/stories/communication/ResidueSelection.stories.tsx","./visualizations/Anatomogram.stories.tsx":"./docs/stories/visualizations/Anatomogram.stories.tsx","./visualizations/ContactMap.stories.tsx":"./docs/stories/visualizations/ContactMap.stories.tsx","./visualizations/NGL.stories.tsx":"./docs/stories/visualizations/NGL.stories.tsx","./visualizations/Spring.stories.tsx":"./docs/stories/visualizations/Spring.stories.tsx","./visualizations/TSNE.stories.tsx":"./docs/stories/visualizations/TSNE.stories.tsx","./visualizations/UMAP.stories.tsx":"./docs/stories/visualizations/UMAP.stories.tsx","./widgets/ComponentCard.stories.tsx":"./docs/stories/widgets/ComponentCard.stories.tsx"};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=i,e.exports=a,a.id="./docs/stories sync recursive \\.tsx$"},"./docs/stories/communication/ResidueSelection.stories.tsx":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/react/dist/client/index.js"),a=n("./node_modules/react/index.js"),i=n("./src/container/index.ts"),s=n("./src/data/index.ts"),o=r.storiesOf("communication/Residues",e);s.BioblocksPDB.createPDB("datasets/beta_lactamase/1ZG4.pdb").then((function(e){o.add("Residue Selection",(function(){return a.createElement("div",null,a.createElement(i.PredictedContactMap,{data:{couplingScores:e.contactInformation,secondaryStructures:e.secondaryStructureSections}}),a.createElement(i.NGLContainer,{predictedProteins:[e]}))}))})).catch((function(e){console.log(e)}))}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./docs/stories/visualizations/Anatomogram.stories.tsx":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/react/dist/client/index.js"),a=n("./node_modules/react/index.js"),i=n("./node_modules/@storybook/addon-knobs/dist/index.js"),s=n("./src/container/index.ts");r.storiesOf("visualizations/Anatomogram Container",e).add("Species",(function(){return a.createElement(s.AnatomogramContainer,{species:i.select("species",["homo_sapiens","mus_musculus"],"homo_sapiens")})}),{info:{inline:!0}})}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./docs/stories/visualizations/ContactMap.stories.tsx":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/react/dist/client/index.js"),a=n("./node_modules/react/index.js"),i=n("./node_modules/@storybook/addon-knobs/dist/index.js"),s=n("./src/container/index.ts"),o=n("./src/data/index.ts"),l=r.storiesOf("visualizations/Predicted Contact Map",e),u={couplingScores:new o.CouplingContainer([{i:381,A_i:"Q",j:391,A_j:"Y",dist:3.342438331517875},{i:337,A_i:"R",j:346,A_j:"Q",dist:2.6320275454485698},{i:328,A_i:"P",j:338,A_j:"P",dist:5.037053205992569},{i:388,A_i:"Q",j:392,A_j:"D",dist:2.7139880250288506},{i:387,A_i:"D",j:390,A_j:"L",dist:2.6750674757844877},{i:388,A_i:"Q",j:695,A_j:"L",dist:45.912429569779896},{i:375,A_i:"L",j:670,A_j:"T",dist:64.49344361250995},{i:446,A_i:"A",j:580,A_j:"L",dist:32.842243056770656},{i:232,A_i:"T",j:448,A_j:"D",dist:34.00742236630116},{i:374,A_i:"N",j:553,A_j:"D",dist:62.27235530313592}]),secondaryStructures:[]};l.add("Node Colors",(function(){return a.createElement(s.PredictedContactMap,{data:u,agreementColor:i.color("Agreement","#ff0000"),allColor:i.color("All","#000000"),highlightColor:i.color("Highlight","#ff8800"),observedColor:i.color("Observed","#0000ff")})}))}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./docs/stories/visualizations/NGL.stories.tsx":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/react/dist/client/index.js"),a=n("./node_modules/react/index.js"),i=n("./src/component/index.ts"),s=n("./src/data/index.ts"),o=r.storiesOf("visualizations/NGL",e);s.BioblocksPDB.createPDB("datasets/beta_lactamase/1ZG4.pdb").then((function(e){o.add("Beta Lactamase 1ZG4",(function(){return a.createElement(i.NGLComponent,{predictedProteins:[e]})}),{info:{inline:!0}})}))}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./docs/stories/visualizations/Spring.stories.tsx":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/react/dist/client/index.js"),a=n("./node_modules/react/index.js"),i=n("./src/container/index.ts");r.storiesOf("visualizations/SPRING",e).add("HPC - Full",(function(){return a.createElement(i.SpringContainer,null)}),{info:{inline:!0}})}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./docs/stories/visualizations/TSNE.stories.tsx":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/react/dist/client/index.js"),a=n("./node_modules/react/index.js"),i=n("./src/container/index.ts");r.storiesOf("visualizations/TensorFlow T-SNE",e).add("HPC - Full - T-SNE",(function(){return a.createElement(i.TensorTContainer,{datasetLocation:"datasets/hpc/full"})}),{info:{inline:!0}})}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./docs/stories/visualizations/UMAP.stories.tsx":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/react/dist/client/index.js"),a=n("./node_modules/react/index.js"),i=n("./node_modules/@storybook/addon-knobs/dist/index.js"),s=n("./src/container/index.ts"),o=n("./src/data/index.ts"),l=n("./src/helper/index.ts"),u=r.storiesOf("visualizations/UMAPSequenceContainer",e),c=[new o.SeqRecord(new o.Seq("IDAAEA")),new o.SeqRecord(new o.Seq("TAESKG")),new o.SeqRecord(new o.Seq("NAAEEH")),new o.SeqRecord(new o.Seq("AEREGI")),new o.SeqRecord(new o.Seq("NAAEEQ")),new o.SeqRecord(new o.Seq("SERGIR")),new o.SeqRecord(new o.Seq("DAAEEH")),new o.SeqRecord(new o.Seq("AAEREG")),new o.SeqRecord(new o.Seq("IVKAAA")),new o.SeqRecord(new o.Seq("EAEEKG")),new o.SeqRecord(new o.Seq("PIVKAA")),new o.SeqRecord(new o.Seq("EAEEKG")),new o.SeqRecord(new o.Seq("IVKAAA")),new o.SeqRecord(new o.Seq("EAEDKG")),new o.SeqRecord(new o.Seq("IVKAAA")),new o.SeqRecord(new o.Seq("EAEDKG"))];u.add("Sequence Data",(function(){return a.createElement(s.UMAPSequenceContainer,{showUploadButton:i.boolean("Show Upload Button",!1),allSequences:i.object("Sequences",c)})}),{info:{inline:!0}}),l.fetchMatrixData("datasets/hpc/full/tsne_matrix.csv").then((function(e){u.add("Transcriptional Data",(function(){return a.createElement(s.UMAPTranscriptionalContainer,{dataMatrix:e})}),{info:{inline:!0}})})).catch((function(e){console.log(e)}))}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./docs/stories/widgets/ComponentCard.stories.tsx":function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/@storybook/addon-knobs/react.js"),a=n("./node_modules/@storybook/react/dist/client/index.js"),i=n("./node_modules/react/index.js"),s=n("./src/component/index.ts");a.storiesOf("widgets/ComponentCard",e).add("Component Name",(function(){return i.createElement(s.ComponentCard,{componentName:r.text("name","My Cool Component")})}),{info:{inline:!0}})}).call(this,n("./node_modules/webpack/buildin/module.js")(e))},"./node_modules/anatomogram/lib/img sync recursive ^\\.\\/.*selected\\.png$":function(e,t,n){var r={"./brain.selected.png":"./node_modules/anatomogram/lib/img/brain.selected.png","./brain.unselected.png":"./node_modules/anatomogram/lib/img/brain.unselected.png","./female.selected.png":"./node_modules/anatomogram/lib/img/female.selected.png","./female.unselected.png":"./node_modules/anatomogram/lib/img/female.unselected.png","./flower_parts.selected.png":"./node_modules/anatomogram/lib/img/flower_parts.selected.png","./flower_parts.unselected.png":"./node_modules/anatomogram/lib/img/flower_parts.unselected.png","./male.selected.png":"./node_modules/anatomogram/lib/img/male.selected.png","./male.unselected.png":"./node_modules/anatomogram/lib/img/male.unselected.png","./whole_plant.selected.png":"./node_modules/anatomogram/lib/img/whole_plant.selected.png","./whole_plant.unselected.png":"./node_modules/anatomogram/lib/img/whole_plant.unselected.png"};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=i,e.exports=a,a.id="./node_modules/anatomogram/lib/img sync recursive ^\\.\\/.*selected\\.png$"},"./node_modules/anatomogram/lib/svg sync recursive ^\\.\\/.*\\.svg$":function(e,t,n){var r={"./anolis_carolinensis.svg":"./node_modules/anatomogram/lib/svg/anolis_carolinensis.svg","./arabidopsis_thaliana.svg":"./node_modules/anatomogram/lib/svg/arabidopsis_thaliana.svg","./bos_taurus.svg":"./node_modules/anatomogram/lib/svg/bos_taurus.svg","./brachypodium_distachyon.flower_parts.svg":"./node_modules/anatomogram/lib/svg/brachypodium_distachyon.flower_parts.svg","./brachypodium_distachyon.whole_plant.svg":"./node_modules/anatomogram/lib/svg/brachypodium_distachyon.whole_plant.svg","./gallus_gallus.svg":"./node_modules/anatomogram/lib/svg/gallus_gallus.svg","./homo_sapiens.brain.svg":"./node_modules/anatomogram/lib/svg/homo_sapiens.brain.svg","./homo_sapiens.female.svg":"./node_modules/anatomogram/lib/svg/homo_sapiens.female.svg","./homo_sapiens.male.svg":"./node_modules/anatomogram/lib/svg/homo_sapiens.male.svg","./hordeum_vulgare.flower_parts.svg":"./node_modules/anatomogram/lib/svg/hordeum_vulgare.flower_parts.svg","./hordeum_vulgare.whole_plant.svg":"./node_modules/anatomogram/lib/svg/hordeum_vulgare.whole_plant.svg","./macaca_mulatta.svg":"./node_modules/anatomogram/lib/svg/macaca_mulatta.svg","./monodelphis_domestica.svg":"./node_modules/anatomogram/lib/svg/monodelphis_domestica.svg","./mus_musculus.brain.svg":"./node_modules/anatomogram/lib/svg/mus_musculus.brain.svg","./mus_musculus.female.svg":"./node_modules/anatomogram/lib/svg/mus_musculus.female.svg","./mus_musculus.male.svg":"./node_modules/anatomogram/lib/svg/mus_musculus.male.svg","./oryza_sativa.flower_parts.svg":"./node_modules/anatomogram/lib/svg/oryza_sativa.flower_parts.svg","./oryza_sativa.whole_plant.svg":"./node_modules/anatomogram/lib/svg/oryza_sativa.whole_plant.svg","./papio_anubis.svg":"./node_modules/anatomogram/lib/svg/papio_anubis.svg","./rattus_norvegicus.svg":"./node_modules/anatomogram/lib/svg/rattus_norvegicus.svg","./solanum_lycopersicum.flower_parts.svg":"./node_modules/anatomogram/lib/svg/solanum_lycopersicum.flower_parts.svg","./solanum_lycopersicum.whole_plant.svg":"./node_modules/anatomogram/lib/svg/solanum_lycopersicum.whole_plant.svg","./solanum_tuberosum.svg":"./node_modules/anatomogram/lib/svg/solanum_tuberosum.svg","./sorghum_bicolor.flower_parts.svg":"./node_modules/anatomogram/lib/svg/sorghum_bicolor.flower_parts.svg","./sorghum_bicolor.whole_plant.svg":"./node_modules/anatomogram/lib/svg/sorghum_bicolor.whole_plant.svg","./tetraodon_nigroviridis.svg":"./node_modules/anatomogram/lib/svg/tetraodon_nigroviridis.svg","./triticum_aestivum.flower_parts.svg":"./node_modules/anatomogram/lib/svg/triticum_aestivum.flower_parts.svg","./triticum_aestivum.whole_plant.svg":"./node_modules/anatomogram/lib/svg/triticum_aestivum.whole_plant.svg","./xenopus_tropicalis.svg":"./node_modules/anatomogram/lib/svg/xenopus_tropicalis.svg","./zea_mays.flower_parts.svg":"./node_modules/anatomogram/lib/svg/zea_mays.flower_parts.svg","./zea_mays.whole_plant.svg":"./node_modules/anatomogram/lib/svg/zea_mays.whole_plant.svg"};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=i,e.exports=a,a.id="./node_modules/anatomogram/lib/svg sync recursive ^\\.\\/.*\\.svg$"},"./src/action/ContainerAction.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/typesafe-actions/dist/index.umd.js");t.createContainerActions=function(e,t){void 0===t&&(t="bioblocks");var n=(t+"/"+e).toUpperCase();return{add:r.createStandardAction(n+"_ADD").map((function(t){return{meta:e,payload:t}})),addMultiple:r.createStandardAction(n+"_ADD_MULTIPLE").map((function(t){return{meta:e,payload:t}})),clear:r.createStandardAction(n+"_CLEAR")(),remove:r.createStandardAction(n+"_REMOVE").map((function(t){return{meta:e,payload:t}})),removeMultiple:r.createStandardAction(n+"_REMOVE_MULTIPLE").map((function(t){return{meta:e,payload:t}})),set:r.createStandardAction(n+"_SET").map((function(t){return{meta:e,payload:t}}))}}},"./src/action/DataAction.ts":function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=n("./node_modules/typesafe-actions/dist/index.umd.js");t.createDataActions=function(e,t){void 0===t&&(t="bioblocks");var n=(t+"/"+e).toUpperCase();return i.createAsyncAction(n+"_FETCH_DATA_REQUEST",n+"_FETCH_DATA_SUCCESS",n+"_FETCH_DATA_FAILURE")()},t.fetchDataset=function(e,n,i){return void 0===i&&(i="bioblocks"),function(s){return r(void 0,void 0,void 0,(function(){var r,o,l;return a(this,(function(a){switch(a.label){case 0:r=t.createDataActions(e,i),s(r.request()),a.label=1;case 1:return a.trys.push([1,3,,4]),[4,n()];case 2:return o=a.sent(),s(r.success(o)),[3,4];case 3:return l=a.sent(),s(r.failure(l)),console.log("An error occurred: "+l),[3,4];case 4:return[2]}}))}))}}},"./src/action/ObjectAction.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/typesafe-actions/dist/index.umd.js");t.createObjectActions=function(e,t){void 0===t&&(t="bioblocks");var n=(t+"/"+e).toUpperCase();return{add:r.createStandardAction(n+"_ADD").map((function(t){return{meta:e,payload:t}})),clear:r.createStandardAction(n+"_CLEAR")(),remove:r.createStandardAction(n+"_REMOVE").map((function(t){return{meta:e,payload:t}})),removeMultiple:r.createStandardAction(n+"_REMOVE_MULTIPLE").map((function(t){return{meta:e,payload:t}})),set:r.createStandardAction(n+"_SET").map((function(t){return{meta:e,payload:t}})),toggle:r.createStandardAction(n+"_TOGGLE").map((function(t){return{meta:e,payload:t}}))}}},"./src/action/ResiduePairAction.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./src/action/index.ts"),a=n("./src/reducer/index.ts");t.createResiduePairActions=function(e){return void 0===e&&(e="bioblocks"),{candidates:r.createContainerActions(a.RESIDUE_PAIR_DATASET_NAME+"/candidates",e),hovered:r.createContainerActions(a.RESIDUE_PAIR_DATASET_NAME+"/hovered",e),locked:r.createObjectActions(a.RESIDUE_PAIR_DATASET_NAME+"/locked",e)}};try{t.createResiduePairActions.displayName="createResiduePairActions",t.createResiduePairActions.__docgenInfo={description:"",displayName:"createResiduePairActions",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/action/ResiduePairAction.ts#createResiduePairActions"]={docgenInfo:t.createResiduePairActions.__docgenInfo,name:"createResiduePairActions",path:"src/action/ResiduePairAction.ts#createResiduePairActions"})}catch(e){}},"./src/action/SpringAction.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var s=n("./src/action/index.ts");t.fetchSpringGraphData=function(e,t){return void 0===t&&(t="bioblocks"),function(n){return a(void 0,void 0,void 0,(function(){var r,a,o;return i(this,(function(i){switch(i.label){case 0:r=s.createDataActions("spring/graphData",t),n(r.request()),i.label=1;case 1:return i.trys.push([1,3,,4]),[4,e()];case 2:return a=i.sent(),n(r.success(a)),[3,4];case 3:return o=i.sent(),n(r.failure(o)),console.log("An error occurred: "+o),[3,4];case 4:return[2]}}))}))}},t.createSpringActions=function(e){return void 0===e&&(e="bioblocks"),{category:r({},s.createValueActions("spring/category",e)),graphData:r({},s.createDataActions("spring/graphData",e)),species:r({},s.createValueActions("spring/species",e))}};try{t.createSpringActions.displayName="createSpringActions",t.createSpringActions.__docgenInfo={description:"",displayName:"createSpringActions",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/action/SpringAction.ts#createSpringActions"]={docgenInfo:t.createSpringActions.__docgenInfo,name:"createSpringActions",path:"src/action/SpringAction.ts#createSpringActions"})}catch(e){}},"./src/action/ValueAction.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/typesafe-actions/dist/index.umd.js");t.createValueActions=function(e,t){void 0===t&&(t="bioblocks");var n=(t+"/"+e).toUpperCase();return{clear:r.createStandardAction(n+"_CLEAR")(),set:r.createStandardAction(n+"_SET").map((function(t){return{meta:e,payload:t}}))}}},"./src/action/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/action/ContainerAction.ts")),r(n("./src/action/DataAction.ts")),r(n("./src/action/ObjectAction.ts")),r(n("./src/action/ValueAction.ts")),r(n("./src/action/SpringAction.ts")),r(n("./src/action/ResiduePairAction.ts"));try{createSpringActions.displayName="createSpringActions",createSpringActions.__docgenInfo={description:"",displayName:"createSpringActions",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/action/index.ts#createSpringActions"]={docgenInfo:createSpringActions.__docgenInfo,name:"createSpringActions",path:"src/action/index.ts#createSpringActions"})}catch(e){}try{createResiduePairActions.displayName="createResiduePairActions",createResiduePairActions.__docgenInfo={description:"",displayName:"createResiduePairActions",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/action/index.ts#createResiduePairActions"]={docgenInfo:createResiduePairActions.__docgenInfo,name:"createResiduePairActions",path:"src/action/index.ts#createResiduePairActions"})}catch(e){}},"./src/component/ContactMap.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e},l=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var u=n("./node_modules/react/index.js"),c=n("./node_modules/react-redux/es/index.js"),d=n("./node_modules/redux/es/redux.js"),p=n("./node_modules/semantic-ui-react/dist/es/index.js"),h=n("./src/action/index.ts"),m=n("./src/component/index.ts"),g=n("./src/data/index.ts"),f=n("./src/helper/index.ts"),b=n("./src/selector/index.ts");t.initialContactMapState={pointsToPlot:new Array};var y=function(e){function n(n){var r=e.call(this,n)||this;return r.state=t.initialContactMapState,r.onNodeSelectionChange=function(e){return function(t,n){var a=r.state.pointsToPlot;r.setState({pointsToPlot:o(a.slice(0,e),[i(i({},a[e]),{hoverinfo:"skip"===a[e].hoverinfo?"text":"skip"})],a.slice(e+1))})}},r.onNodeSizeChange=function(e,t){return function(n,a){var s=r.state.pointsToPlot;r.setState({pointsToPlot:o(s.slice(0,e),[i(i({},s[e]),{nodeSize:Math.min(Math.max(Math.abs(s[e].nodeSize+t),1),10)})],s.slice(e+1))})}},r.applySavedNodeOptions=function(e){var t=r.state.pointsToPlot,n=t.findIndex((function(t){return t.name===e.name}));return n>=0?i(i({},e),{hoverinfo:t[n].hoverinfo,nodeSize:t[n].nodeSize}):e},r.generateHoveredResiduePairs=function(e){return e.length>=1?[{i:e[0],j:1===e.length?e[0]:e[1]}]:[]},r.generateLockedResiduePairs=function(e){return Object.keys(e).reduce((function(t,n){var r=e[n];return r&&2===r.length&&t.push({i:r[0],j:r[1],dist:0}),t}),new Array)},r.generateSelectedResiduesChartData=function(e,t,n,r){return m.generateChartDataEntry("none",e,t,"",n,r,{marker:{color:new Array(2*r.length).fill(e),line:{color:e,width:3},symbol:"circle-open"}})},r.getColorFromEntry=function(e){if(e.marker){if(e.marker.line&&e.marker.line.color)return e.marker.line.color;if(e.marker.color)return Array.isArray(e.marker.color)?e.marker.color[0]:e.marker.color;if(e.marker.colorscale)return Array.isArray(e.marker.colorscale)?e.marker.colorscale[0][1]:e.marker.colorscale}if(e.line&&e.line.color)return e.line.color},r.getDockConfigs=function(){return[{isVisibleCb:function(){return r.props.selectedSecondaryStructures.length>=1||Object.values(r.props.lockedResiduePairs).length>=1},onClick:function(){r.props.removeAllLockedResiduePairs(),r.props.removeAllSelectedSecondaryStructures(),r.props.removeHoveredResidues()},text:"Clear Selections"}]},r.getMenuConfigs=function(e,t){return[{component:{configs:{Filters:e},name:"POPUP"},description:"Filter",iconName:"filter"},{component:{configs:r.getNodeOptionConfigs(t),name:"POPUP"},description:"Settings"}]},r.getNodeOptionConfigs=function(e){return{"Node Options":new(Array.bind.apply(Array,o([void 0,{id:"stuff-1-2-3",name:"",options:[u.createElement(p.Label,{basic:!0,style:{border:0},key:"node-selection-label"},"Selectable?")],style:{padding:0},type:g.CONFIGURATION_COMPONENT_TYPE.BUTTON_GROUP}],e.map((function(e,t){var n=r.getColorFromEntry(e),a=[u.createElement(p.Checkbox,{checked:"skip"!==r.state.pointsToPlot[t].hoverinfo,key:"node-selection-checkbox-"+t,onClick:r.onNodeSelectionChange(t)}),u.createElement(p.Icon,{key:"node-size-slider-"+t+"-minus",name:"minus",onClick:r.onNodeSizeChange(t,-1),size:"small",style:{color:n}}),u.createElement(p.Icon,{key:"node-size-slider-"+t+"-2",name:"circle",size:"small",style:{color:n}}),u.createElement(p.Icon,{key:"node-size-slider-"+t+"-plus",name:"plus",onClick:r.onNodeSizeChange(t,1),size:"small",style:{color:n}})];return{id:"node-option-config-"+t,name:e.name,options:a,style:{padding:".5em"},type:g.CONFIGURATION_COMPONENT_TYPE.BUTTON_GROUP}})))))}},r.handleAxisClick=function(e){var t,n,a,i,s=r.props,u=s.addSelectedSecondaryStructure,c=s.data,d=s.removeSecondaryStructure,p=s.selectedSecondaryStructures;try{for(var h=l(c.secondaryStructures),m=h.next();!m.done;m=h.next()){var g=m.value;try{for(var f=(a=void 0,l(g)),b=f.next();!b.done;b=f.next()){var y=b.value;y.contains.apply(y,o(e.selectedPoints))&&(p.includes(y)?d(y):u(y))}}catch(e){a={error:e}}finally{try{b&&!b.done&&(i=f.return)&&i.call(f)}finally{if(a)throw a.error}}}}catch(e){t={error:e}}finally{try{m&&!m.done&&(n=h.return)&&n.call(h)}finally{if(t)throw t.error}}},r.handleAxisEnter=function(e){var t,n,a,i,s=r.props,u=s.addHoveredSecondaryStructure,c=s.hoveredSecondaryStructures,d=s.data;try{for(var p=l(d.secondaryStructures),h=p.next();!h.done;h=p.next()){var m=h.value,g=function(t){t.contains.apply(t,o(e.selectedPoints))&&!c.find((function(e){return t.isEqual(e)}))&&u(t)};try{for(var f=(a=void 0,l(m)),b=f.next();!b.done;b=f.next()){g(b.value)}}catch(e){a={error:e}}finally{try{b&&!b.done&&(i=f.return)&&i.call(f)}finally{if(a)throw a.error}}}}catch(e){t={error:e}}finally{try{h&&!h.done&&(n=p.return)&&n.call(p)}finally{if(t)throw t.error}}},r.handleAxisLeave=function(e){var t,n,a,i,s=r.props,u=s.data,c=s.hoveredSecondaryStructures,d=s.removeHoveredSecondaryStructure;try{for(var p=l(u.secondaryStructures),h=p.next();!h.done;h=p.next()){var m=h.value,g=function(t){var n=c.find((function(e){return t.isEqual(e)}));t.contains.apply(t,o(e.selectedPoints))&&n&&d(n)};try{for(var f=(a=void 0,l(m)),b=f.next();!b.done;b=f.next()){g(b.value)}}catch(e){a={error:e}}finally{try{b&&!b.done&&(i=f.return)&&i.call(f)}finally{if(a)throw a.error}}}}catch(e){t={error:e}}finally{try{h&&!h.done&&(n=p.return)&&n.call(p)}finally{if(t)throw t.error}}},r.onMouseClick=function(e){return function(t){var n;t.isAxis()?r.handleAxisClick(t):e(((n={})[t.selectedPoints.sort().toString()]=t.selectedPoints,n))}},r.onMouseEnter=function(e){return function(t){t.isAxis()?r.handleAxisEnter(t):e(t.selectedPoints)}},r.onMouseLeave=function(e){return function(t){t.isAxis()?r.handleAxisLeave(t):e&&e(t.selectedPoints)}},r.onMouseSelect=function(e){return function(t){e&&e(t.selectedPoints.map((function(e){return e})))}},r}return a(n,e),n.prototype.componentDidMount=function(){this.setupPointsToPlot(this.props.data.couplingScores)},n.prototype.componentDidUpdate=function(e){var t=this.props,n=t.data,r=t.lockedResiduePairs;n===e.data&&r===e.lockedResiduePairs||this.setupPointsToPlot(n.couplingScores)},n.prototype.render=function(){var e=this.state.pointsToPlot;return this.renderContactMapChart(e)},n.prototype.renderContactMapChart=function(e){var t=this.props,n=t.addHoveredResidues,r=t.candidateResidues,a=t.configurations,i=t.data,s=t.height,o=t.isDataLoading,l=t.onBoxSelection,c=t.removeHoveredResidues,d=t.secondaryStructureColors,p=t.selectedSecondaryStructures,h=t.showConfigurations,g=t.toggleLockedResiduePair,f=t.width,b=i.couplingScores.totalContacts>=1?i.couplingScores.residueIndexRange.max:void 0;return u.createElement(m.ComponentCard,{componentName:"Contact Map",dockItems:this.getDockConfigs(),isDataReady:i.couplingScores.allContacts.length>=1,menuItems:this.getMenuConfigs(a,e)},u.createElement(m.ContactMapChart,{candidateResidues:r,contactData:e,height:s,isDataLoading:o,onClickCallback:this.onMouseClick(g),onHoverCallback:this.onMouseEnter(n),onSelectedCallback:this.onMouseSelect(l),onUnHoverCallback:this.onMouseLeave(c),range:b,secondaryStructures:i.secondaryStructures?i.secondaryStructures:[],secondaryStructureColors:d,selectedSecondaryStructures:[p],showConfigurations:h,width:f}))},n.prototype.setupPointsToPlot=function(e){var t=this.props,n=t.data,r=t.lockedResiduePairs,a=t.hoveredResidues,s=t.formattedPoints,l=t.observedColor,u=t.highlightColor,c={selected:"Selected Residue Pair",structure:(n.pdbData?n.pdbData.experimental?"X-ray":"Inferred":"Unknown")+" Structure Contact"},d=e.getObservedContacts().sort((function(e,t){return e.dist&&t.dist?t.dist-e.dist:0})),p=new(Array.bind.apply(Array,o([void 0,m.generateChartDataEntry("text",{start:l,end:"rgb(247,251,255)"},"Structure Contact ("+(n.couplingScores.isDerivedFromCouplingScores?"Coupling Scores":"PDB")+")",c.structure,4,d,{text:d.map(f.generateCouplingScoreHoverText)})],s))),h=new Array;h.push.apply(h,o(this.generateHoveredResiduePairs(a))),h.push.apply(h,o(this.generateLockedResiduePairs(r))),p.push(this.generateSelectedResiduesChartData(u,c.selected,4,h)),this.setState(i(i({},this.state),{pointsToPlot:p.map(this.applySavedNodeOptions)}))},n.defaultProps={addHoveredResidues:f.EMPTY_FUNCTION,addHoveredSecondaryStructure:f.EMPTY_FUNCTION,addSelectedSecondaryStructure:f.EMPTY_FUNCTION,candidateResidues:[],configurations:new Array,data:{couplingScores:new g.CouplingContainer,pdbData:{experimental:void 0,predicted:void 0},secondaryStructures:new Array},enableSliders:!0,formattedPoints:new Array,height:"100%",highlightColor:"#ff8800",hoveredResidues:[],hoveredSecondaryStructures:[],isDataLoading:!1,lockedResiduePairs:{},observedColor:"#0000ff",removeAllLockedResiduePairs:f.EMPTY_FUNCTION,removeAllSelectedSecondaryStructures:f.EMPTY_FUNCTION,removeHoveredResidues:f.EMPTY_FUNCTION,removeHoveredSecondaryStructure:f.EMPTY_FUNCTION,removeSecondaryStructure:f.EMPTY_FUNCTION,selectedSecondaryStructures:[],showConfigurations:!0,toggleLockedResiduePair:f.EMPTY_FUNCTION,width:"100%"},n}(u.Component);t.ContactMapClass=y;t.ContactMap=c.connect((function(e){return{candidateResidues:b.getCandidates(e).toArray(),hoveredResidues:b.getHovered(e).toArray(),hoveredSecondaryStructures:b.selectCurrentItems(e,"secondaryStructure/hovered").toArray(),lockedResiduePairs:b.getLocked(e).toJS(),selectedSecondaryStructures:b.selectCurrentItems(e,"secondaryStructure/selected").toArray()}}),(function(e){return d.bindActionCreators({addHoveredResidues:h.createResiduePairActions().hovered.set,addHoveredSecondaryStructure:h.createContainerActions("secondaryStructure/hovered").add,addSelectedSecondaryStructure:h.createContainerActions("secondaryStructure/selected").add,removeAllLockedResiduePairs:h.createResiduePairActions().locked.clear,removeAllSelectedSecondaryStructures:h.createContainerActions("secondaryStructure/selected").clear,removeHoveredResidues:h.createResiduePairActions().hovered.clear,removeHoveredSecondaryStructure:h.createContainerActions("secondaryStructure/hovered").remove,removeSecondaryStructure:h.createContainerActions("secondaryStructure/selected").remove,toggleLockedResiduePair:h.createResiduePairActions().locked.toggle},e)}))(y);try{y.displayName="ContactMapClass",y.__docgenInfo={description:"",displayName:"ContactMapClass",props:{candidateResidues:{defaultValue:null,description:"",name:"candidateResidues",required:!0,type:{name:"any[]"}},configurations:{defaultValue:null,description:"",name:"configurations",required:!0,type:{name:"any[]"}},data:{defaultValue:{value:"{\n      couplingScores: new CouplingContainer(),\n      pdbData: { experimental: undefined, predicted: undefined },\n      secondaryStructures: new Array<SECONDARY_STRUCTURE>(),\n    }"},description:"",name:"data",required:!1,type:{name:"any"}},formattedPoints:{defaultValue:null,description:"",name:"formattedPoints",required:!0,type:{name:"any[]"}},height:{defaultValue:{value:"100%"},description:"",name:"height",required:!1,type:{name:"string | number"}},highlightColor:{defaultValue:{value:"#ff8800"},description:"",name:"highlightColor",required:!1,type:{name:"string"}},hoveredResidues:{defaultValue:null,description:"",name:"hoveredResidues",required:!0,type:{name:"any[]"}},hoveredSecondaryStructures:{defaultValue:null,description:"",name:"hoveredSecondaryStructures",required:!0,type:{name:"any[]"}},isDataLoading:{defaultValue:{value:"false"},description:"",name:"isDataLoading",required:!1,type:{name:"boolean"}},lockedResiduePairs:{defaultValue:{value:"{}"},description:"",name:"lockedResiduePairs",required:!1,type:{name:"any"}},observedColor:{defaultValue:{value:"#0000ff"},description:"",name:"observedColor",required:!1,type:{name:"string"}},secondaryStructureColors:{defaultValue:null,description:"",name:"secondaryStructureColors",required:!1,type:{name:"any"}},selectedSecondaryStructures:{defaultValue:null,description:"",name:"selectedSecondaryStructures",required:!0,type:{name:"any"}},showConfigurations:{defaultValue:{value:"true"},description:"",name:"showConfigurations",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}},width:{defaultValue:{value:"100%"},description:"",name:"width",required:!1,type:{name:"string | number"}},addHoveredResidues:{defaultValue:null,description:"",name:"addHoveredResidues",required:!0,type:{name:"(residues: any[]) => void"}},addHoveredSecondaryStructure:{defaultValue:null,description:"",name:"addHoveredSecondaryStructure",required:!0,type:{name:"(section: any) => void"}},addSelectedSecondaryStructure:{defaultValue:null,description:"",name:"addSelectedSecondaryStructure",required:!0,type:{name:"(section: any) => void"}},removeAllLockedResiduePairs:{defaultValue:null,description:"",name:"removeAllLockedResiduePairs",required:!0,type:{name:"() => void"}},removeAllSelectedSecondaryStructures:{defaultValue:null,description:"",name:"removeAllSelectedSecondaryStructures",required:!0,type:{name:"() => void"}},removeSecondaryStructure:{defaultValue:null,description:"",name:"removeSecondaryStructure",required:!0,type:{name:"(section: any) => void"}},removeHoveredResidues:{defaultValue:null,description:"",name:"removeHoveredResidues",required:!0,type:{name:"() => void"}},removeHoveredSecondaryStructure:{defaultValue:null,description:"",name:"removeHoveredSecondaryStructure",required:!0,type:{name:"(section: any) => void"}},onBoxSelection:{defaultValue:null,description:"",name:"onBoxSelection",required:!1,type:{name:"(residues: any[]) => void"}},toggleLockedResiduePair:{defaultValue:null,description:"",name:"toggleLockedResiduePair",required:!0,type:{name:"(residuePair: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/ContactMap.tsx#ContactMapClass"]={docgenInfo:y.__docgenInfo,name:"ContactMapClass",path:"src/component/ContactMap.tsx#ContactMapClass"})}catch(e){}try{t.ContactMap.displayName="ContactMap",t.ContactMap.__docgenInfo={description:"",displayName:"ContactMap",props:{style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}},secondaryStructureColors:{defaultValue:null,description:"",name:"secondaryStructureColors",required:!1,type:{name:"any"}},onBoxSelection:{defaultValue:null,description:"",name:"onBoxSelection",required:!1,type:{name:"(residues: any[]) => void"}},data:{defaultValue:null,description:"",name:"data",required:!1,type:{name:"any"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}},isDataLoading:{defaultValue:null,description:"",name:"isDataLoading",required:!1,type:{name:"boolean"}},configurations:{defaultValue:null,description:"",name:"configurations",required:!1,type:{name:"any[]"}},formattedPoints:{defaultValue:null,description:"",name:"formattedPoints",required:!1,type:{name:"any[]"}},highlightColor:{defaultValue:null,description:"",name:"highlightColor",required:!1,type:{name:"string"}},observedColor:{defaultValue:null,description:"",name:"observedColor",required:!1,type:{name:"string"}},showConfigurations:{defaultValue:null,description:"",name:"showConfigurations",required:!1,type:{name:"boolean"}},candidateResidues:{defaultValue:null,description:"",name:"candidateResidues",required:!1,type:{name:"any[]"}},hoveredResidues:{defaultValue:null,description:"",name:"hoveredResidues",required:!1,type:{name:"any[]"}},hoveredSecondaryStructures:{defaultValue:null,description:"",name:"hoveredSecondaryStructures",required:!1,type:{name:"any[]"}},lockedResiduePairs:{defaultValue:null,description:"",name:"lockedResiduePairs",required:!1,type:{name:"{}"}},selectedSecondaryStructures:{defaultValue:null,description:"",name:"selectedSecondaryStructures",required:!1,type:{name:"any[]"}},addHoveredResidues:{defaultValue:null,description:"",name:"addHoveredResidues",required:!1,type:{name:"any"}},removeAllLockedResiduePairs:{defaultValue:null,description:"",name:"removeAllLockedResiduePairs",required:!1,type:{name:"any"}},removeAllSelectedSecondaryStructures:{defaultValue:null,description:"",name:"removeAllSelectedSecondaryStructures",required:!1,type:{name:"any"}},removeHoveredResidues:{defaultValue:null,description:"",name:"removeHoveredResidues",required:!1,type:{name:"any"}},addHoveredSecondaryStructure:{defaultValue:null,description:"",name:"addHoveredSecondaryStructure",required:!1,type:{name:"any"}},addSelectedSecondaryStructure:{defaultValue:null,description:"",name:"addSelectedSecondaryStructure",required:!1,type:{name:"any"}},removeSecondaryStructure:{defaultValue:null,description:"",name:"removeSecondaryStructure",required:!1,type:{name:"any"}},removeHoveredSecondaryStructure:{defaultValue:null,description:"",name:"removeHoveredSecondaryStructure",required:!1,type:{name:"any"}},toggleLockedResiduePair:{defaultValue:null,description:"",name:"toggleLockedResiduePair",required:!1,type:{name:"any"}},enableSliders:{defaultValue:null,description:"",name:"enableSliders",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/ContactMap.tsx#ContactMap"]={docgenInfo:t.ContactMap.__docgenInfo,name:"ContactMap",path:"src/component/ContactMap.tsx#ContactMap"})}catch(e){}},"./src/component/FeatureViewer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},l=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var u=n("./node_modules/react/index.js"),c=n("./node_modules/immutable/dist/immutable.js"),d=n("./src/component/index.ts"),p=n("./src/data/index.ts"),h=function(e){function t(t){var n=e.call(this,t)||this;return n.onFeatureHover=function(e){for(var t,r,a=n.props,i=a.data,o=a.getTextForHover,l=-1,u=[e.selectedPoints[0],e.selectedPoints[2]],c=0;c<i.length;++c)try{for(var d=(t=void 0,s(u)),p=d.next();!p.done;p=d.next()){var h=p.value;i[c].contains(h)&&(l=c)}}catch(e){t={error:e}}finally{try{p&&!p.done&&(r=d.return)&&r.call(d)}finally{if(t)throw t.error}}n.setState({hoverAnnotationText:o&&l>=0?o(i[l].label,l):"",hoveredFeatureIndex:l})},n.onFeatureClick=function(e){var t=n.props,r=t.data,a=t.onClickCallback,i=n.deriveFeatureIndices(r,e.selectedPoints);a&&a(n.deriveSelectedFeatures(r,i.toArray())),n.setState({selectedFeatureIndices:i,selectedRange:new p.Bioblocks1DSection("selection",-1,-1)})},n.onFeatureSelect=function(e){var t=n.props,r=t.data,a=t.onSelectCallback,i=n.deriveFeatureIndices(r,e.selectedPoints),s=e.plotlyEvent,o=n.state.selectedRange;if(s.range){var l={end:(o=new p.Bioblocks1DSection("selection",Math.floor(s.range.x[0]),Math.ceil(s.range.x[1]))).end,featuresSelected:n.deriveSelectedFeatures(r,i.toArray()),length:o.length,start:o.start};a&&a(l)}n.setState({selectedFeatureIndices:i,selectedRange:o})},n.deriveFeatureIndices=function(e,t){for(var n=c.Set(),r=function(r){var a=t[r];e.reduce((function(e,t,n){return t.contains(a)?l(e,[n]):e}),new Array).forEach((function(e){n=n.add(e)}))},a=0;a<t.length;a+=2)r(a);return n},n.deriveSelectedFeatures=function(e,t){return t.map((function(t){return new p.Bioblocks1DSection(e[t].label,e[t].start,e[t].end)}))},n.state={hoverAnnotationText:"",hoveredFeatureIndex:-1,plotlyConfig:{showAxisDragHandles:!1,showAxisRangeEntryBoxes:!1},plotlyData:[],plotlyLayout:{},selectedFeatureIndices:c.Set(),selectedRange:new p.Bioblocks1DSection("selection",-1,-1)},n}return a(t,e),t.getDerivedStateFromProps=function(e,n){var r=e.backgroundBar,a=e.data,i=e.height,s=e.maxLength,o=e.showGrouped,u=e.title,c=e.width,d=n.hoverAnnotationText,h=n.hoveredFeatureIndex,m=n.selectedRange,g=-1,f=a.map((function(e,n){var r=o?n:a.findIndex((function(t){return 0===e.label.localeCompare(t.label)}));return g=Math.max(g,r),t.getPlotlyDataObject(e,o,r)})),b=t.getPlotlyBackgroundBarObject(r||new p.TintedBioblocks1DSection("",0,a.reduce((function(e,t){return Math.max(e,t.end)}),-1),"#b9bcb6"),o,g/2),y={fill:"toself",hoverinfo:"none",line:{width:0},marker:{color:"#f9f69f",opacity:.5},mode:"lines+markers",showlegend:!1,x:-1!==m.start&&-1!==m.end?[m.start,m.end,m.end,m.start]:[],y:[0,0,g+1,g+1]},S=l([b,y],f);return{plotlyData:S,plotlyLayout:{annotations:t.getAnnotationPlotlyData(h,d,S[h]),dragmode:"select",height:i,hovermode:"closest",margin:{b:30,t:60},showlegend:!1,title:u,width:c,xaxis:a.length>0?{autorange:!1,fixedrange:!0,range:[0,s||a.reduce((function(e,t){return Math.max(e,t.end)}),-1)+200],showgrid:!1,tick0:0,tickmode:"auto",ticks:"outside"}:{visible:!1},yaxis:{autorange:!1,fixedrange:!0,range:[-.25,o?2:a.length],visible:!1}}}},t.getBoxForBioblocksSection=function(e){return[e.end-(e.end-e.start)/2,null,e.start,e.start,e.end,e.end,e.start]},t.prototype.render=function(){var e=this.props,t=e.width,n=e.height,r=this.state,a=r.plotlyConfig,i=r.plotlyData,s=r.plotlyLayout;return u.createElement("div",{style:{height:n,width:t}},u.createElement(d.PlotlyChart,{config:a,data:i,layout:s,onClickCallback:this.onFeatureClick,onHoverCallback:this.onFeatureHover,onSelectedCallback:this.onFeatureSelect,showLoader:!1}))},t.defaultProps={data:[],height:200,showGrouped:!1,title:"",width:600},t.getAnnotationPlotlyData=function(e,t,n){return e>=0&&n.x&&n.y?[{align:"left",arrowhead:0,arrowsize:1,arrowwidth:1,ax:0,ay:-25,bgcolor:"#ffffff",bordercolor:"#000000",borderpad:5,showarrow:!0,text:t,x:n.x[0],xref:"x",y:n.y[n.y.length-3],yref:"y"}]:[]},t.getPlotlyBackgroundBarObject=function(e,n,r){return i(i({},t.getPlotlyDataObject(e,n,r)),{y:n?[.25,null,.25,.75,.75,.25,.25]:[r+.5,null,r+1,r,r,r+1,r+1]})},t.getPlotlyDataObject=function(e,n,r){return{fill:"toself",fillcolor:e.color.toString(),hoverinfo:"none",hoveron:"fills",line:{width:0},mode:"text+lines",name:""+e.label,text:[e.label],textfont:{color:["#FFFFFF"]},type:"scatter",x:t.getBoxForBioblocksSection(e),y:n?[.5,null,0,1,1,0,0]:[r+.5,null,r+1,r,r,r+1,r+1]}},t}(u.Component);t.FeatureViewer=h;try{h.displayName="FeatureViewer",h.__docgenInfo={description:"",displayName:"FeatureViewer",props:{backgroundBar:{defaultValue:null,description:"",name:"backgroundBar",required:!1,type:{name:"any"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"any[]"}},height:{defaultValue:{value:"200"},description:"",name:"height",required:!1,type:{name:"number"}},maxLength:{defaultValue:null,description:"",name:"maxLength",required:!1,type:{name:"number"}},showGrouped:{defaultValue:{value:"false"},description:"",name:"showGrouped",required:!1,type:{name:"boolean"}},title:{defaultValue:{value:""},description:"",name:"title",required:!1,type:{name:"string"}},width:{defaultValue:{value:"600"},description:"",name:"width",required:!1,type:{name:"number"}},getTextForHover:{defaultValue:null,description:"",name:"getTextForHover",required:!1,type:{name:"(label: string, index: number) => string"}},onClickCallback:{defaultValue:null,description:"",name:"onClickCallback",required:!1,type:{name:"(section: any[]) => void"}},onSelectCallback:{defaultValue:null,description:"",name:"onSelectCallback",required:!1,type:{name:"(selection: IFeatureRangeSelection) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/FeatureViewer.tsx#FeatureViewer"]={docgenInfo:h.__docgenInfo,name:"FeatureViewer",path:"src/component/FeatureViewer.tsx#FeatureViewer"})}catch(e){}},"./src/component/NGLComponent.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e},l=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var u=n("./node_modules/lodash/lodash.js"),c=n("./node_modules/ngl/dist/ngl.esm.js"),d=n("./node_modules/react/index.js"),p=n("./node_modules/semantic-ui-react/dist/es/index.js"),h=n("./src/data/AminoAcid.ts"),m=n("./src/component/index.ts"),g=n("./src/data/index.ts"),f=n("./src/helper/index.ts");t.initialNGLState={activeRepresentations:{experimental:{reps:new Array,structType:"default"},predicted:{reps:new Array,structType:"cartoon"}},isDistRepEnabled:!0,isMovePickEnabled:!1,stage:void 0,superpositionStatus:"NONE"};var b=function(e){function n(n){var r=e.call(this,n)||this;return r.state=t.initialNGLState,r.prevCanvas=null,r.canvas=null,r.addNewHoveredResidue=function(e,t){var n=e.atom||e.closestBondAtom,a=r.props.addHoveredResidues,i=h.AminoAcid.fromThreeLetterCode(n.resname),s=i?i.singleLetterCode:n.resname;t.tooltip.textContent=""+n.resno+s,a([n.resno])},r.canvasRefCallback=function(e){if(r.prevCanvas=r.canvas,r.canvas=e,null===r.prevCanvas&&null!==r.canvas&&void 0!==r.state.stage){var t=r.state.stage.viewerControls.getOrientation();r.state.stage.removeAllComponents();var n=r.props,a=n.experimentalProteins,i=n.predictedProteins,s=r.state.superpositionStatus,l=o(a,i),u=r.state.stage.parameters,c=r.generateStage(r.canvas,u);l.map((function(e){r.initData(c,e.nglStructure)})),r.handleSuperposition(c,s),c.viewerControls.orient(t),c.viewer.requestRender(),r.setState({stage:c})}},r.centerCamera=function(){var e=r.state.stage;e&&e.autoView()},r.generateStage=function(e,t){var n=new c.Stage(e,t);return n.mouseControls.add("hoverPick",(function(e,t){r.onHover(e,t)})),n.mouseControls.remove("clickPick-*",c.MouseActions.movePick),n.keyBehavior.domElement.focus=function(){},n},r.getDockItems=function(){var e="NONE"!==r.state.superpositionStatus;return[{isVisibleCb:function(){return r.props.selectedSecondaryStructures.length>=1||Object.values(r.props.lockedResiduePairs).length>=1||r.props.candidateResidues.length>=1},onClick:function(){r.props.removeAllLockedResiduePairs(),r.props.removeAllSelectedSecondaryStructures(),r.props.removeCandidateResidues(),r.props.removeHoveredResidues()},text:"Clear Selections"},{onClick:r.centerCamera,text:"Center View"},{isVisibleCb:function(){return r.props.experimentalProteins.length+r.props.predictedProteins.length>=2},onClick:r.onSuperpositionToggle,text:"Superimpose: "+(e?"On":"Off")},{onClick:r.switchCameraType,text:(r.state.stage&&"stereo"===r.state.stage.parameters.cameraType?"Disable":"Enable")+" Stereo"}]},r.getRepresentationConfigs=function(){var e=["default","spacefill","backbone","cartoon","surface","tube"];return{"Structure Representations":[{current:f.capitalizeFirstLetter(r.state.activeRepresentations.predicted.structType),name:"Predicted Structure Representation",onChange:function(t){var n=r.props.predictedProteins,a=r.state,s=a.activeRepresentations,o=a.stage;o&&(r.setState({activeRepresentations:i(i({},s),{predicted:r.updateRepresentation(o,e[t],n)})}),o.viewer.requestRender())},options:["Rainbow","Spacefill","Backbone","Cartoon","Surface","Tube"],type:g.CONFIGURATION_COMPONENT_TYPE.RADIO},{current:f.capitalizeFirstLetter(r.state.activeRepresentations.experimental.structType),name:"Experimental Structure Representation",onChange:function(t){var n=r.props.experimentalProteins,a=r.state,s=a.activeRepresentations,o=a.stage;o&&(r.setState({activeRepresentations:i(i({},s),{experimental:r.updateRepresentation(o,e[t],n)})}),o.viewer.requestRender())},options:["Rainbow","Spacefill","Backbone","Cartoon","Surface","Tube"],type:g.CONFIGURATION_COMPONENT_TYPE.RADIO}]}},r.getSettingsConfigurations=function(){var e=r.props.measuredProximity,t=r.state,n=t.isDistRepEnabled;return{"View Options":[{checked:t.isMovePickEnabled,name:"Zoom on Click",onChange:r.toggleMovePick,type:g.CONFIGURATION_COMPONENT_TYPE.CHECKBOX},{checked:n,name:"Display Distance in Ångström",onChange:r.toggleDistRep,type:g.CONFIGURATION_COMPONENT_TYPE.CHECKBOX},{current:e,name:"Proximity Metric",onChange:r.measuredProximityHandler,options:Object.values(g.CONTACT_DISTANCE_PROXIMITY).map(f.capitalizeEveryWord),type:g.CONFIGURATION_COMPONENT_TYPE.RADIO}]}},r.handleAtomClick=function(e){var t,n=r.props,a=n.addLockedResiduePair,i=n.addCandidateResidues,s=n.candidateResidues,l=n.removeCandidateResidues,u=e.atom||e.closestBondAtom;s.length>=1?(a(((t={})[o(s,[u.resno]).sort().toString()]=o(s,[u.resno]),t)),l()):i([u.resno])},r.handleBothSuperposition=function(e){for(var t,n,r=1;r<e.compList.length;++r)c.superpose(e.compList[r].object,e.compList[0].object,!0);try{for(var a=l(e.compList),i=a.next();!i.done;i=a.next()){var s=i.value;s.setPosition([0,0,0]),s.updateRepresentations({position:!0})}}catch(e){t={error:e}}finally{try{i&&!i.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}e.compList[0]?e.compList[0].autoView():e.autoView()},r.handleClickHover=function(e){r.props.hoveredResidues.forEach((function(t){r.handleHoveredDistances(t,e)}))},r.handleClickPick=function(e){var t=r.props.removeLockedResiduePair;e.picker&&"distance"===e.picker.type?t([e.distance.atom1.resno,e.distance.atom2.resno].sort().toString()):(e.atom||e.closestBondAtom)&&r.handleAtomClick(e)},r.handleHoveredDistances=function(e,t){var n,a,i=r.props,s=i.addLockedResiduePair,l=i.candidateResidues,u=i.removeCandidateResidues,c=i.removeNonLockedResidues,d=t.stage.mouseObserver,p=d.down,h=d.canvasPosition,m=d.position,g=[p,h,d.prevClickCP,d.prevPosition,m].map((function(n){return function(n,r){for(var a=Number.MAX_SAFE_INTEGER,i=n.atomOffset[e],s=n.atomCount[e],o=0;o<s;++o){var l=t.structure.getAtomProxy(i+o),u=t.stage.viewerControls.getPositionOnCanvas(l.positionToVector3());a=Math.min(a,r.distanceTo(u))}return a}(t.structure.residueStore,n)}));(void 0===a&&(a=100),g.filter((function(e){return e<a})).length>=1)?(s(((n={})[o(l,[e]).sort().toString()]=o(l,[e]),n)),u()):c()},r.handleStructureClick=function(e,t){var n=r.props,a=n.candidateResidues,i=n.hoveredResidues,s=n.removeNonLockedResidues;t?r.handleClickPick(t):a.length>=1&&i.length>=1?r.handleClickHover(e):s()},r.isExperimentalStructure=function(e){return!r.props.predictedProteins.find((function(t){return t.nglStructure.name===e.name}))},r.measuredProximityHandler=function(e){var t=r.props.onMeasuredProximityChange;t&&t(e)},r.onCanvasLeave=function(){(0,r.props.removeNonLockedResidues)()},r.onClick=function(e){var t,n,a=r.state.stage,i=r.props,s=i.candidateResidues,o=i.hoveredResidues,u=i.removeNonLockedResidues;if(a)if(e)r.handleClickPick(e);else if(s.length>=1&&o.length>=1)try{for(var c=l(a.compList),d=c.next();!d.done;d=c.next()){var p=d.value;r.handleClickHover(p)}}catch(e){t={error:e}}finally{try{d&&!d.done&&(n=c.return)&&n.call(c)}finally{if(t)throw t.error}}else u()},r.onKeyDown=function(e){e.preventDefault();27!==e.which&&27!==e.keyCode||(0,r.props.removeNonLockedResidues)()},r.onResizeHandler=function(e){var t=r.props.onResize,n=r.state.stage;n&&n.handleResize(),t&&t(e)},r.onSuperpositionToggle=function(e){"NONE"===r.state.superpositionStatus?r.setState({superpositionStatus:"BOTH"}):r.setState({superpositionStatus:"NONE"})},r.switchCameraType=function(){var e=r.state.stage;e&&("stereo"===e.parameters.cameraType?e.setParameters({cameraType:"perspective"}):e.setParameters({cameraFov:65,cameraType:"stereo"}),r.forceUpdate())},r.toggleDistRep=function(e){var t=r.state.isDistRepEnabled;r.setState({isDistRepEnabled:!t})},r.toggleMovePick=function(e){var t=r.state,n=t.isMovePickEnabled,a=t.stage;a&&(n?a.mouseControls.remove("clickPick-*",c.MouseActions.movePick):a.mouseControls.add("clickPick-left",c.MouseActions.movePick),r.setState({isMovePickEnabled:!n}))},r.updateRepresentation=function(e,t,n){var a,i,s={reps:new Array,structType:t},u=function(a){var i;n.find((function(e){return e.nglStructure.name===a.name}))&&(a.removeAllRepresentations(),"default"===t?e.defaultFileRepresentation(a):a.addRepresentation(t),(i=s.reps).push.apply(i,o(r.deriveActiveRepresentations(a))))};try{for(var c=l(e.compList),d=c.next();!d.done;d=c.next()){u(d.value)}}catch(e){a={error:e}}finally{try{d&&!d.done&&(i=c.return)&&i.call(c)}finally{if(a)throw a.error}}return s},r}return a(n,e),n.prototype.componentDidMount=function(){var e=this,t=this.props,n=t.backgroundColor,r=t.experimentalProteins,a=t.predictedProteins;if(this.canvas){var i=this.generateStage(this.canvas,{backgroundColor:n});i.removeAllComponents(),o(r,a).map((function(t){e.initData(i,t.nglStructure)})),this.setState({stage:i})}window.addEventListener("resize",this.onResizeHandler,!1)},n.prototype.componentWillUnmount=function(){var e=this.state.stage;e&&(e.viewer.renderer.forceContextLoss(),e.dispose(),this.setState({activeRepresentations:t.initialNGLState.activeRepresentations,stage:void 0})),window.removeEventListener("resize",this.onResizeHandler)},n.prototype.componentDidUpdate=function(e,t){var n=this,r=this.props,a=r.candidateResidues,s=r.experimentalProteins,l=r.hoveredResidues,u=r.hoveredSecondaryStructures,c=r.lockedResiduePairs,d=r.predictedProteins,p=r.measuredProximity,h=r.selectedSecondaryStructures,m=this.state,g=m.isDistRepEnabled,f=m.stage,b=m.superpositionStatus,y=o(s,d);(f&&y.length!==o(e.experimentalProteins,e.predictedProteins).length&&(f.removeAllComponents(),y.map((function(e){n.initData(f,e.nglStructure)})),this.handleSuperposition(f,b)),f&&f.compList.length>=1)&&(b!==t.superpositionStatus&&this.handleSuperposition(f,b),(a!==e.candidateResidues||l!==e.hoveredResidues||u!==e.hoveredSecondaryStructures||g!==t.isDistRepEnabled||c!==e.lockedResiduePairs||p!==e.measuredProximity||h!==e.selectedSecondaryStructures)&&this.setState({activeRepresentations:i({},this.handleRepresentationUpdate(f))}),f.viewer.requestRender())},n.prototype.render=function(){var e=this.props,t=e.experimentalProteins,n=e.height,r=e.isDataLoading,a=e.menuItems,s=e.predictedProteins,l=e.style,u=e.width,c=i(i({},l),{height:n,width:u});return d.createElement(m.ComponentCard,{componentName:"NGL Viewer",dockItems:this.getDockItems(),isDataReady:t.length>=1||s.length>=1,menuItems:o(a,[{component:{configs:i(i({},this.getSettingsConfigurations()),this.getRepresentationConfigs()),name:"POPUP",props:{trigger:d.createElement(p.Icon,{name:"setting"})}},description:"Settings"}])},d.createElement("div",{className:"NGLComponent",style:c},d.createElement(p.Dimmer,{active:r},d.createElement(p.Loader,null)),d.createElement("div",{className:"NGLCanvas",onKeyDown:this.onKeyDown,onMouseLeave:this.onCanvasLeave,ref:this.canvasRefCallback,role:"img",style:{height:"100%",width:"100%"}})))},n.prototype.addStructureToStage=function(e,t){var n=t.addComponentFromObject(e),r=this.props.predictedProteins,a=this.state.activeRepresentations;t.signals.clicked.add(this.onClick),r.find((function(e){return e.nglStructure.name===n.name}))?("default"===a.predicted.structType?t.defaultFileRepresentation(n):n.addRepresentation(a.predicted.structType),this.setState({activeRepresentations:{experimental:i({},a.experimental),predicted:i(i({},a.predicted),{reps:o(this.deriveActiveRepresentations(n))})}})):("default"===a.experimental.structType?t.defaultFileRepresentation(n):n.addRepresentation(a.experimental.structType),this.setState({activeRepresentations:{experimental:i(i({},a.experimental),{reps:o(this.deriveActiveRepresentations(n))}),predicted:i({},a.predicted)}})),t.viewer.requestRender()},n.prototype.deriveActiveRepresentations=function(e){var t=this.props,n=t.candidateResidues,r=t.hoveredResidues,a=t.hoveredSecondaryStructures,i=t.lockedResiduePairs,s=t.selectedSecondaryStructures;return o(this.highlightCandidateResidues(e,o(n,r).filter((function(e,t,n){return n.indexOf(e)===t})).sort()),this.highlightLockedDistancePairs(e,i),this.highlightSecondaryStructures(e,o(a,s)))},n.prototype.getDistanceRepForResidues=function(e,t){var n=this.props,r=n.experimentalProteins,a=n.predictedProteins,i=n.measuredProximity,s=this.state.isDistRepEnabled,l=o(r,a).find((function(t){return t.nglStructure.name===e.name}));if(i===g.CONTACT_DISTANCE_PROXIMITY.C_ALPHA)return f.createDistanceRepresentation(e,t.join(".CA, ")+".CA",s);if(l){var u=l.getMinDistBetweenResidues(t[0],t[1]),c=u.atomIndexI,d=u.atomIndexJ;return f.createDistanceRepresentation(e,[c,d],s)}},n.prototype.handleRepresentationUpdate=function(e){var t,n,r,a,i,s,u=this.state.activeRepresentations,c={experimental:{reps:new Array,structType:u.experimental.structType},predicted:{reps:new Array,structType:u.predicted.structType}};try{for(var d=l(e.compList),p=d.next();!p.done;p=d.next()){var h=p.value,m=this.isExperimentalStructure(h);try{for(var g=(r=void 0,l(o(u.experimental.reps,u.predicted.reps))),f=g.next();!f.done;f=g.next()){var b=f.value;h.reprList.includes(b)&&h.removeRepresentation(b)}}catch(e){r={error:e}}finally{try{f&&!f.done&&(a=g.return)&&a.call(g)}finally{if(r)throw r.error}}m?(i=c.experimental.reps).push.apply(i,o(this.deriveActiveRepresentations(h))):(s=c.predicted.reps).push.apply(s,o(this.deriveActiveRepresentations(h)))}}catch(e){t={error:e}}finally{try{p&&!p.done&&(n=d.return)&&n.call(d)}finally{if(t)throw t.error}}return c},n.prototype.handleSuperposition=function(e,t){"BOTH"===t?this.handleBothSuperposition(e):"NONE"===t&&(e.compList.forEach((function(e,t){e.setPosition([50*t,0,0]),e.updateRepresentations({position:!0})})),e.autoView())},n.prototype.highlightCandidateResidues=function(e,t){var n=new Array;if(t.length>=1&&(n.push(f.createBallStickRepresentation(e,t)),t.length>=2)){var r=this.getDistanceRepForResidues(e,t);r&&n.push(r)}return n},n.prototype.highlightLockedDistancePairs=function(e,t){var n,r,a=new Array;try{for(var i=l(Object.values(t)),s=i.next();!s.done;s=i.next()){var o=s.value;if(a.push(f.createBallStickRepresentation(e,o)),o.length>=2){var u=this.getDistanceRepForResidues(e,o);u&&a.push(u)}}}catch(e){n={error:e}}finally{try{s&&!s.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}return a},n.prototype.highlightSecondaryStructures=function(e,t){var n,r,a=new Array;try{for(var i=l(t),s=i.next();!s.done;s=i.next()){var o=s.value;a.push(f.createSecStructRepresentation(e,o))}}catch(e){n={error:e}}finally{try{s&&!s.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}return a},n.prototype.initData=function(e,t){t&&this.addStructureToStage(u.cloneDeep(t),e),e.viewer.requestRender()},n.prototype.onHover=function(e,t){var n=this.props,r=n.candidateResidues,a=n.hoveredResidues,i=n.removeHoveredResidues,s=this.state.stage;s&&(t&&(t.atom||t.closestBondAtom)?this.addNewHoveredResidue(t,s):0===r.length&&0!==a.length&&i())},n.defaultProps={addCandidateResidues:f.EMPTY_FUNCTION,addHoveredResidues:f.EMPTY_FUNCTION,addLockedResiduePair:f.EMPTY_FUNCTION,backgroundColor:"#ffffff",candidateResidues:[],experimentalProteins:[],height:"92%",hoveredResidues:[],hoveredSecondaryStructures:[],isDataLoading:!1,lockedResiduePairs:{},measuredProximity:g.CONTACT_DISTANCE_PROXIMITY.C_ALPHA,menuItems:[],onMeasuredProximityChange:f.EMPTY_FUNCTION,onResize:f.EMPTY_FUNCTION,predictedProteins:[],removeAllLockedResiduePairs:f.EMPTY_FUNCTION,removeAllSelectedSecondaryStructures:f.EMPTY_FUNCTION,removeCandidateResidues:f.EMPTY_FUNCTION,removeHoveredResidues:f.EMPTY_FUNCTION,removeLockedResiduePair:f.EMPTY_FUNCTION,removeNonLockedResidues:f.EMPTY_FUNCTION,selectedSecondaryStructures:[],width:"100%"},n}(d.Component);t.NGLComponent=b;try{b.displayName="NGLComponent",b.__docgenInfo={description:"",displayName:"NGLComponent",props:{backgroundColor:{defaultValue:{value:"#ffffff"},description:"",name:"backgroundColor",required:!1,type:{name:"string | number"}},candidateResidues:{defaultValue:null,description:"",name:"candidateResidues",required:!0,type:{name:"any[]"}},experimentalProteins:{defaultValue:null,description:"",name:"experimentalProteins",required:!0,type:{name:"any[]"}},height:{defaultValue:{value:"92%"},description:"",name:"height",required:!1,type:{name:"string | number"}},hoveredResidues:{defaultValue:null,description:"",name:"hoveredResidues",required:!0,type:{name:"any[]"}},hoveredSecondaryStructures:{defaultValue:null,description:"",name:"hoveredSecondaryStructures",required:!0,type:{name:"any[]"}},isDataLoading:{defaultValue:{value:"false"},description:"",name:"isDataLoading",required:!1,type:{name:"boolean"}},lockedResiduePairs:{defaultValue:{value:"{}"},description:"",name:"lockedResiduePairs",required:!1,type:{name:"any"}},measuredProximity:{defaultValue:{value:"CONTACT_DISTANCE_PROXIMITY.C_ALPHA"},description:"",name:"measuredProximity",required:!1,type:{name:"any"}},menuItems:{defaultValue:null,description:"",name:"menuItems",required:!0,type:{name:"any[]"}},predictedProteins:{defaultValue:null,description:"",name:"predictedProteins",required:!0,type:{name:"any[]"}},selectedSecondaryStructures:{defaultValue:null,description:"",name:"selectedSecondaryStructures",required:!0,type:{name:"any[]"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}},width:{defaultValue:{value:"100%"},description:"",name:"width",required:!1,type:{name:"string | number"}},addCandidateResidues:{defaultValue:null,description:"",name:"addCandidateResidues",required:!0,type:{name:"(residues: any[]) => void"}},addHoveredResidues:{defaultValue:null,description:"",name:"addHoveredResidues",required:!0,type:{name:"(residues: any[]) => void"}},addLockedResiduePair:{defaultValue:null,description:"",name:"addLockedResiduePair",required:!0,type:{name:"(residuePair: any) => void"}},onMeasuredProximityChange:{defaultValue:null,description:"",name:"onMeasuredProximityChange",required:!1,type:{name:"(value: number) => void"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"(event?: UIEvent) => void"}},removeAllLockedResiduePairs:{defaultValue:null,description:"",name:"removeAllLockedResiduePairs",required:!0,type:{name:"() => void"}},removeAllSelectedSecondaryStructures:{defaultValue:null,description:"",name:"removeAllSelectedSecondaryStructures",required:!0,type:{name:"() => void"}},removeHoveredResidues:{defaultValue:null,description:"",name:"removeHoveredResidues",required:!0,type:{name:"() => void"}},removeNonLockedResidues:{defaultValue:null,description:"",name:"removeNonLockedResidues",required:!0,type:{name:"() => void"}},removeLockedResiduePair:{defaultValue:null,description:"",name:"removeLockedResiduePair",required:!0,type:{name:"(key: string) => void"}},removeCandidateResidues:{defaultValue:null,description:"",name:"removeCandidateResidues",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/NGLComponent.tsx#NGLComponent"]={docgenInfo:b.__docgenInfo,name:"NGLComponent",path:"src/component/NGLComponent.tsx#NGLComponent"})}catch(e){}},"./src/component/TensorTComponent.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var s=n("./node_modules/react/index.js"),o=n("./src/component/index.ts"),l=function(e){function t(t){return e.call(this,t)||this}return a(t,e),t.prototype.render=function(){var e=this.props,t=e.onSelectedCallback,n=e.pointsToPlot;return s.createElement(o.PlotlyChart,{data:n,layout:i(i({},o.defaultPlotlyLayout),{dragmode:"select",margin:{b:20},xaxis:{autorange:!1,range:[0,1],showline:!0},yaxis:{autorange:!1,range:[0,1],showline:!0}}),onSelectedCallback:t})},t.defaultProps={pointsToPlot:[],style:{padding:0}},t}(s.Component);t.TensorTComponent=function(e){return s.createElement(l,i({},e))};try{t.TensorTComponent.displayName="TensorTComponent",t.TensorTComponent.__docgenInfo={description:"",displayName:"TensorTComponent",props:{onSelectedCallback:{defaultValue:null,description:"",name:"onSelectedCallback",required:!1,type:{name:"(event: any) => void"}},pointsToPlot:{defaultValue:null,description:"",name:"pointsToPlot",required:!1,type:{name:"any[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/TensorTComponent.tsx#TensorTComponent"]={docgenInfo:t.TensorTComponent.__docgenInfo,name:"TensorTComponent",path:"src/component/TensorTComponent.tsx#TensorTComponent"})}catch(e){}},"./src/component/UMAPVisualization.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var l=n("./node_modules/react/index.js"),u=n("./node_modules/umap-js/dist/index.js"),c=n("./node_modules/umap-js/dist/umap.js"),d=n("./node_modules/semantic-ui-react/dist/es/index.js"),p=n("./src/component/index.ts"),h=n("./src/data/index.ts"),m=n("./src/helper/index.ts"),g=function(e){function t(n){var r=e.call(this,n)||this;return r.getLegendStats=function(){var e=r.state.plotlyData;return{legendWidth:document.getElementsByClassName("legend")[0]?200:0,showLegend:e.length>=2||1===e.length&&(void 0===e[0].name||void 0!==e[0].name&&!e[0].name.includes("Unannotated"))}},r.render2D=function(e){var t=r.state,n=t.ranges,a=t.plotlyData;return l.createElement(p.PlotlyChart,{layout:i(i({},p.defaultPlotlyLayout),{dragmode:"zoom",legend:{itemdoubleclick:!1,traceorder:"grouped",x:1,y:.95},margin:{b:50,l:40},showlegend:e,xaxis:{autorange:!1,range:[Math.floor(n.minX),Math.ceil(n.maxX)],title:"Dim 1",titlefont:{size:12}},yaxis:{autorange:!1,range:[Math.floor(n.minY),Math.ceil(n.maxY)],title:"Dim 2",titlefont:{size:12}}}),data:a,onLegendClickCallback:r.onLegendClick,showLoader:!0})},r.render3D=function(e){var t=r.state,n=t.dragMode,a=t.ranges,s=t.plotlyData;return l.createElement(p.PlotlyChart,{config:i(i({},p.defaultPlotlyConfig),{displayModeBar:!1,displaylogo:!1,scrollZoom:!0}),layout:i(i({},p.defaultPlotlyLayout),{dragmode:n,legend:{itemdoubleclick:!1,traceorder:"grouped",x:.85,y:.95},margin:{b:10,l:0,r:5},scene:{aspectmode:"cube",xaxis:{autorange:!1,range:[Math.floor(a.minX),Math.ceil(a.maxX)],title:"Dim 1"},yaxis:{autorange:!1,range:[Math.floor(a.minY),Math.ceil(a.maxY)],title:"Dim 2"},zaxis:{autorange:!1,range:[Math.floor(a.minZ),Math.ceil(a.maxZ)],title:"Dim 3"}},showlegend:e}),data:s,onLegendClickCallback:r.onLegendClick,showLoader:!0})},r.getData=function(e,t,n){void 0===t&&(t=[]),void 0===n&&(n=[]);var a=e.length>0&&e[0].length>2?r.getData3D(e,t,n):r.getData2D(e,t,n),i=Object.values(a),s=i.splice(i.findIndex((function(e){return"Unannotated"===e.legendgroup})),1);return s.concat(i.sort((function(e,t){return t.x.length-e.x.length}))).map((function(e,t){var n=r.state.dataVisibility;if(e.visible=void 0===n[t]||!0===n[t]||"legendonly",e.name.length>20){var a=e.name.lastIndexOf("("),i=e.name.slice(a);e.name=e.name.length-i.length-1>20?e.name.slice(0,20-i.length+1)+"... "+i:e.name}return e}))},r.getData2D=function(e,t,n){return void 0===t&&(t=[]),void 0===n&&(n=[]),e.reduce((function(e,r,a){var i=t[a],s=i||{color:"gray",name:"Unannotated"},o=s.color,l=s.name;return e[l]?(e[l].text.push(n[a]),e[l].x.push(r[0]),e[l].y.push(r[1]),e[l].name=l+" ("+e[l].x.length+")"):e[l]={hoverinfo:"none",hovertemplate:"%{data.name}<br>%{text}<extra></extra>",legendgroup:"Unannotated"===l?"Unannotated":"Annotated",marker:{color:o||"gray"},mode:"markers",name:l+" (1)",text:[n[a]],type:"scattergl",x:[r[0]],y:[r[1]]},e}),{})},r.getData3D=function(e,t,n){return void 0===t&&(t=[]),void 0===n&&(n=[]),e.reduce((function(e,r,a){var i=t[a],s=i||{color:"gray",name:"Unannotated"},o=s.color,l=s.name;return e[l]?(e[l].text.push(n[a]),e[l].x.push(r[0]),e[l].y.push(r[1]),e[l].z.push(r[2]),e[l].name=l+" ("+(e[l].x.length+1)+")"):e[l]={hoverinfo:"none",hovertemplate:"%{data.name}<br>%{text}<extra></extra>",legendgroup:"Unannotated"===l?"Unannotated":"Annotated",marker:{color:o||"gray",size:4},mode:"markers",name:l+" (1)",text:[n[a]],type:"scatter3d",x:[r[0]],y:[r[1]],z:[r[2]]},e}),{})},r.get3DMenuItems=function(){var e=r.state,t=e.currentEpoch,n=e.dragMode,a=e.totalNumberEpochs,i=void 0===t||void 0===a||t<a;return[{component:{name:"BUTTON",onClick:i?m.EMPTY_FUNCTION:r.onZoomClick,props:{active:"zoom"===n,disabled:i}},description:"Zoom",iconName:"zoom"},{component:{name:"BUTTON",onClick:i?m.EMPTY_FUNCTION:r.onPanClick,props:{active:"pan"===n,disabled:i}},description:"Pan",iconName:"arrows alternate"},{component:{name:"BUTTON",onClick:i?m.EMPTY_FUNCTION:r.onOrbitClick,props:{active:"orbit"===n,disabled:i}},description:"Orbit",iconName:"sync alternate"},{component:{name:"BUTTON",onClick:i?m.EMPTY_FUNCTION:r.onTurntableClick,props:{active:"turntable"===n,disabled:i}},description:"Turntable",iconName:"weight"}]},r.onOrbitClick=function(){r.setState({dragMode:"orbit"})},r.onPanClick=function(){r.setState({dragMode:"pan"})},r.onTurntableClick=function(){r.setState({dragMode:"turntable"})},r.onZoomClick=function(){r.setState({dragMode:"zoom"})},r.getMenuItems=function(){var e=r.state.umapEmbedding,t=[{component:{configs:r.getSettingsConfigs(),name:"POPUP",props:{disabled:0===e.length,position:"top center",wide:!1}},description:"Settings"}];return e.length>=1&&3===e[0].length&&t.push.apply(t,o(r.get3DMenuItems())),t},r.getSettingsConfigs=function(){var e=r.state,t=e.numDimensions,n=e.numMinDist,a=e.numNeighbors,i=e.numSpread;return{Settings:[{marks:{0:"0",5:"5"},name:"Min Dist",onChange:r.onMinDistChange,step:.01,type:h.CONFIGURATION_COMPONENT_TYPE.SLIDER,values:{current:n,defaultValue:.99,max:5,min:0}},{marks:{0:"0",30:"30"},name:"Neighbors",onChange:r.onNumNeighborsChange,step:1,type:h.CONFIGURATION_COMPONENT_TYPE.SLIDER,values:{current:a,defaultValue:15,max:30,min:0}},{marks:{0:"0",10:"10"},name:"Spread",onChange:r.onSpreadChange,step:1,type:h.CONFIGURATION_COMPONENT_TYPE.SLIDER,values:{current:i,defaultValue:1,max:10,min:0}},{current:t.toString(),name:"Dimensions",onChange:r.onDimensionChange,options:["2","3"],type:h.CONFIGURATION_COMPONENT_TYPE.RADIO},{name:"Re-Run UMAP",onClick:r.executeUMAP,type:h.CONFIGURATION_COMPONENT_TYPE.BUTTON}]}},r.renderCategoryDropdown=function(){var e=r.props,t=e.currentLabel,n=e.labels;return n.length>=1&&l.createElement("div",{style:{float:"right",fontSize:"14px",paddingRight:"5px",position:"relative",width:"30%",zIndex:777}},"Annotation:"," ",l.createElement(d.Dropdown,{direction:"right",fluid:!1,inline:!0,onChange:r.onLabelChange,options:n.map((function(e){return{text:e,value:e}})),text:t})," ")},r.onDimensionChange=function(e){r.setState({numDimensions:0===e?2:3})},r.onLabelChange=function(e,t){var n=r.props.onLabelChange;r.setState({dataVisibility:{}}),n(e,t)},r.onMinDistChange=function(e){r.setState({numMinDist:e})},r.onNumNeighborsChange=function(e){r.setState({numNeighbors:e})},r.onSpreadChange=function(e){r.setState({numSpread:e})},r.executeUMAP=function(){var e=r.props,n=e.dataMatrix,a=e.distanceFn;clearTimeout(r.timeout1),clearTimeout(r.timeout2),r.setState({currentEpoch:void 0,plotlyData:new Array,ranges:t.initialState.ranges,totalNumberEpochs:void 0,umapEmbedding:[]});performance.now();r.timeout1=setTimeout((function(){var e=r.state,s=e.numDimensions,o=e.numNeighbors,l=e.numSpread,c=e.numMinDist,d=new u.UMAP({distanceFn:a,minDist:c,nComponents:s,nNeighbors:o,spread:l});if(0!==n.length&&0!==n[0].length){var p=d.initializeFit(n),h=function(e){if(e%r.props.numIterationsBeforeReRender==0&&e<p){var n=d.getEmbedding(),a=i({},t.initialState.ranges);n.forEach((function(e){a.maxX=Math.max(a.maxX,e[0]+2),a.maxY=Math.max(a.maxY,e[1]+2),a.maxZ=Math.max(a.maxZ,e[2]+2),a.minX=Math.min(a.minX,e[0]-2),a.minY=Math.min(a.minY,e[1]-2),a.minZ=Math.min(a.minZ,e[2]-2)}));var s=r.getData(n,r.props.dataLabels,r.props.tooltipNames);r.setState({currentEpoch:e+1,plotlyData:s,ranges:a,totalNumberEpochs:p,umapEmbedding:n})}d.step(),e<=p&&(r.timeout2=setTimeout((function(){h(e+1)})))};r.setState({dataVisibility:{}}),h(0)}}))},r.onLegendClick=function(e){var t;if("expandedIndex"in e.plotlyEvent&&void 0!==e.plotlyEvent.expandedIndex){var n=r.state.dataVisibility,a=e.plotlyEvent.expandedIndex;r.setState({dataVisibility:i(i({},n),(t={},t[a]=void 0!==n[a]&&!n[a],t))})}return!1},r.state=i(i({},t.initialState),{numDimensions:n.nComponents,numMinDist:n.minDist,numNeighbors:n.nNeighbors,numSpread:n.spread}),r}return a(t,e),t.prototype.componentDidMount=function(){this.executeUMAP()},t.prototype.componentDidUpdate=function(e,t){var n=this.props,r=n.dataLabels,a=n.dataMatrix,i=n.distanceFn,s=n.minDist,o=n.nComponents,l=n.nNeighbors,u=n.spread,c=n.tooltipNames,d=this.state,p=d.dataVisibility,h=d.umapEmbedding;i!==e.distanceFn||a!==e.dataMatrix?this.executeUMAP():r!==e.dataLabels||c!==e.tooltipNames||p!==t.dataVisibility?this.setState({plotlyData:this.getData(h,r,c)}):o!==e.nComponents?this.setState({numDimensions:o}):u!==e.spread?this.setState({numSpread:u}):s!==e.minDist?this.setState({numMinDist:s}):l!==e.nNeighbors&&this.setState({numNeighbors:l})},t.prototype.render=function(){var e,t=this.props.iconSrc,n=this.state,r=n.currentEpoch,a=n.totalNumberEpochs,i=n.umapEmbedding;a&&r&&(e="epoch "+r+"/"+a);var s=this.getLegendStats();return l.createElement("div",null,l.createElement(p.ComponentCard,{componentName:"UMAP",expandedStyle:{height:"80vh",width:"calc("+s.legendWidth+"px + 80vh)"},dockItems:[{isLink:!1,text:i.length+" sequence"+(1!==i.length?"s":"")+" | "+(e||"")}],height:"575px",iconSrc:t,isDataReady:void 0!==e,menuItems:this.getMenuItems(),width:s.legendWidth+535+"px"},this.renderCategoryDropdown(),i.length>=1&&3===i[0].length?this.render3D(s.showLegend):this.render2D(s.showLegend)))},t.defaultProps={currentLabel:"",distanceFn:c.euclidean,errorMessages:[],labels:[],minDist:.99,nComponents:2,nNeighbors:15,numIterationsBeforeReRender:1,onLabelChange:m.EMPTY_FUNCTION,spread:1},t.initialState={currentEpoch:void 0,dataVisibility:{},dragMode:"turntable",numDimensions:t.defaultProps.nComponents,numMinDist:t.defaultProps.minDist,numNeighbors:t.defaultProps.nNeighbors,numSpread:t.defaultProps.spread,plotlyData:new Array,ranges:{maxX:-20,maxY:-20,maxZ:-20,minX:20,minY:20,minZ:20},totalNumberEpochs:void 0,umapEmbedding:new Array(new Array)},t}(l.Component);t.UMAPVisualization=g;try{g.displayName="UMAPVisualization",g.__docgenInfo={description:"",displayName:"UMAPVisualization",props:{currentLabel:{defaultValue:{value:""},description:"",name:"currentLabel",required:!1,type:{name:"string"}},dataLabels:{defaultValue:null,description:"",name:"dataLabels",required:!1,type:{name:"any[]"}},dataMatrix:{defaultValue:null,description:"",name:"dataMatrix",required:!0,type:{name:"number[][]"}},distanceFn:{defaultValue:null,description:"",name:"distanceFn",required:!1,type:{name:"DISTANCE_FN_TYPE"}},errorMessages:{defaultValue:null,description:"",name:"errorMessages",required:!0,type:{name:"string[]"}},iconSrc:{defaultValue:null,description:"",name:"iconSrc",required:!1,type:{name:"string"}},labels:{defaultValue:null,description:"",name:"labels",required:!0,type:{name:"string[]"}},minDist:{defaultValue:{value:"0.99"},description:"",name:"minDist",required:!1,type:{name:"number"}},nComponents:{defaultValue:null,description:"",name:"nComponents",required:!0,type:{name:"2 | 3"}},nNeighbors:{defaultValue:{value:"15"},description:"",name:"nNeighbors",required:!1,type:{name:"number"}},numIterationsBeforeReRender:{defaultValue:{value:"1"},description:"",name:"numIterationsBeforeReRender",required:!1,type:{name:"number"}},spread:{defaultValue:{value:"1"},description:"",name:"spread",required:!1,type:{name:"number"}},tooltipNames:{defaultValue:null,description:"",name:"tooltipNames",required:!1,type:{name:"string[]"}},onLabelChange:{defaultValue:null,description:"",name:"onLabelChange",required:!0,type:{name:"(...args: any[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/UMAPVisualization.tsx#UMAPVisualization"]={docgenInfo:g.__docgenInfo,name:"UMAPVisualization",path:"src/component/UMAPVisualization.tsx#UMAPVisualization"})}catch(e){}},"./src/component/chart/AuxiliaryAxis.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},s=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./src/helper/index.ts"),l=function(){function e(e,t,n,a,i){var s=this;void 0===t&&(t=2),void 0===n&&(n=new o.ColorMapper),void 0===i&&(i=function(){return!1}),this.sections=e,this.axisIndex=t,this.colorMap=n,this.dataTransformFn=a,this.filterFn=i,this.axes=new Map,this.highlightedAxes=new Map,this.generateXAxisSegment=function(e){return r(r({},s.auxiliaryAxisDefaults(e)),{orientation:"h",xaxis:"x",yaxis:"y"+s.axisIndex})},this.generateHighlightedXAxisSegment=function(e){return r(r({},s.highlightedAuxiliaryAxisDefaults(e)),{orientation:"h",xaxis:"x",yaxis:"y"+s.axisIndex})},this.generateYAxisSegment=function(e){return r(r({},s.auxiliaryAxisDefaults(e)),{orientation:"v",xaxis:"x"+s.axisIndex,yaxis:"y"})},this.generateHighlightedYAxisSegment=function(e){return r(r({},s.highlightedAuxiliaryAxisDefaults(e)),{orientation:"v",xaxis:"x"+s.axisIndex,yaxis:"y"})},this.auxiliaryAxisDefaults=function(e){return{connectgaps:!1,hoverinfo:"none",line:{color:s.colorMap.getColorFor(e),shape:"spline",smoothing:1.3,width:1.5},marker:{symbol:[]},mode:"lines",name:e,showlegend:!1,type:"scatter",x:[],y:[]}},this.highlightedAuxiliaryAxisDefaults=function(e){return r(r({},s.auxiliaryAxisDefaults(e)),{fill:"toself",line:{color:s.colorMap.getColorFor(e),width:0}})},this.derivePointsInAxis=function(e){for(var t={main:[e.start],opposite:[null]},n=e.start;n<=e.end;++n){var r=s.dataTransformFn&&s.dataTransformFn[e.label]?s.dataTransformFn[e.label](e,n):{main:n,opposite:-1};t.main.push(r.main),t.opposite.push(r.opposite)}return t.main.push(e.end),t.opposite.push(null),t},this.deriveHighlightedPointsInAxis=function(e){var t={main:[e.start],opposite:[null]};return t.main.push(e.start),t.opposite.push(-1),t.main.push(e.start),t.opposite.push(1),t.main.push(e.end),t.opposite.push(1),t.main.push(e.end),t.opposite.push(-1),t.main.push(e.end),t.opposite.push(null),t},this.setupAuxiliaryAxis()}return Object.defineProperty(e.prototype,"axis",{get:function(){return this.axes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"xAxes",{get:function(){var e=new Array;return this.axes.forEach((function(t){e.push(t.x)})),e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"highlightedXAxes",{get:function(){var e=new Array;return this.highlightedAxes.forEach((function(t){e.push(t.x)})),e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"yAxes",{get:function(){var e=new Array;return this.axes.forEach((function(t){e.push(t.y)})),e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"highlightedYAxes",{get:function(){var e=new Array;return this.highlightedAxes.forEach((function(t){e.push(t.y)})),e},enumerable:!0,configurable:!0}),e.prototype.getAxisById=function(e){return this.axes.get(e)},e.prototype.setupAuxiliaryAxis=function(){var e,t,n,r,i,o,l,u,c,d;try{for(var p=a(this.sections),h=p.next();!h.done;h=p.next()){var m=h.value;if(!this.filterFn(m)){var g=m.label;this.axes.has(g)||this.axes.set(g,{x:this.generateXAxisSegment(g),y:this.generateYAxisSegment(g)}),this.highlightedAxes.has(g)||this.highlightedAxes.set(g,{x:this.generateHighlightedXAxisSegment(g),y:this.generateHighlightedYAxisSegment(g)});var f=this.axes.get(g),b=this.highlightedAxes.get(g);if(f&&b){var y=this.derivePointsInAxis(m);(n=f.x.x).push.apply(n,s(y.main)),(r=f.x.y).push.apply(r,s(y.opposite)),(i=f.y.y).push.apply(i,s(y.main)),(o=f.y.x).push.apply(o,s(y.opposite));var S=this.deriveHighlightedPointsInAxis(m);(l=b.x.x).push.apply(l,s(S.main)),(u=b.x.y).push.apply(u,s(S.opposite)),(c=b.y.y).push.apply(c,s(S.main)),(d=b.y.x).push.apply(d,s(S.opposite))}}}}catch(t){e={error:t}}finally{try{h&&!h.done&&(t=p.return)&&t.call(p)}finally{if(e)throw e.error}}},e}();t.AuxiliaryAxis=l;try{l.displayName="AuxiliaryAxis",l.__docgenInfo={description:"Class to represent an extra x and/or y axis for a Plotly chart.",displayName:"AuxiliaryAxis",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/chart/AuxiliaryAxis.ts#AuxiliaryAxis"]={docgenInfo:l.__docgenInfo,name:"AuxiliaryAxis",path:"src/component/chart/AuxiliaryAxis.ts#AuxiliaryAxis"})}catch(e){}},"./src/component/chart/ContactMapChart.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n},o=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},l=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var u=n("./node_modules/react/index.js"),c=n("./src/component/index.ts"),d=n("./src/helper/index.ts");t.generateChartDataEntry=function(e,t,n,r,a,s,o){return void 0===o&&(o={}),i({hoverinfo:e,marker:"string"==typeof t?{color:new Array(2*s.length).fill(t)}:{colorscale:[[0,t.start],[1,t.end]]},mode:"lines+markers",name:n,nodeSize:a,points:s,subtitle:r},o)};var p=function(e){function t(t){var n=e.call(this,t)||this;return n.toggleLegendVisibility=function(){n.setState({showlegend:!n.state.showlegend})},n.state={numLegends:0,plotlyData:[],showlegend:!1},n}return a(t,e),t.prototype.componentDidMount=function(){this.setupData()},t.prototype.componentDidUpdate=function(e){var t=this.props,n=t.contactData,r=t.secondaryStructures,a=t.selectedSecondaryStructures;e.contactData===n&&e.secondaryStructures===r&&e.selectedSecondaryStructures===a||this.setupData()},t.prototype.render=function(){var e=this.props,t=(e.configurations,e.contactData,e.isDataLoading),n=e.legendModifiers,r=e.marginModifiers,a=e.range,o=(e.showConfigurations,s(e,["configurations","contactData","isDataLoading","legendModifiers","marginModifiers","range","showConfigurations"])),l=this.state,d=l.plotlyData,p=l.showlegend;return u.createElement(c.PlotlyChart,i({data:d,showLoader:t,layout:{legend:{orientation:"h",y:n.y,yanchor:"bottom"},margin:{b:r.b,l:r.l},showlegend:p,xaxis:{fixedrange:!0,nticks:10,range:[0,a],rangemode:"nonnegative",showline:!0,tickmode:"auto",title:"Residue #"},yaxis:{fixedrange:!0,nticks:10,range:[a,0],rangemode:"nonnegative",showline:!0,tickmode:"auto",title:"Residue #"}}},o))},t.prototype.setupData=function(){var e=this.props,t=e.contactData,n=e.dataTransformFn,r=e.secondaryStructures,a=e.secondaryStructureColors,i=e.selectedSecondaryStructures,s=l(t.map((function(e){return n(e,!0)})));r.forEach((function(e,t){var n=new c.SecondaryStructureAxis(e,3,t+2,a);s.push.apply(s,l(n.xAxes,n.yAxes))}));var o=new Array;i.forEach((function(e,t){var n=new c.AuxiliaryAxis(e,t+2,new d.ColorMapper(new Map,"orange"));o.push.apply(o,l(n.highlightedXAxes,n.highlightedYAxes))})),this.setState({numLegends:new Set(s.filter((function(e){return!1!==e.showlegend&&void 0!==e.name})).map((function(e){return e.name}))).size,plotlyData:l(o,s)})},t.defaultProps={candidateResidues:new Array,configurations:new Array,dataTransformFn:d.generateScatterGLData,height:"100%",isDataLoading:!1,legendModifiers:{y:-.4},marginModifiers:{b:67,l:67},range:33e3,secondaryStructures:[],selectedSecondaryStructures:[],selectedSecondaryStructuresColor:"#feb83f",showConfigurations:!0,width:"100%"},t}(u.Component);t.ContactMapChart=p;try{p.displayName="ContactMapChart",p.__docgenInfo={description:"Intermediary between a ContactMap and a PlotlyChart.\n\nWill transform data and setup layout from science/bioblocks into a format suitable for Plotly consumption.\n@extends React.Component<IContactMapChartProps, any>",displayName:"ContactMapChart",props:{candidateResidues:{defaultValue:null,description:"",name:"candidateResidues",required:!0,type:{name:"any[]"}},configurations:{defaultValue:null,description:"",name:"configurations",required:!0,type:{name:"any[]"}},contactData:{defaultValue:null,description:"",name:"contactData",required:!0,type:{name:"IContactMapChartData[]"}},height:{defaultValue:{value:"100%"},description:"",name:"height",required:!1,type:{name:"string | number"}},isDataLoading:{defaultValue:{value:"false"},description:"",name:"isDataLoading",required:!1,type:{name:"boolean"}},legendModifiers:{defaultValue:{value:"{\n      y: -0.4,\n    }"},description:"",name:"legendModifiers",required:!1,type:{name:"{ y: number; }"}},marginModifiers:{defaultValue:{value:"{\n      b: 67,\n      l: 67,\n    }"},description:"",name:"marginModifiers",required:!1,type:{name:"{ b: number; l: number; }"}},range:{defaultValue:{value:"33000"},description:"",name:"range",required:!1,type:{name:"number"}},secondaryStructures:{defaultValue:null,description:"",name:"secondaryStructures",required:!0,type:{name:"any[]"}},secondaryStructureColors:{defaultValue:null,description:"",name:"secondaryStructureColors",required:!1,type:{name:"any"}},selectedSecondaryStructures:{defaultValue:null,description:"",name:"selectedSecondaryStructures",required:!0,type:{name:"any[]"}},selectedSecondaryStructuresColor:{defaultValue:{value:"#feb83f"},description:"",name:"selectedSecondaryStructuresColor",required:!1,type:{name:"string"}},showConfigurations:{defaultValue:{value:"true"},description:"",name:"showConfigurations",required:!1,type:{name:"boolean"}},width:{defaultValue:{value:"100%"},description:"",name:"width",required:!1,type:{name:"string | number"}},dataTransformFn:{defaultValue:null,description:"",name:"dataTransformFn",required:!0,type:{name:"(entry: IContactMapChartData, mirrorPoints: boolean) => any"}},onClickCallback:{defaultValue:null,description:"",name:"onClickCallback",required:!1,type:{name:"(...args: any[]) => void"}},onHoverCallback:{defaultValue:null,description:"",name:"onHoverCallback",required:!1,type:{name:"(...args: any[]) => void"}},onSelectedCallback:{defaultValue:null,description:"",name:"onSelectedCallback",required:!1,type:{name:"(...args: any[]) => void"}},onUnHoverCallback:{defaultValue:null,description:"",name:"onUnHoverCallback",required:!1,type:{name:"(...args: any[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/chart/ContactMapChart.tsx#ContactMapChart"]={docgenInfo:p.__docgenInfo,name:"ContactMapChart",path:"src/component/chart/ContactMapChart.tsx#ContactMapChart"})}catch(e){}},"./src/component/chart/PlotlyChart.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},l=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},u=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(l(arguments[t]));return e},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var d=n("./node_modules/immutable/dist/immutable.js"),p=n("./node_modules/lodash/lodash.js"),h=n("./node_modules/plotly.js/dist/plotly.min.js"),m=n("./node_modules/react/index.js"),g=n("./node_modules/semantic-ui-react/dist/es/index.js"),f=n("./src/data/index.ts");t.defaultPlotlyConfig={displayModeBar:!1,doubleClick:"reset",scrollZoom:!1,showAxisDragHandles:!1,staticPlot:!1},t.defaultPlotlyLayout={autosize:!0,dragmode:"zoom",hovermode:"closest",legend:{},margin:{b:10,l:40,r:10,t:10},showlegend:!1,title:""};var b=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.plotlyCanvas=null,n.isDoubleClickInProgress=!1,n.canvasRef=null,n.plotlyFormattedData=[],n.draw=function(){return s(n,void 0,void 0,(function(){var e,t,n,r,a,i;return o(this,(function(s){switch(s.label){case 0:return e=this.props,t=e.config,n=e.layout,this.plotlyCanvas&&this.canvasRef?(r=this.getMergedLayout(n,this.plotlyFormattedData),a=this.getMergedConfig(t),i=this,[4,h.react(this.canvasRef,this.plotlyFormattedData,r,a)]):[3,2];case 1:i.plotlyCanvas=s.sent(),s.label=2;case 2:return[2]}}))}))},n.resize=function(){n.plotlyCanvas&&h.Plots.resize(n.plotlyCanvas)},n.deriveChartPiece=function(e,t,n){var r=e,a=t;if(n){var i=n.xaxis&&"x"!==n.xaxis,s=n.yaxis&&"y"!==n.yaxis;if(i||s)return{chartPiece:f.BIOBLOCKS_CHART_PIECE.AXIS,selectedPoints:i?[a]:[r]}}return{chartPiece:f.BIOBLOCKS_CHART_PIECE.POINT,selectedPoints:[r,a]}},n.generateExtraPlotlyAxis=function(e){return Array.from(e.values()).filter((function(e){return e.length>=2})).map((function(e){return n.generateExtraPlotlyAxisFromId(e)})).reduce((function(e,t){return i(i({},e),t)}),{})},n.getMergedConfig=function(e){void 0===e&&(e={});var n=d.fromJS(i({},t.defaultPlotlyConfig)),r=d.fromJS(i({},e));return i({},n.mergeDeep(r).toJS())},n.getMergedLayout=function(e,r){void 0===e&&(e={}),void 0===r&&(r=[]);var a=d.fromJS(i({},e)),s=d.fromJS(i(i({},t.defaultPlotlyLayout),n.deriveAxisParams(r))),o=i({},s.mergeDeep(a).toJS());return n.savedAxisZoom&&o.xaxis&&o.yaxis?(o.xaxis.range=n.savedAxisZoom.xaxis.range,o.yaxis.range=n.savedAxisZoom.yaxis.range):n.savedCameraScene&&(o.scene=i(i({},o.scene),{camera:n.savedCameraScene})),o},n.onAfterPlot=function(){var e=n.props.onAfterPlotCallback;e&&e(new f.BioblocksChartEvent(f.BIOBLOCKS_CHART_EVENT_TYPE.AFTER_PLOT))},n.onClick=function(e){if(!1===n.isDoubleClickInProgress&&void 0!==e.points&&e.points.length>0){var t=n.props.onClickCallback;if(t){var r=e.points[0].x?e.points[0].x:e.points[0].data.x[0],a=e.points[0].y?e.points[0].y:e.points[0].data.y[0],i=n.deriveChartPiece(r,a,e.points[0].data),s=i.chartPiece,o=i.selectedPoints;t(new f.BioblocksChartEvent(f.BIOBLOCKS_CHART_EVENT_TYPE.CLICK,s,o))}}},n.onDoubleClick=function(){n.isDoubleClickInProgress=!0;var e=n.props.onDoubleClickCallback;e&&e(new f.BioblocksChartEvent(f.BIOBLOCKS_CHART_EVENT_TYPE.DOUBLE_CLICK))},n.onHover=function(e){var t=n.props.onHoverCallback;if(e.points&&e.points[0]&&t){var r=e.points[0].x?e.points[0].x:e.points[0].data.x[0],a=e.points[0].y?e.points[0].y:e.points[0].data.y[0],i=n.deriveChartPiece(r,a,e.points[0].data),s=i.chartPiece,o=i.selectedPoints;t(new f.BioblocksChartEvent(f.BIOBLOCKS_CHART_EVENT_TYPE.HOVER,s,o))}},n.onLegendClick=function(e){var t=n.props.onLegendClickCallback;return!!t&&t(new f.BioblocksChartEvent(f.BIOBLOCKS_CHART_EVENT_TYPE.LEGEND_CLICK,f.BIOBLOCKS_CHART_PIECE.LEGEND,[],e))},n.onRelayout=function(e){if(n.isDoubleClickInProgress=!1,void 0!==e&&"scene.camera"in e)n.savedCameraScene=e["scene.camera"];else if(void 0!==e){var t=["xaxis.range[0]","xaxis.range[1]","yaxis.range[0]","yaxis.range[1]"],r=void 0!==e&&!0===t.reduce((function(t,n){return t&&void 0!==e[n]}),!0);n.savedAxisZoom=r?{xaxis:{autorange:!1,range:[e[t[0]],e[t[1]]]},yaxis:{autorange:!1,range:[e[t[2]],e[t[3]]]}}:void 0}var a=n.props.onRelayoutCallback;a&&a(new f.BioblocksChartEvent(f.BIOBLOCKS_CHART_EVENT_TYPE.RELAYOUT))},n.onSelect=function(e){return s(n,void 0,void 0,(function(){var t,n,r;return o(this,(function(a){switch(a.label){case 0:return t=this.props.onSelectedCallback,e&&t&&(n=new Array,e.points.length>=1?n=e.points.reduce((function(e,t){return e.push.apply(e,u([t.x,t.y])),e}),n):e.range&&n.push(e.range.x[0],e.range.y[0],e.range.x[1],e.range.y[1]),r=(n.length>0?this.deriveChartPiece(n[0],n[1]):{chartPiece:f.BIOBLOCKS_CHART_PIECE.POINT}).chartPiece,t(new f.BioblocksChartEvent(f.BIOBLOCKS_CHART_EVENT_TYPE.SELECTION,r,n,e))),[4,this.draw()];case 1:return a.sent(),[2]}}))}))},n.onUnHover=function(e){var t=n.props.onUnHoverCallback;if(e&&t){var r=e.points[0],a=r.data,i=r.x,s=r.y,o=n.deriveChartPiece(i,s,a),l=o.chartPiece,u=o.selectedPoints;t(new f.BioblocksChartEvent(f.BIOBLOCKS_CHART_EVENT_TYPE.UNHOVER,l,u))}},n}return a(n,e),n.prototype.attachListeners=function(){this.plotlyCanvas&&(this.plotlyCanvas.on("plotly_afterplot",this.onAfterPlot),this.plotlyCanvas.on("plotly_click",this.onClick),this.plotlyCanvas.on("plotly_doubleclick",this.onDoubleClick),this.plotlyCanvas.on("plotly_hover",this.onHover),this.plotlyCanvas.on("plotly_legendclick",this.onLegendClick),this.plotlyCanvas.on("plotly_relayout",this.onRelayout),this.plotlyCanvas.on("plotly_selected",this.onSelect),this.plotlyCanvas.on("plotly_unhover",this.onUnHover)),window.removeEventListener("resize",this.resize),window.addEventListener("resize",this.resize)},n.prototype.componentDidMount=function(){return s(this,void 0,void 0,(function(){var e,t,n;return o(this,(function(r){switch(r.label){case 0:return!this.canvasRef||this.plotlyCanvas?[3,3]:(e=this.props.data,t=d.fromJS(e),this.plotlyFormattedData=t.toJS(),n=this,[4,h.react(this.canvasRef,this.plotlyFormattedData)]);case 1:return n.plotlyCanvas=r.sent(),this.attachListeners(),[4,this.draw()];case 2:r.sent(),r.label=3;case 3:return[2]}}))}))},n.prototype.componentWillUnmount=function(){this.renderTimeout&&clearTimeout(this.renderTimeout),this.plotlyCanvas&&(h.purge(this.plotlyCanvas),this.plotlyCanvas=null,this.canvasRef=null),window.removeEventListener("resize",this.resize)},n.prototype.componentDidUpdate=function(e){return s(this,void 0,void 0,(function(){var t,n,r,a,i;return o(this,(function(s){switch(s.label){case 0:return t=this.props,n=t.data,r=t.layout,a=t.config,(i=n.length===e.data.length)&&n.forEach((function(t,n){p.isEqual(t,e.data[n])||(i=!1)})),i&&p.isEqual(r,e.layout)&&p.isEqual(a,e.config)?[3,2]:(this.plotlyFormattedData=i?this.plotlyFormattedData:d.fromJS(n).toJS(),[4,this.draw()]);case 1:s.sent(),this.forceUpdate(),s.label=2;case 2:return[2]}}))}))},n.prototype.render=function(){var e=this,t=this.props,n=t.height,r=t.showLoader,a=t.style,s=t.width;return m.createElement(m.Fragment,null,r&&m.createElement(g.Dimmer,{active:!this.isDataLoaded()},m.createElement(g.Loader,null)),m.createElement("div",{className:"plotly-chart",ref:function(t){return e.canvasRef=t||null},style:i(i({marginBottom:5},a),{height:n,width:s})}))},n.prototype.deriveAxisParams=function(e){var t,n,r=new Set,a=new Set;try{for(var s=c(e),o=s.next();!o.done;o=s.next()){var l=o.value,u=l.xaxis,d=l.yaxis;u&&r.add(u),d&&a.add(d)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(n=s.return)&&n.call(s)}finally{if(t)throw t.error}}return i(i(i({},this.generateExtraPlotlyAxis(r)),this.generateExtraPlotlyAxis(a)),{xaxis:{domain:[0,1-.05*r.size],zeroline:!1},yaxis:{domain:[0,1-.05*r.size],zeroline:!1}})},n.prototype.generateExtraPlotlyAxisFromId=function(e){var t,n=e.substr(0,1),r=Number.parseInt(e.substr(1),10);return(t={})[n+"axis"+r]={domain:[1-.05*(r-1),1-.05*(r-2)],fixedrange:!0,visible:!1},t},n.prototype.isDataLoaded=function(){var e=function(e){return e.filter((function(e){return e.x&&e.x.length>=1||e.xy&&e.xy.length>=1})).length>0};return e(this.props.data)||e(this.plotlyFormattedData)},n.defaultProps={config:{},data:[],height:"100%",layout:{},showLoader:!0,width:"100%"},n}(m.Component);t.PlotlyChart=b;try{b.displayName="PlotlyChart",b.__docgenInfo={description:"React wrapper for a Plotly Chart.\n@description Based upon: https://github.com/davidctj/react-plotlyjs-ts\n@export\n@extends React.Component<IPlotlyChartProps, any>",displayName:"PlotlyChart",props:{config:{defaultValue:{value:"{}"},description:"",name:"config",required:!1,type:{name:"any"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"any[]"}},height:{defaultValue:{value:"100%"},description:"",name:"height",required:!1,type:{name:"string | number"}},layout:{defaultValue:{value:"{}"},description:"",name:"layout",required:!1,type:{name:"any"}},showLoader:{defaultValue:{value:"true"},description:"",name:"showLoader",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}},width:{defaultValue:{value:"100%"},description:"",name:"width",required:!1,type:{name:"string | number"}},onAfterPlotCallback:{defaultValue:null,description:"",name:"onAfterPlotCallback",required:!1,type:{name:"(event: any) => void"}},onClickCallback:{defaultValue:null,description:"",name:"onClickCallback",required:!1,type:{name:"(event: any) => void"}},onDoubleClickCallback:{defaultValue:null,description:"",name:"onDoubleClickCallback",required:!1,type:{name:"(event: any) => void"}},onHoverCallback:{defaultValue:null,description:"",name:"onHoverCallback",required:!1,type:{name:"(event: any) => void"}},onLegendClickCallback:{defaultValue:null,description:"",name:"onLegendClickCallback",required:!1,type:{name:"(event: any) => boolean"}},onSelectedCallback:{defaultValue:null,description:"",name:"onSelectedCallback",required:!1,type:{name:"(event: any) => void"}},onUnHoverCallback:{defaultValue:null,description:"",name:"onUnHoverCallback",required:!1,type:{name:"(event: any) => void"}},onRelayoutCallback:{defaultValue:null,description:"",name:"onRelayoutCallback",required:!1,type:{name:"(event: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/chart/PlotlyChart.tsx#PlotlyChart"]={docgenInfo:b.__docgenInfo,name:"PlotlyChart",path:"src/component/chart/PlotlyChart.tsx#PlotlyChart"})}catch(e){}},"./src/component/chart/SecondaryStructureAxis.ts":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var s=n("./src/component/chart/index.ts"),o=n("./src/helper/index.ts"),l=function(e){function t(n,r,a,i,s,l){void 0===r&&(r=3),void 0===a&&(a=2),void 0===i&&(i=new o.ColorMapper(new Map([["C","red"],["E","green"],["H","blue"]]),"black")),void 0===s&&(s={C:t.centerSectionPositionFn,E:t.centerSectionPositionFn,H:function(e,t){return{main:t,opposite:Math.sin(t)}}}),void 0===l&&(l=function(e){return e.length<=r});var u=e.call(this,n,a,i,s)||this;return u.sections=n,u.minimumRequiredResidues=r,u.axisIndex=a,u.colorMap=i,u.dataTransformFn=s,u.filterFn=l,u}return a(t,e),t.prototype.setupAuxiliaryAxis=function(){e.prototype.setupAuxiliaryAxis.call(this);var t=this.getAxisById("E");if(t&&t.x.x&&t.x.y){for(var n={main:new Array(t.x.x.length).fill("line-ne"),opposite:new Array(t.x.x.length).fill("line-ne")},r=1;r<t.x.x.length-1;++r)null===t.x.y[r+1]&&(n.main[r]="triangle-right",n.opposite[r]="triangle-down");t.x=i(i({},t.x),this.generateBetaSheetStyle(t.x,n.main)),t.y=i(i({},t.y),this.generateBetaSheetStyle(t.y,n.opposite))}},t.prototype.generateBetaSheetStyle=function(e,t){return{line:i(i({},e.line),{width:5}),marker:i(i({},e.marker),{color:this.colorMap.getColorFor("E"),size:10,symbol:t}),mode:"lines+markers"}},t.centerSectionPositionFn=function(e,t){return{main:t,opposite:0}},t}(s.AuxiliaryAxis);t.SecondaryStructureAxis=l;try{l.displayName="SecondaryStructureAxis",l.__docgenInfo={description:"Class to represent the x and y axis for a secondary structure on a Plotly graph.\n@export",displayName:"SecondaryStructureAxis",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/chart/SecondaryStructureAxis.ts#SecondaryStructureAxis"]={docgenInfo:l.__docgenInfo,name:"SecondaryStructureAxis",path:"src/component/chart/SecondaryStructureAxis.ts#SecondaryStructureAxis"})}catch(e){}},"./src/component/chart/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/component/chart/PlotlyChart.tsx")),r(n("./src/component/chart/AuxiliaryAxis.ts")),r(n("./src/component/chart/ContactMapChart.tsx")),r(n("./src/component/chart/SecondaryStructureAxis.ts"));try{AuxiliaryAxis.displayName="AuxiliaryAxis",AuxiliaryAxis.__docgenInfo={description:"Class to represent an extra x and/or y axis for a Plotly chart.",displayName:"AuxiliaryAxis",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/chart/index.ts#AuxiliaryAxis"]={docgenInfo:AuxiliaryAxis.__docgenInfo,name:"AuxiliaryAxis",path:"src/component/chart/index.ts#AuxiliaryAxis"})}catch(e){}try{SecondaryStructureAxis.displayName="SecondaryStructureAxis",SecondaryStructureAxis.__docgenInfo={description:"Class to represent the x and y axis for a secondary structure on a Plotly graph.\n@export",displayName:"SecondaryStructureAxis",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/chart/index.ts#SecondaryStructureAxis"]={docgenInfo:SecondaryStructureAxis.__docgenInfo,name:"SecondaryStructureAxis",path:"src/component/chart/index.ts#SecondaryStructureAxis"})}catch(e){}},"./src/component/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/component/chart/index.ts")),r(n("./src/component/widget/index.ts")),r(n("./src/component/ContactMap.tsx")),r(n("./src/component/FeatureViewer.tsx")),r(n("./src/component/NGLComponent.tsx")),r(n("./src/component/TensorTComponent.tsx")),r(n("./src/component/UMAPVisualization.tsx"));try{AuxiliaryAxis.displayName="AuxiliaryAxis",AuxiliaryAxis.__docgenInfo={description:"Class to represent an extra x and/or y axis for a Plotly chart.",displayName:"AuxiliaryAxis",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/index.ts#AuxiliaryAxis"]={docgenInfo:AuxiliaryAxis.__docgenInfo,name:"AuxiliaryAxis",path:"src/component/index.ts#AuxiliaryAxis"})}catch(e){}try{SecondaryStructureAxis.displayName="SecondaryStructureAxis",SecondaryStructureAxis.__docgenInfo={description:"Class to represent the x and y axis for a secondary structure on a Plotly graph.\n@export",displayName:"SecondaryStructureAxis",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/index.ts#SecondaryStructureAxis"]={docgenInfo:SecondaryStructureAxis.__docgenInfo,name:"SecondaryStructureAxis",path:"src/component/index.ts#SecondaryStructureAxis"})}catch(e){}},"./src/component/widget/BioblocksRadioGroup.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var i=n("./node_modules/react/index.js"),s=n("./node_modules/semantic-ui-react/dist/es/index.js"),o=function(e){function t(t){var n=e.call(this,t)||this;n.handleChange=function(e){return function(t,r){var a=n.props.onChange;n.setState({selectedIndex:e}),a&&a(e)}},n.renderOptions=function(e,t,r,a){return e.map((function(e,o){return i.createElement(s.Grid.Column,{key:t+"-"+e+"-"+o,style:{paddingBottom:0,paddingTop:"7px"}},i.createElement(s.Form.Radio,{checked:n.state.selectedIndex===o,disabled:r,label:{children:e,style:a},name:e,onChange:n.handleChange(o),value:o}))}))};var r=t.defaultOption,a=t.options,o=t.selectedOption,l=0;return o&&a.includes(o)?l=a.indexOf(o):r&&a.includes(r)&&(l=a.indexOf(r)),n.state={selectedIndex:l},n}return a(t,e),t.prototype.render=function(){var e=this.props,t=e.disabled,n=e.id,r=e.options,a=e.style,o=e.title;return i.createElement("div",{style:a},i.createElement(s.Form,null,i.createElement(s.Grid,{centered:!0,columns:2,padded:!0},i.createElement(s.Grid.Row,null,i.createElement("div",{style:{fontStyle:"italic",fontWeight:"bold",textDecoration:"underline"}},o)),this.renderOptions(r,n,t,a))))},t.defaultProps={disabled:!1,style:{},title:"How to calculate distance between two residues:"},t}(i.Component);t.BioblocksRadioGroup=o;try{o.displayName="BioblocksRadioGroup",o.__docgenInfo={description:"Represents a single grouping of radio buttons for bioblocks, including selection logic.\n@export\n@extends React.Component<IBioblocksRadioGroupProps, IBioblocksRadioGroupState>",displayName:"BioblocksRadioGroup",props:{defaultOption:{defaultValue:null,description:"",name:"defaultOption",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"",name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"string[]"}},selectedOption:{defaultValue:null,description:"",name:"selectedOption",required:!1,type:{name:"string"}},style:{defaultValue:{value:"{}"},description:"",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:{value:"How to calculate distance between two residues:"},description:"",name:"title",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(value: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/widget/BioblocksRadioGroup.tsx#BioblocksRadioGroup"]={docgenInfo:o.__docgenInfo,name:"BioblocksRadioGroup",path:"src/component/widget/BioblocksRadioGroup.tsx#BioblocksRadioGroup"})}catch(e){}},"./src/component/widget/BioblocksRangeSlider.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/rc-slider/es/index.js"),l=n("./node_modules/react/index.js");n("./node_modules/rc-slider/assets/index.css");var u=n("./node_modules/semantic-ui-react/dist/es/index.js"),c=function(e){function t(t){var n=e.call(this,t)||this;return n.onAfterChange=function(e){return function(t){e&&e(t),n.setState({range:t})}},n.onChange=function(e){return function(t){e&&e(t),n.setState({range:t})}},n.onReset=function(){n.onChange(n.props.onChange)(n.state.defaultValue)},n.state={defaultValue:t.defaultValue?t.defaultValue:t.value,range:t.value},n}return a(t,e),t.prototype.componentDidUpdate=function(e){var t=this.props,n=t.defaultValue,r=t.value;r&&r!==e.value&&this.setState({range:r});var a=n||r;a!==this.state.defaultValue&&this.setState({defaultValue:a})},t.prototype.render=function(){var e=this.props,t=e.value,n=e.hideLabelValue,r=e.max,a=e.min,c=e.label,d=e.onAfterChange,p=e.onChange,h=e.style,m=s(e,["value","hideLabelValue","max","min","label","onAfterChange","onChange","style"]),g=this.state.range;return l.createElement("div",{style:h},l.createElement(u.Grid.Column,{style:{float:"left",height:"100%",width:"75%"}},!n&&l.createElement("p",null,c+": ["+g.join(" - ")+"]"),l.createElement(o.Range,i({allowCross:!1,pushable:!1,max:r,min:a,onAfterChange:this.onAfterChange(d),onChange:this.onChange(p),value:t},m))),l.createElement(u.Grid.Column,{style:{float:"right",padding:"5% 0",width:"20%"},verticalAlign:"middle"},l.createElement(u.Button,{icon:"undo",onClick:this.onReset,size:"small"})))},t}(l.Component);t.BioblocksRangeSlider=c;try{c.displayName="BioblocksRangeSlider",c.__docgenInfo={description:"Represents a simple 2d slider, allowing a range to be selected within a minimum and maximum.\n@export\n@extends React.Component<BioblocksRangeSliderProps, IBioblocksRangeSliderState>",displayName:"BioblocksRangeSlider",props:{defaultValue:{defaultValue:{value:"[0,0]"},description:"Set initial positions of handles.",name:"defaultValue",required:!1,type:{name:"number[]"}},value:{defaultValue:null,description:"Range the slider is set to.\nSet current positions of handles.",name:"value",required:!0,type:{name:"number[]"}},hideLabelValue:{defaultValue:null,description:"Should we show the label/value for the slider?",name:"hideLabelValue",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Initial value the slider is set to.",name:"label",required:!0,type:{name:"string"}},max:{defaultValue:{value:"100"},description:"Maximum range for slider.\nThe maximum value of the slider",name:"max",required:!0,type:{name:"number"}},min:{defaultValue:{value:"0"},description:"Minimum range for slider.\nThe minimum value of the slider",name:"min",required:!0,type:{name:"number"}},onAfterChange:{defaultValue:null,description:"Invoked when the value has finished changing the slider value - usually by releasing the mouse.\nonAfterChange will be triggered when ontouchend or onmouseup is triggered.\nFor prop (count = -1) type returned is [number, undefined]. Bug raised in rc-slider https://github.com/react-component/slider/issues/457",name:"onAfterChange",required:!1,type:{name:"BioblocksRangeSliderCallback & ((value: number[]) => void)"}},onChange:{defaultValue:null,description:"Invoked when the value is in the middle of changing but user has not committed to the change.\nonChange will be triggered while the value of Slider changing.\nFor prop (count = -1) type returned is [number, undefined]. Bug raised in rc-slider https://github.com/react-component/slider/issues/457",name:"onChange",required:!1,type:{name:"BioblocksRangeSliderCallback & ((value: number[]) => void)"}},style:{defaultValue:null,description:"Style for the slider.",name:"style",required:!1,type:{name:"CSSProperties"}},disabled:{defaultValue:{value:"false"},description:"If true, handles can't be moved.",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:{value:"''"},description:"Additional CSS class for the root DOM node",name:"className",required:!1,type:{name:"string"}},onBeforeChange:{defaultValue:null,description:"onBeforeChange will be triggered when ontouchstart or onmousedown is triggered.\nFor prop (count = -1) type returned is [number, undefined]. Bug raised in rc-slider https://github.com/react-component/slider/issues/457",name:"onBeforeChange",required:!1,type:{name:"(value: number[]) => void"}},tabIndex:{defaultValue:{value:"[0,0]"},description:"Set the tabIndex of each handle.",name:"tabIndex",required:!1,type:{name:"number[]"}},marks:{defaultValue:{value:"'{}' | {number: { style, label }}"},description:"Marks on the slider. The key determines the position, and the value determines what will show.\nIf you want to set the style of a specific mark point, the value should be an object which contains style and label properties.",name:"marks",required:!1,type:{name:"Marks"}},step:{defaultValue:{value:"1"},description:"Value to be added or subtracted on each step the slider makes. Must be greater than zero, and max - min should be evenly divisible by the step value.",name:"step",required:!1,type:{name:"number"}},vertical:{defaultValue:{value:"false"},description:"If vertical is true, the slider will be vertical.",name:"vertical",required:!1,type:{name:"boolean"}},handle:{defaultValue:null,description:"A handle generator which could be used to customized handle.",name:"handle",required:!1,type:{name:"(props: any) => ReactNode"}},included:{defaultValue:{value:"true"},description:"If the value is true, it means a continuous value interval, otherwise, it is a independent value.",name:"included",required:!1,type:{name:"boolean"}},dots:{defaultValue:{value:"false"},description:"When the step value is greater than 1, you can set the dots to true if you want to render the slider with dots.",name:"dots",required:!1,type:{name:"boolean"}},tipTransitionName:{defaultValue:null,description:"@deprecated in version ^6.0.0. Use rc-tooltip\nTooltip transition class name",name:"tipTransitionName",required:!1,type:{name:"string"}},tipFormatter:{defaultValue:null,description:"@deprecated in version ^6.0.0. Use rc-tooltip\nTooltip formatter",name:"tipFormatter",required:!1,type:{name:"(value: any) => any"}},handleStyle:{defaultValue:null,description:"The style used for handle. (both for slider(Object) and range(Array of Object), the array will be used for mutli handle follow element order)",name:"handleStyle",required:!1,type:{name:"CSSProperties | CSSProperties[]"}},trackStyle:{defaultValue:null,description:"The style used for track. (both for slider(Object) and range(Array of Object), the array will be used for mutli track follow element order)",name:"trackStyle",required:!1,type:{name:"CSSProperties | CSSProperties[]"}},railStyle:{defaultValue:null,description:"The style used for the track base color.",name:"railStyle",required:!1,type:{name:"CSSProperties"}},dotStyle:{defaultValue:null,description:"The style used for the dots.",name:"dotStyle",required:!1,type:{name:"CSSProperties"}},activeDotStyle:{defaultValue:null,description:"The style used for the active dots.",name:"activeDotStyle",required:!1,type:{name:"CSSProperties"}},reverse:{defaultValue:{value:"false"},description:"Reverse the direction of the slider.\nFrom Left to Right To Right to Left",name:"reverse",required:!1,type:{name:"boolean"}},count:{defaultValue:{value:"1"},description:"Determine how many ranges to render, and multiple handles will be rendered (number + 1).",name:"count",required:!1,type:{name:"number"}},allowCross:{defaultValue:{value:"true"},description:"allowCross could be set as true to allow those handles to cross.",name:"allowCross",required:!1,type:{name:"boolean"}},pushable:{defaultValue:{value:"true"},description:"pushable could be set as true to allow pushing of surrounding handles when moving an handle. When set to a number, the number will be the minimum ensured distance between handles.",name:"pushable",required:!1,type:{name:"number | boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/widget/BioblocksRangeSlider.tsx#BioblocksRangeSlider"]={docgenInfo:c.__docgenInfo,name:"BioblocksRangeSlider",path:"src/component/widget/BioblocksRangeSlider.tsx#BioblocksRangeSlider"})}catch(e){}},"./src/component/widget/BioblocksSlider.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/rc-slider/es/index.js"),l=n("./node_modules/react/index.js");n("./node_modules/rc-slider/assets/index.css");var u=n("./node_modules/semantic-ui-react/dist/es/index.js"),c=function(e){function t(t){var n=e.call(this,t)||this;return n.onAfterChange=function(e){return function(t){e&&e(t),n.setState({value:t})}},n.onChange=function(e){return function(t){e&&e(t),n.setState({value:t})}},n.onReset=function(){n.onChange(n.props.onChange)(n.state.defaultValue)},n.state={defaultValue:t.defaultValue?t.defaultValue:t.value,value:t.value},n}return a(t,e),t.prototype.componentDidUpdate=function(e){var t=this.props,n=t.defaultValue,r=t.value;console.log(r),console.log(e.value),r&&r!==e.value&&this.setState({value:r});var a=n||r;-1===this.state.defaultValue&&a!==this.state.defaultValue&&this.setState({defaultValue:a})},t.prototype.render=function(){var e=this.props,t=e.value,n=e.hideLabelValue,r=e.max,a=e.min,c=e.label,d=e.onAfterChange,p=e.onChange,h=e.style,m=s(e,["value","hideLabelValue","max","min","label","onAfterChange","onChange","style"]);return l.createElement("div",{style:h},l.createElement(u.Grid.Column,{style:{float:"left",height:"100%",width:"75%"}},!n&&l.createElement("p",null,c+": "+this.state.value),l.createElement(o.default,i({max:r,min:a,onAfterChange:this.onAfterChange(d),onChange:this.onChange(p),value:t},m))),l.createElement(u.Grid.Column,{style:{float:"right",padding:"5% 0",width:"20%"},verticalAlign:"middle"},l.createElement(u.Button,{icon:"undo",onClick:this.onReset,size:"small"})))},t}(l.Component);t.BioblocksSlider=c;try{c.displayName="BioblocksSlider",c.__docgenInfo={description:"Represents a simple 2d slider, allowing a value to be selected between a minimum and maximum.\n@export\n@extends React.Component<BioblocksSliderProps, IBioblocksSliderState>",displayName:"BioblocksSlider",props:{defaultValue:{defaultValue:{value:"0"},description:"Set initial value of slider.",name:"defaultValue",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"Value the slider is set to.\nSet current value of slider.",name:"value",required:!0,type:{name:"number"}},hideLabelValue:{defaultValue:null,description:"Should we show the label/value for the slider?",name:"hideLabelValue",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Initial value the slider is set to.",name:"label",required:!0,type:{name:"string"}},max:{defaultValue:{value:"100"},description:"Maximum value for slider.\nThe maximum value of the slider",name:"max",required:!0,type:{name:"number"}},min:{defaultValue:{value:"0"},description:"Minimum value for slider.\nThe minimum value of the slider",name:"min",required:!0,type:{name:"number"}},onAfterChange:{defaultValue:null,description:"Invoked when the value has finished changing the slider value - usually by releasing the mouse.\nonAfterChange will be triggered when ontouchend or onmouseup is triggered.",name:"onAfterChange",required:!1,type:{name:"BioblocksSliderCallback & ((value: number) => void)"}},onChange:{defaultValue:null,description:"Invoked when the value is in the middle of changing but user has not committed to the change.\nonChange will be triggered while the value of Slider changing.",name:"onChange",required:!1,type:{name:"BioblocksSliderCallback & ((value: number) => void)"}},style:{defaultValue:null,description:"Style for the slider.",name:"style",required:!1,type:{name:"CSSProperties"}},disabled:{defaultValue:{value:"false"},description:"If true, handles can't be moved.",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:{value:"''"},description:"Additional CSS class for the root DOM node",name:"className",required:!1,type:{name:"string"}},onBeforeChange:{defaultValue:null,description:"onBeforeChange will be triggered when ontouchstart or onmousedown is triggered.",name:"onBeforeChange",required:!1,type:{name:"(value: number) => void"}},onBlur:{defaultValue:null,description:"Handle blur event on the control",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<Element>) => void"}},tabIndex:{defaultValue:{value:"0"},description:"Set the tabIndex of the slider handle.",name:"tabIndex",required:!1,type:{name:"number"}},marks:{defaultValue:{value:"'{}' | {number: { style, label }}"},description:"Marks on the slider. The key determines the position, and the value determines what will show.\nIf you want to set the style of a specific mark point, the value should be an object which contains style and label properties.",name:"marks",required:!1,type:{name:"Marks"}},step:{defaultValue:{value:"1"},description:"Value to be added or subtracted on each step the slider makes. Must be greater than zero, and max - min should be evenly divisible by the step value.",name:"step",required:!1,type:{name:"number"}},vertical:{defaultValue:{value:"false"},description:"If vertical is true, the slider will be vertical.",name:"vertical",required:!1,type:{name:"boolean"}},handle:{defaultValue:null,description:"A handle generator which could be used to customized handle.",name:"handle",required:!1,type:{name:"(props: any) => ReactNode"}},included:{defaultValue:{value:"true"},description:"If the value is true, it means a continuous value interval, otherwise, it is a independent value.",name:"included",required:!1,type:{name:"boolean"}},dots:{defaultValue:{value:"false"},description:"When the step value is greater than 1, you can set the dots to true if you want to render the slider with dots.",name:"dots",required:!1,type:{name:"boolean"}},tipTransitionName:{defaultValue:null,description:"@deprecated in version ^6.0.0. Use rc-tooltip\nTooltip transition class name",name:"tipTransitionName",required:!1,type:{name:"string"}},tipFormatter:{defaultValue:null,description:"@deprecated in version ^6.0.0. Use rc-tooltip\nTooltip formatter",name:"tipFormatter",required:!1,type:{name:"(value: any) => any"}},handleStyle:{defaultValue:null,description:"The style used for handle. (both for slider(Object) and range(Array of Object), the array will be used for mutli handle follow element order)",name:"handleStyle",required:!1,type:{name:"CSSProperties | CSSProperties[]"}},trackStyle:{defaultValue:null,description:"The style used for track. (both for slider(Object) and range(Array of Object), the array will be used for mutli track follow element order)",name:"trackStyle",required:!1,type:{name:"CSSProperties | CSSProperties[]"}},railStyle:{defaultValue:null,description:"The style used for the track base color.",name:"railStyle",required:!1,type:{name:"CSSProperties"}},dotStyle:{defaultValue:null,description:"The style used for the dots.",name:"dotStyle",required:!1,type:{name:"CSSProperties"}},activeDotStyle:{defaultValue:null,description:"The style used for the active dots.",name:"activeDotStyle",required:!1,type:{name:"CSSProperties"}},reverse:{defaultValue:{value:"false"},description:"Reverse the direction of the slider.\nFrom Left to Right To Right to Left",name:"reverse",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/widget/BioblocksSlider.tsx#BioblocksSlider"]={docgenInfo:c.__docgenInfo,name:"BioblocksSlider",path:"src/component/widget/BioblocksSlider.tsx#BioblocksSlider"})}catch(e){}},"./src/component/widget/CategorySelector.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},s=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/react/index.js"),l=n("./node_modules/semantic-ui-react/dist/es/index.js"),u=function(e){function t(t){return e.call(this,t)||this}return a(t,e),t.prototype.render=function(){var e=this.props,t=e.categories,n=e.onCategoryChange;return this.props.categories&&o.createElement(l.Dropdown,{fluid:!0,onChange:n,options:s(t.map((function(e){return{key:e,text:e,value:e}}))),placeholder:"Select Category",search:!0})},t.defaultProps={categories:[]},t}(o.Component);t.CategorySelector=u;try{u.displayName="CategorySelector",u.__docgenInfo={description:"Class to represent a dropdown.\n@extends React.Component<ICategorySelectorProps, any>",displayName:"CategorySelector",props:{categories:{defaultValue:null,description:"Categories to select from.",name:"categories",required:!0,type:{name:"string[]"}},onCategoryChange:{defaultValue:null,description:"Callback for when a new category is selected.",name:"onCategoryChange",required:!1,type:{name:"(event: SyntheticEvent<any, Event>, data: object) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/widget/CategorySelector.tsx#CategorySelector"]={docgenInfo:u.__docgenInfo,name:"CategorySelector",path:"src/component/widget/CategorySelector.tsx#CategorySelector"})}catch(e){}},"./src/component/widget/ComponentCard.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var l=n("./node_modules/react/index.js"),u=n("./node_modules/react-dom/index.js"),c=n("./node_modules/semantic-ui-react/dist/es/index.js"),d=n("./src/component/widget/index.ts"),p=function(e){function t(t){var n=e.call(this,t)||this;return n.cardRef=null,n.renderCard=function(e,t,r){return t?l.createElement(c.Modal,{closeOnDimmerClick:!0,closeOnEscape:!0,onClose:n.onFullPageToggle,open:!0,size:"large",style:i(i({},r),{willChange:"unset"})},e):e},n.renderCardChildren=function(){var e=n.props,t=e.children,r=e.headerHeight,a=e.isFramedComponent,i=n.state.framedStyle;return l.createElement(l.Fragment,null,l.createElement("div",{style:{height:"7%"}},n.renderTopMenu(r)),l.createElement("div",{style:{height:"90%",width:"100%"}},a?l.createElement("div",{style:i},t):t),l.createElement("div",{style:{height:"3%"}},n.renderDock()))},n.renderDock=function(){var e=n.props,t=e.dockItems,r=e.isDataReady;return t.length>=1&&l.createElement(d.ComponentDock,{dockItems:t,visible:r})},n.renderTopMenu=function(e){var t=n.props,r=t.componentName,a=t.iconSrc,i=t.menuItems,s=n.state.isFullPage;return l.createElement(d.ComponentMenuBar,{componentName:r,height:e,iconSrc:a,isExpanded:s,menuItems:i,onExpandToggleCb:n.onFullPageToggle})},n.onBorderClick=function(e){return s(n,void 0,void 0,(function(){var t;return o(this,(function(n){switch(n.label){case 0:return t=u.findDOMNode(this.cardRef),e.offsetX<0||e.offsetY<0||e.offsetX>t.clientWidth||e.offsetY>t.clientHeight?[4,document.exitFullscreen()]:[3,2];case 1:n.sent(),n.label=2;case 2:return[2]}}))}))},n.onFullPageToggle=function(){return s(n,void 0,void 0,(function(){var e,t;return o(this,(function(n){switch(n.label){case 0:return e=this.state.isFullPage,!(t=u.findDOMNode(this.cardRef))||e?[3,2]:(t.onclick=this.onBorderClick,[4,t.requestFullscreen()]);case 1:return n.sent(),[3,4];case 2:return[4,document.exitFullscreen()];case 3:n.sent(),t&&t.removeEventListener("click",this.onBorderClick),n.label=4;case 4:return[2]}}))}))},n.state={framedStyle:{transformOrigin:"top left"},isFullPage:t.isFullPage},n}return a(t,e),t.prototype.componentDidMount=function(){return s(this,void 0,void 0,(function(){var e=this;return o(this,(function(t){switch(t.label){case 0:return this.props.isFramedComponent?(window.onresize=function(){return s(e,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return this.props.isFramedComponent?[4,this.resizeFramedComponent()]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},[4,this.resizeFramedComponent()]):[3,2];case 1:t.sent(),t.label=2;case 2:return document.onfullscreenchange=function(){var t=e.state.isFullPage;e.setState({isFullPage:!t})},[2]}}))}))},t.prototype.componentWillUnmount=function(){document.onfullscreenchange=null;var e=u.findDOMNode(this.cardRef);e&&e.removeEventListener("click",this.onBorderClick)},t.prototype.componentDidUpdate=function(e,t){return s(this,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return this.state.isFullPage===t.isFullPage?[3,2]:[4,this.resizeFramedComponent()];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.render=function(){var e=this,t=this.props,n=t.expandedStyle,r=t.height,a=t.width,s=this.state.isFullPage,o="string"==typeof r?parseInt(r,10):r,u=i({maxWidth:"unset",padding:"0 0 0 5px"},s?i(i({},n),{padding:"5px",border:"5em black solid"}):{height:1.01*o+"px",width:a});return l.createElement(c.Card,{centered:!0,className:"bioblocks-component-card",ref:function(t){return e.cardRef=t},style:u},this.renderCardChildren())},t.prototype.resizeFramedComponent=function(){return s(this,void 0,void 0,(function(){var e,t,n,r,a,s,l,c,d,p,h;return o(this,(function(o){return e=this.props,t=e.frameHeight,n=e.frameWidth,r=e.headerHeight,a=this.state,s=a.framedStyle,l=a.isFullPage,(c=u.findDOMNode(this.cardRef))&&(d=window.getComputedStyle(c))&&null!==d.width&&null!==d.height&&(document.body.style.overflowY=l?"hidden":"auto",p=parseInt(d.height,10)-18,h=parseInt(d.width,10)-10,this.setState({framedStyle:i(i({},s),{transform:"scale(calc("+h+"/"+n+"),calc(("+p+" - "+r+")/"+t+"))"})})),[2]}))}))},t.defaultProps={dockItems:[],expandedStyle:{height:"85vh",width:"85vh"},frameHeight:0,frameWidth:0,headerHeight:20,height:"525px",iconSrc:"assets/icons/bio-blocks-icon.svg",isDataReady:!1,isFramedComponent:!1,isFullPage:!1,menuItems:[],padding:0,showSettings:!1,width:"525px"},t}(l.Component);t.ComponentCard=p;try{p.displayName="ComponentCard",p.__docgenInfo={description:"",displayName:"ComponentCard",props:{componentName:{defaultValue:null,description:"",name:"componentName",required:!0,type:{name:"string"}},dockItems:{defaultValue:null,description:"",name:"dockItems",required:!0,type:{name:"any[]"}},expandedStyle:{defaultValue:{value:"{\n      height: '85vh',\n      width: '85vh', // Intentionally 'vh' instead of 'vw' to make the card square.\n    }"},description:"",name:"expandedStyle",required:!1,type:{name:"CSSProperties"}},frameHeight:{defaultValue:{value:"0"},description:"",name:"frameHeight",required:!1,type:{name:"number"}},frameWidth:{defaultValue:{value:"0"},description:"",name:"frameWidth",required:!1,type:{name:"number"}},headerHeight:{defaultValue:{value:"20"},description:"",name:"headerHeight",required:!1,type:{name:"number"}},height:{defaultValue:{value:"525px"},description:"",name:"height",required:!1,type:{name:"string | number"}},iconSrc:{defaultValue:{value:"assets/icons/bio-blocks-icon.svg"},description:"",name:"iconSrc",required:!1,type:{name:"string"}},isDataReady:{defaultValue:{value:"false"},description:"",name:"isDataReady",required:!1,type:{name:"boolean"}},isFramedComponent:{defaultValue:{value:"false"},description:"",name:"isFramedComponent",required:!1,type:{name:"boolean"}},isFullPage:{defaultValue:{value:"false"},description:"",name:"isFullPage",required:!1,type:{name:"boolean"}},menuItems:{defaultValue:null,description:"",name:"menuItems",required:!0,type:{name:"any[]"}},padding:{defaultValue:{value:"0"},description:"",name:"padding",required:!1,type:{name:"string | number"}},showSettings:{defaultValue:{value:"false"},description:"",name:"showSettings",required:!1,type:{name:"boolean"}},width:{defaultValue:{value:"525px"},description:"",name:"width",required:!1,type:{name:"string | number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/widget/ComponentCard.tsx#ComponentCard"]={docgenInfo:p.__docgenInfo,name:"ComponentCard",path:"src/component/widget/ComponentCard.tsx#ComponentCard"})}catch(e){}},"./src/component/widget/ComponentDock.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var i=n("./node_modules/react/index.js"),s=n("./node_modules/semantic-ui-react/dist/es/index.js"),o=function(e){function t(t){var n=e.call(this,t)||this;return n.renderSingleDockItem=function(e,t){if(e.isVisibleCb&&!1===e.isVisibleCb())return null;var n=void 0===e.isLink||e.isLink;return i.createElement(s.Grid.Column,{key:"dock-item-"+t,style:{padding:0,paddingTop:"3px"}},n?i.createElement("div",{style:{userSelect:"none"}},i.createElement("a",{"aria-pressed":!1,onClick:e.onClick,role:"button"},e.text)):i.createElement("div",null,e.text))},n}return a(t,e),t.prototype.render=function(){var e=this,t=this.props,n=t.dockItems;return t.visible&&i.createElement(s.Grid,{centered:!0,columns:"equal",style:{marginLeft:"initial",marginRight:"initial",marginTop:"-0.5rem",padding:0},stretched:!0},n.map((function(t,n){return e.renderSingleDockItem(t,n)})))},t.defaultProps={visible:!0},t}(i.Component);t.ComponentDock=o;try{o.displayName="ComponentDock",o.__docgenInfo={description:"",displayName:"ComponentDock",props:{dockItems:{defaultValue:null,description:"",name:"dockItems",required:!0,type:{name:"IDockItem[]"}},visible:{defaultValue:{value:"true"},description:"Whether the entire dock is rendered. Useful in scenarios where a component is empty like when waiting for user data.",name:"visible",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/widget/ComponentDock.tsx#ComponentDock"]={docgenInfo:o.__docgenInfo,name:"ComponentDock",path:"src/component/widget/ComponentDock.tsx#ComponentDock"})}catch(e){}},"./src/component/widget/ComponentMenuBar.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},l=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};Object.defineProperty(t,"__esModule",{value:!0});var u=n("./node_modules/react/index.js"),c=n("./node_modules/semantic-ui-react/dist/es/index.js"),d=n("./src/component/widget/index.ts"),p=n("./src/data/index.ts");t.DEFAULT_POPUP_PROPS={closeOnPortalMouseLeave:!1,closeOnTriggerClick:!0,closeOnTriggerMouseLeave:!1,hoverable:!1,openOnTriggerClick:!0,openOnTriggerFocus:!1,openOnTriggerMouseEnter:!1,position:"bottom left",style:{marginTop:0,maxHeight:"350px",overflow:"auto",zIndex:3}};var h=function(e){function n(t){var n=e.call(this,t)||this;return n.renderConfigs=function(e){return Object.keys(e).map((function(t){var r;return(r={})[t]=e[t].map((function(e,r){return u.createElement(c.Grid.Row,{columns:1,key:"menu-bar-"+t+"-row-"+r,style:{padding:"5px 0",width:"100%"}},n.renderConfig(e,t+"-row-"+r))})),r}))},n.onMenuEnter=function(){n.setState({isHovered:!0})},n.onMenuLeave=function(){n.setState({isHovered:!1})},n.state={iconUrl:"assets/icons/bio-blocks-icon.svg",isHovered:!1},n}return a(n,e),n.prototype.componentDidMount=function(){return s(this,void 0,void 0,(function(){var e,t;return o(this,(function(n){switch(n.label){case 0:return e=this.props.iconSrc,[4,fetch(e)];case 1:return t=n.sent(),this.setState({iconUrl:t.url}),[2]}}))}))},n.prototype.render=function(){var e=this.props,t=e.componentName,n=e.height,r=e.iconSrc,a=e.isExpanded,i=e.menuItems,s=e.onExpandToggleCb,o=this.state.iconUrl;return u.createElement("div",{onMouseEnter:this.onMenuEnter,onMouseLeave:this.onMenuLeave},u.createElement(c.Menu,{secondary:!0,style:{margin:0,height:n}},u.createElement(c.Menu,{secondary:!0,widths:6,fluid:!1,style:{width:"auto"}},u.createElement(c.Menu.Item,{fitted:"horizontally",style:{margin:0,padding:0}},r&&u.createElement("img",{alt:"component icon",src:o,style:{height:"32px",padding:"2px",width:"32px"}}),t)),u.createElement(c.Menu.Item,{fitted:"horizontally",position:"right"},u.createElement(c.Menu,{secondary:!0},this.renderMenuItems(i,t),u.createElement(c.Menu.Item,{style:{flexDirection:"column"}},u.createElement(c.Icon,{name:a?"compress":"expand arrows alternate",onClick:s}),this.renderMenuIconText(a?"Close":"Expand"))))))},n.prototype.renderConfig=function(e,t){switch(e.type){case p.CONFIGURATION_COMPONENT_TYPE.BUTTON:return this.renderConfigurationButton(e,"button-"+t);case p.CONFIGURATION_COMPONENT_TYPE.BUTTON_GROUP:return this.renderConfigurationButtonGroup(e,"button-"+t);case p.CONFIGURATION_COMPONENT_TYPE.CHECKBOX:return this.renderConfigurationCheckbox(e,"label-"+t);case p.CONFIGURATION_COMPONENT_TYPE.DROP_DOWN:return this.renderConfigurationDropDown(e,"label-"+t);case p.CONFIGURATION_COMPONENT_TYPE.LABEL:return this.renderConfigurationLabel(e,"label-"+t);case p.CONFIGURATION_COMPONENT_TYPE.RADIO:return this.renderConfigurationRadioButton(e,"radio-"+t);case p.CONFIGURATION_COMPONENT_TYPE.RANGE_SLIDER:return this.renderConfigurationRangeSlider(e,"range-slider-"+t);case p.CONFIGURATION_COMPONENT_TYPE.SLIDER:return this.renderConfigurationSlider(e,"slider-"+t);default:return"configuration for "+t}},n.prototype.renderConfigurationButton=function(e,t){return u.createElement(c.Button,{compact:!0,key:t,onClick:e.onClick,style:e.style},e.icon&&u.createElement(c.Icon,{name:e.icon}),e.name)},n.prototype.renderConfigurationButtonGroup=function(e,t){return u.createElement(c.Grid,{padded:!0,style:{padding:"initial 0"}},u.createElement(c.Grid.Row,{columns:2},u.createElement(c.Grid.Column,{width:9},e.name),u.createElement(c.Grid.Column,{width:3},u.createElement(c.Button.Group,null,e.options.map((function(n,r){return u.createElement(c.Button,{icon:n,key:t+"-"+r,style:e.style,basic:!0,compact:!0})}))))))},n.prototype.renderConfigurationCheckbox=function(e,t){return u.createElement(c.Checkbox,{key:t,checked:e.checked,label:e.name,onChange:e.onChange,style:e.style})},n.prototype.renderConfigurationDropDown=function(e,t){return u.createElement(c.Dropdown,{key:t,onChange:e.onChange,options:e.options})},n.prototype.renderConfigurationLabel=function(e,t){return u.createElement(c.Label,{basic:!0,key:t,style:e.style,color:"orange"},e.name)},n.prototype.renderConfigurationRadioButton=function(e,t){return u.createElement(d.BioblocksRadioGroup,{defaultOption:e.defaultOption,id:t,key:t,options:e.options,onChange:e.onChange,selectedOption:e.current,style:e.style,title:e.name})},n.prototype.renderConfigurationRangeSlider=function(e,t){return u.createElement(d.BioblocksRangeSlider,{key:t,label:e.name,defaultValue:e.range.defaultRange,max:e.range.max,min:e.range.min,onAfterChange:e.onAfterChange,onChange:e.onChange,style:i({padding:"2px 0 3px 18px",width:"100%"},e.style),value:e.range.current})},n.prototype.renderConfigurationSlider=function(e,t){return u.createElement(d.BioblocksSlider,{key:t,label:e.name,defaultValue:e.values.defaultValue,marks:e.marks,max:e.values.max,min:e.values.min,onAfterChange:e.onAfterChange,onChange:e.onChange,step:e.step,style:i({padding:"2px 0 3px 18px",width:"100%"},e.style),value:e.values.current})},n.prototype.renderMenuIconText=function(e){var t=this.state.isHovered;return u.createElement("span",{style:{fontSize:"11px",visibility:t?"visible":"hidden"}},e)},n.prototype.renderMenuItems=function(e,n){var r=this,a=this.props.opacity;return e.map((function(e,s){var o=null;if("POPUP"===e.component.name){var p=u.createElement(c.Icon,{fitted:!0,name:e.iconName?e.iconName:"setting"}),h=i(i({},t.DEFAULT_POPUP_PROPS),e.component.props),m=h.style,g=l(h,["style"]);o=e.component.configs?u.createElement(c.Popup,i({trigger:p,wide:!0},g,{style:{opacity:a}}),u.createElement(d.ConfigAccordion,{configs:r.renderConfigs(e.component.configs),gridStyle:m,title:"Config"})):u.createElement(c.Popup,i({trigger:p},g,{style:{opacity:a}}))}else if("BUTTON"===e.component.name){var f={};if(e.component.props){var b=e.component.props;b.color,b.size;f=l(b,["color","size"])}o=u.createElement(c.Icon,i({fitted:!0,name:e.iconName?e.iconName:"setting"},f))}return o&&u.createElement(c.Menu.Item,{active:e.component.props?e.component.props.active:void 0,key:n+"-menu-item-"+s,style:{flexDirection:"column"},onClick:"onClick"in e.component?e.component.onClick:function(){}},o,r.renderMenuIconText(e.description))}))},n.defaultProps={height:"100%",iconSrc:"assets/icons/bio-blocks-icon.svg",isExpanded:!1,menuItems:[],opacity:.85,width:"100%"},n}(u.Component);t.ComponentMenuBar=h;try{h.displayName="ComponentMenuBar",h.__docgenInfo={description:"",displayName:"ComponentMenuBar",props:{componentName:{defaultValue:null,description:"",name:"componentName",required:!0,type:{name:"string"}},height:{defaultValue:{value:"100%"},description:"",name:"height",required:!1,type:{name:"string | number"}},isExpanded:{defaultValue:{value:"false"},description:"",name:"isExpanded",required:!1,type:{name:"boolean"}},iconSrc:{defaultValue:{value:"assets/icons/bio-blocks-icon.svg"},description:"",name:"iconSrc",required:!1,type:{name:"string"}},menuItems:{defaultValue:null,description:"",name:"menuItems",required:!0,type:{name:"IComponentMenuBarItem<IButtonType | IPopupType>[]"}},opacity:{defaultValue:{value:"0.85"},description:"",name:"opacity",required:!1,type:{name:"number"}},width:{defaultValue:{value:"100%"},description:"",name:"width",required:!1,type:{name:"string | number"}},onExpandToggleCb:{defaultValue:null,description:"",name:"onExpandToggleCb",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/widget/ComponentMenuBar.tsx#ComponentMenuBar"]={docgenInfo:h.__docgenInfo,name:"ComponentMenuBar",path:"src/component/widget/ComponentMenuBar.tsx#ComponentMenuBar"})}catch(e){}},"./src/component/widget/ConfigAccordion.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},s=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/react/index.js"),l=n("./node_modules/semantic-ui-react/dist/es/index.js"),u=function(e){function t(t){var n=e.call(this,t)||this;return n.renderConfigs=function(e,t){return e.map((function(r,a){return Object.keys(r).map((function(r){return o.createElement(l.Grid.Row,{key:"accordion-"+r,textAlign:"left"},o.createElement(l.Accordion.Title,{active:t.includes(a),index:a,key:r+"-title",onClick:n.onClick,style:{fontWeight:"bolder",textAlign:"left"}},o.createElement(l.Icon,{name:"dropdown"}),r),o.createElement(l.Accordion.Content,{active:t.includes(a),key:r+"-content",style:{width:"100%"}},n.renderSingleConfig(Object.entries(e)[a])))}))}))},n.onClick=function(e,t){var r=n.props.allowMultipleOpen,a=n.state.activeIndices;void 0!==t&&void 0!==t.index&&(a.includes(t.index)?n.setState({activeIndices:a.filter((function(e){return e!==t.index}))}):r?n.setState({activeIndices:s(a,[t.index])}):n.setState({activeIndices:[t.index]}))},n.renderSingleConfig=function(e){return o.createElement(l.Grid.Row,{key:"accordion-"+e[0],textAlign:"left"},o.createElement(l.Grid,{padded:!0,relaxed:!0,stretched:!0,style:{marginTop:"7px"}},Object.values(e[1])))},n.state={activeIndices:t.configs.length>=1?[0]:[]},n}return a(t,e),t.prototype.render=function(){var e=this.props,t=e.configs,n=e.gridStyle,r=this.state.activeIndices;return o.createElement(l.Accordion,null,o.createElement(l.Grid,{padded:!0,stretched:!0,style:n},this.renderConfigs(t,r)))},t.defaultProps={allowMultipleOpen:!1,gridStyle:{}},t}(o.Component);t.ConfigAccordion=u;try{u.displayName="ConfigAccordion",u.__docgenInfo={description:"",displayName:"ConfigAccordion",props:{allowMultipleOpen:{defaultValue:{value:"false"},description:"",name:"allowMultipleOpen",required:!1,type:{name:"boolean"}},configs:{defaultValue:null,description:"",name:"configs",required:!0,type:{name:"IConfigGroup[]"}},gridStyle:{defaultValue:{value:"{}"},description:"",name:"gridStyle",required:!1,type:{name:"any"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/widget/ConfigAccordion.tsx#ConfigAccordion"]={docgenInfo:u.__docgenInfo,name:"ConfigAccordion",path:"src/component/widget/ConfigAccordion.tsx#ConfigAccordion"})}catch(e){}},"./src/component/widget/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/component/widget/BioblocksRadioGroup.tsx")),r(n("./src/component/widget/BioblocksRangeSlider.tsx")),r(n("./src/component/widget/BioblocksSlider.tsx")),r(n("./src/component/widget/CategorySelector.tsx")),r(n("./src/component/widget/ComponentCard.tsx")),r(n("./src/component/widget/ComponentDock.tsx")),r(n("./src/component/widget/ComponentMenuBar.tsx")),r(n("./src/component/widget/ConfigAccordion.tsx"))},"./src/container/AnatomogramContainer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=n("./node_modules/anatomogram/lib/index.js"),o=n("./node_modules/immutable/dist/immutable.js"),l=n("./node_modules/react/index.js"),u=n("./node_modules/react-redux/es/index.js"),c=n("./node_modules/redux/es/redux.js"),d=n("./src/action/index.ts"),p=n("./src/component/index.ts"),h=n("./src/container/index.ts"),m=n("./src/data/index.ts"),g=n("./src/helper/index.ts"),f=n("./src/reducer/index.ts"),b=n("./src/selector/index.ts"),y=function(e){function t(t){var n=e.call(this,t)||this;return n.divRef=null,n.onClick=function(e){var t=e[0],r=n.props,a=r.addLabel,i=r.removeLabel;r.selectIds.includes(t)?i(t):a(t)},n.deriveIdsFromSpecies=function(e){return Object.keys(m.AnatomogramMapping[e])},n.onMouseOut=function(e){},n.onMouseOver=function(e){},n.parseCategory=function(e){return e.split(/-|_/)[0]},n.resizeSVGElement=function(e,t){if(n.divRef){var r=t.height.baseVal.value>t.width.baseVal.value;t.style.height=r?"calc("+n.divRef.style.height+" - 50px)":"auto",t.style.padding="0",t.style.width=r?"auto":"calc("+n.divRef.style.width+" - 75px)"}},n.state={ids:n.deriveIdsFromSpecies(t.species)},n}return a(t,e),t.prototype.setupDataServices=function(){var e=this;this.registerDataset("cells",[]),this.registerDataset("labels",[]),f.BioblocksMiddlewareTransformer.addTransform({fn:function(t){var n=e.props,r=n.species,a=n.selectIds,i=b.getSpring(t).graphData,s=m.AnatomogramMapping[r],l=o.Set();a.forEach((function(e){l=e&&s[e]?l.merge(s[e]):l}));var u=o.Set();return i.nodes.forEach((function(e){l.forEach((function(t){t&&Object.values(e.labelForCategory).includes(t)&&(u=u.add(e.number))}))})),u},fromState:"bioblocks/labels",toState:"bioblocks/cells"}),f.BioblocksMiddlewareTransformer.addTransform({fn:function(t){var n,r,a,s,l,u,c=e.props.species,d=b.selectCurrentItems(t,"cells").toArray(),p=b.getSpring(t),h=p.category,g=p.graphData,f=o.Set();try{for(var y=i(d),S=y.next();!S.done;S=y.next()){var v=S.value,x=g.nodes[v]?g.nodes[v].labelForCategory:{},C=m.AnatomogramMapping[c][x[h]];C&&C.forEach((function(e){return f=f.add(e)}));try{for(var R=(a=void 0,i(Object.keys(m.AnatomogramMapping[c]))),T=R.next();!T.done;T=R.next()){var A=T.value;try{for(var V=(l=void 0,i(Object.values(x))),w=V.next();!w.done;w=V.next()){var _=w.value;m.AnatomogramMapping[c][A].includes(_)&&(f=f.add(A))}}catch(e){l={error:e}}finally{try{w&&!w.done&&(u=V.return)&&u.call(V)}finally{if(l)throw l.error}}}}catch(e){a={error:e}}finally{try{T&&!T.done&&(s=R.return)&&s.call(R)}finally{if(a)throw a.error}}}}catch(e){n={error:e}}finally{try{S&&!S.done&&(r=y.return)&&r.call(y)}finally{if(n)throw n.error}}return f},fromState:{stateName:"cells"},toState:{stateName:"labels"}})},t.prototype.componentDidUpdate=function(e){var t=this.props.species;t!==e.species&&this.setState({ids:this.deriveIdsFromSpecies(t)})},t.prototype.render=function(){var e=this,t=this.props,n=t.iconSrc,r=t.species,a=t.selectIds,i=this.state.ids;return l.createElement(u.Provider,{store:f.BBStore},l.createElement("div",{className:"anatomogram-container",ref:function(t){t&&(e.divRef=t.getElementsByTagName("div")[0])}},l.createElement(p.ComponentCard,{componentName:"Anatomogram",iconSrc:n},l.createElement(s.default,{atlasUrl:"",highlightColour:"yellow",onClick:this.onClick,onInjected:this.resizeSVGElement,onMouseOut:this.onMouseOut,onMouseOver:this.onMouseOver,selectColour:"ffaa00",selectIds:a.toArray(),showIds:i,species:r,selectedView:"mus_musculus"===r?"female":"male"}))))},t.defaultProps={addLabel:g.EMPTY_FUNCTION,removeLabel:g.EMPTY_FUNCTION,selectIds:o.Set()},t.displayName="Anatomogram",t}(h.BioblocksVisualization);t.AnatomogramContainerClass=y;t.AnatomogramContainer=u.connect((function(e){return{selectIds:b.selectCurrentItems(e,"labels")}}),(function(e){return c.bindActionCreators({addLabel:d.createContainerActions("labels").add,removeLabel:d.createContainerActions("labels").remove},e)}))(y);try{t.AnatomogramContainer.displayName="AnatomogramContainer",t.AnatomogramContainer.__docgenInfo={description:"",displayName:"AnatomogramContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/AnatomogramContainer.tsx#AnatomogramContainer"]={docgenInfo:t.AnatomogramContainer.__docgenInfo,name:"AnatomogramContainer",path:"src/container/AnatomogramContainer.tsx#AnatomogramContainer"})}catch(e){}},"./src/container/BioblocksVisualization.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var i=n("./node_modules/immutable/dist/immutable.js"),s=n("./node_modules/react/index.js"),o=n("./node_modules/util/util.js"),l=n("./src/data/index.ts"),u=n("./src/reducer/index.ts"),c=function(e){function t(n){var r=e.call(this,n)||this;return r.bioblocksHooks={},r.datasets=i.Set(),r.loadingStatus=2,t.activeBioblocksVisualizations=t.activeBioblocksVisualizations.add(r),r.setupDataServices(),r}return a(t,e),t.prototype.componentWillUnmount=function(){this.teardown()},t.prototype.addBioblocksHook=function(e,t){this.bioblocksHooks[e]=t},t.prototype.registerDataset=function(e,t,n){void 0===n&&(n="bioblocks"),this.datasets=this.datasets.add(new l.Dataset(e,n)),this.createReducer(e,t,n)},t.prototype.finishLoading=function(){this.loadingStatus=3},t.prototype.getDatasets=function(){return this.datasets},t.prototype.getComponentBioblocksHooks=function(){return this.bioblocksHooks},t.prototype.getLoadingStatus=function(){return this.loadingStatus},t.prototype.teardown=function(){t.activeBioblocksVisualizations=t.activeBioblocksVisualizations.remove(this)},t.prototype.createReducer=function(e,t,n){void 0===n&&(n="bioblocks"),o.isArray(t)?u.createContainerReducer(e,n):"object"==typeof t?u.createObjectReducer(e,n):u.createValueReducer(e,t,n)},t.getActiveBioblocksVisualizations=function(){return t.activeBioblocksVisualizations},t.activeBioblocksVisualizations=i.Set(),t}(s.Component);t.BioblocksVisualization=c;try{c.displayName="BioblocksVisualization",c.__docgenInfo={description:"",displayName:"BioblocksVisualization",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/BioblocksVisualization.tsx#BioblocksVisualization"]={docgenInfo:c.__docgenInfo,name:"BioblocksVisualization",path:"src/container/BioblocksVisualization.tsx#BioblocksVisualization"})}catch(e){}},"./src/container/InfoPanelContainer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=n("./node_modules/react/index.js"),o=n("./node_modules/react-redux/es/index.js"),l=n("./node_modules/semantic-ui-react/dist/es/index.js"),u=n("./src/data/index.ts"),c=n("./src/selector/index.ts"),d=function(e){function t(t){return e.call(this,t)||this}return a(t,e),t.prototype.render=function(){var e=this,t=this.props,n=t.data,r=t.height,a=t.lockedResiduePairs,i=t.selectedSecondaryStructures,o=t.width,u=n.pdbData,c=u&&u.experimental?this.renderUnassignedResidues(u.experimental):[s.createElement(l.Label,{key:"unassigned-residues-none"})];return s.createElement("div",{className:"InfoPanel",style:{height:r,width:o}},s.createElement(l.Accordion,{exclusive:!1,panels:[u&&u.experimental&&u.experimental.secondaryStructureSections.map((function(t){return{content:e.renderSecondaryStructures(t),key:"all-secondary-structures",title:"All Secondary Structures ("+(u.experimental?u.experimental.secondaryStructureSections.length:0)+"):"}})),{content:c,key:"unassigned-residues",title:"Unassigned Residues ("+c.length+"):"},{content:this.renderSecondaryStructures(i),key:"selected-secondary-structures",title:"Selected Secondary Structures ("+i.length+"):"},{content:this.renderLockedResiduePairs(a),key:"selected-residue-pairs",title:"Selected Residue Pairs ("+a.size+"):"}]}))},t.prototype.renderLockedResiduePairs=function(e){return 0===Object.keys(e).length?[s.createElement(l.Label,{key:"locked-residue-pair-none"},"None")]:Array.from(Object.values(e)).map((function(e,t){return s.createElement(l.Label,{key:"locked-residue-pair-"+t},e.join(", "))}))},t.prototype.renderSecondaryStructures=function(e){return 0===e.length?[s.createElement(l.Label,{key:"sec-struct-none"},"None")]:e.map((function(e,t){return s.createElement(l.Label,{key:"sec-struct-"+t},"["+e.start+"-"+e.end+"]: "+e.label+" - "+u.SECONDARY_STRUCTURE_CODES[e.label])}))},t.prototype.renderUnassignedResidues=function(e){var t=new Array;return e.eachResidue((function(n){var r,a,o,u;if(n.isProtein()){var c=!0;try{for(var d=i(e.secondaryStructureSections),p=d.next();!p.done;p=d.next()){var h=p.value;try{for(var m=(o=void 0,i(h)),g=m.next();!g.done;g=m.next()){if(g.value.contains(n.resno)){c=!1;break}}}catch(e){o={error:e}}finally{try{g&&!g.done&&(u=m.return)&&u.call(m)}finally{if(o)throw o.error}}}}catch(e){r={error:e}}finally{try{p&&!p.done&&(a=d.return)&&a.call(d)}finally{if(r)throw r.error}}c&&t.push(s.createElement(l.Label,{key:"unassigned-residue-"+n.resno},"["+n.resno+": isCg? "+n.isCg()+",               isDna? "+n.isDna()+",               isHelix? "+n.isHelix()+",               isNucleic? "+n.isNucleic()+",               isProtein? "+n.isProtein()+",               isPolymer? "+n.isPolymer()+",               isSaccharide? "+n.isSaccharide()+",               isSheet? "+n.isSheet()+",              isTurn? "+n.isTurn(),"}"))}})),t},t.defaultProps={data:{couplingScores:new u.CouplingContainer,pdbData:{},secondaryStructures:new Array},height:400,lockedResiduePairs:{},selectedSecondaryStructures:[],width:400},t}(s.Component);t.InfoPanelContainerClass=d;t.InfoPanelContainer=o.connect((function(e){return{lockedResiduePairs:c.getLocked(e).toJS(),selectedSecondaryStructures:c.selectCurrentItems(e,"secondaryStructure/selected").toArray()}}))(d);try{d.displayName="InfoPanelContainerClass",d.__docgenInfo={description:"",displayName:"InfoPanelContainerClass",props:{data:{defaultValue:{value:"{\n      couplingScores: new CouplingContainer(),\n      pdbData: {},\n      secondaryStructures: new Array<SECONDARY_STRUCTURE>(),\n    }"},description:"",name:"data",required:!1,type:{name:"any"}},height:{defaultValue:{value:"400"},description:"",name:"height",required:!1,type:{name:"number"}},lockedResiduePairs:{defaultValue:{value:"{}"},description:"",name:"lockedResiduePairs",required:!1,type:{name:"any"}},selectedSecondaryStructures:{defaultValue:null,description:"",name:"selectedSecondaryStructures",required:!0,type:{name:"any[]"}},width:{defaultValue:{value:"400"},description:"",name:"width",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/InfoPanelContainer.tsx#InfoPanelContainerClass"]={docgenInfo:d.__docgenInfo,name:"InfoPanelContainerClass",path:"src/container/InfoPanelContainer.tsx#InfoPanelContainerClass"})}catch(e){}try{t.InfoPanelContainer.displayName="InfoPanelContainer",t.InfoPanelContainer.__docgenInfo={description:"",displayName:"InfoPanelContainer",props:{data:{defaultValue:null,description:"",name:"data",required:!1,type:{name:"any"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},lockedResiduePairs:{defaultValue:null,description:"",name:"lockedResiduePairs",required:!1,type:{name:"{}"}},selectedSecondaryStructures:{defaultValue:null,description:"",name:"selectedSecondaryStructures",required:!1,type:{name:"any[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/InfoPanelContainer.tsx#InfoPanelContainer"]={docgenInfo:t.InfoPanelContainer.__docgenInfo,name:"InfoPanelContainer",path:"src/container/InfoPanelContainer.tsx#InfoPanelContainer"})}catch(e){}},"./src/container/NGLContainer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n},o=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},l=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var u=n("./node_modules/immutable/dist/immutable.js"),c=n("./node_modules/react/index.js"),d=n("./node_modules/react-redux/es/index.js"),p=n("./node_modules/redux/es/redux.js"),h=n("./node_modules/semantic-ui-react/dist/es/index.js"),m=n("./src/action/index.ts"),g=n("./src/action/ResiduePairAction.ts"),f=n("./src/component/index.ts"),b=n("./src/data/index.ts"),y=n("./src/helper/index.ts"),S=n("./src/reducer/index.ts"),v=n("./src/selector/index.ts"),x=function(e){function t(t){var n=e.call(this,t)||this;return n.onExperimentalProteinSelect=function(e,t){var r=t.value.split(" ")[0];n.setState({selectedExperimentalProteins:t.checked?l(n.state.selectedExperimentalProteins,[r]):n.state.selectedExperimentalProteins.filter((function(e){return e!==r}))})},n.onPredictedProteinSelect=function(e,t){var r=t.value.split(" ")[0];n.setState({selectedPredictedProteins:t.checked?l(n.state.selectedPredictedProteins,[r]):n.state.selectedPredictedProteins.filter((function(e){return e!==r}))})},n.renderPDBTableBody=function(e,t,r,a){return c.createElement(h.Table.Body,null,n.renderPDBTableBodyRows(e,t,r,a))},n.renderPDBTableBodyRows=function(e,t,r,a){var i=n.state,s=i.selectedExperimentalProteins,o=i.selectedPredictedProteins;return e.map((function(e,i){return c.createElement(h.Table.Row,{key:"pdb-radio-"+t+"-"+i},c.createElement(h.Table.Cell,{style:r},c.createElement(h.Popup,{position:"bottom center",pinned:!0,trigger:c.createElement(h.Checkbox,{checked:("experimental"===t?s:o).includes(e.name),onChange:a,value:e.name,label:e.name.split("_").reverse().slice(0,4).reverse().join("_")})},e.name)),n.renderPDBTableSequenceCell(t,r,e),n.renderPDBTableSourceCell(t,r,e),n.renderPDBTableRankCell(t,r,e))}))},n.renderPDBTableHeader=function(e,t){return c.createElement(h.Table.Header,null,c.createElement(h.Table.Row,null,c.createElement(h.Table.HeaderCell,{style:t},"Name"),n.renderPDBTableSequenceHeader(e,t),n.renderPDBTableSourceHeader(e,t),n.renderPDBTableRankHeader(e,t)))},n.renderPDBTableRankCell=function(e,t,n){return"predicted"===e&&c.createElement(h.Table.Cell,{style:t},n.rank)},n.renderPDBTableRankHeader=function(e,t){return"predicted"===e&&c.createElement(h.Table.HeaderCell,{style:t},"Rank")},n.renderPDBTableSequenceCell=function(e,t,r){return"experimental"===e&&c.createElement(h.Table.Cell,{style:t},n.props.predictedProteins.length>=1?""+n.sequenceSimilarityPercent(r.sequence,n.props.predictedProteins[0].sequence):"N/A")},n.renderPDBTableSequenceHeader=function(e,t){return"experimental"===e&&c.createElement(h.Table.HeaderCell,{style:t},"Seq. ID")},n.renderPDBTableSourceCell=function(e,t,n){return"experimental"===e&&c.createElement(h.Table.Cell,{style:t},n.source)},n.renderPDBTableSourceHeader=function(e,t){return"experimental"===e&&c.createElement(h.Table.HeaderCell,{style:t},"Source")},n.state={selectedExperimentalProteins:[],selectedPredictedProteins:[]},n.setupDataServices(),n}return a(t,e),t.prototype.componentDidMount=function(){var e=this.props,t=e.experimentalProteins,n=e.predictedProteins,r=t.length>=1?[t[0].name]:[],a=n.length>=1?[n[0].name]:[];this.setState({selectedExperimentalProteins:r,selectedPredictedProteins:a})},t.prototype.componentDidUpdate=function(e){var t=this.props,n=t.experimentalProteins,r=t.predictedProteins,a=this.state,i=a.selectedExperimentalProteins,s=a.selectedPredictedProteins,o=!1;this.isBioblocksPDBArrayEqual(n,e.experimentalProteins)&&(o=!0,i=0===n.length?[]:[n[0].name]),this.isBioblocksPDBArrayEqual(r,e.predictedProteins)&&(o=!0,s=0===r.length?[]:[r[0].name]),o&&this.setState({selectedExperimentalProteins:i,selectedPredictedProteins:s})},t.prototype.setupDataServices=function(){S.createContainerReducer("secondaryStructure/hovered"),S.createContainerReducer("secondaryStructure/selected"),S.createContainerReducer("pdb"),S.createResiduePairReducer()},t.prototype.render=function(){var e=this.props,t=e.experimentalProteins,n=e.lockedResiduePairs,r=e.predictedProteins,a=s(e,["experimentalProteins","lockedResiduePairs","predictedProteins"]),o=this.state,l=o.selectedExperimentalProteins,u=o.selectedPredictedProteins;return c.createElement(d.Provider,{store:S.BBStore},c.createElement(h.Grid,{padded:!0},c.createElement(h.Grid.Row,null,c.createElement(f.NGLComponent,i({experimentalProteins:t.filter((function(e){return l.includes(e.name)})),lockedResiduePairs:n.toJS(),menuItems:[{component:{name:"POPUP",props:{children:this.renderPDBSelector(),disabled:0===t.length&&0===r.length,position:"top center",wide:"very"}},description:"PDB Selector",iconName:"tasks"}],predictedProteins:r.filter((function(e){return u.includes(e.name)}))},a)))))},t.prototype.isBioblocksPDBArrayEqual=function(e,t){return e.length!==t.length||e.reduce((function(e,n,r){return e||n.name!==t[r].name}),!1)},t.prototype.renderPDBSelector=function(){return c.createElement(h.Grid,{divided:!0,padded:!0},c.createElement(h.Grid.Row,null,c.createElement(h.Grid.Column,null,c.createElement(h.Header,null,"Select Structures to Display"))),c.createElement(h.Grid.Row,{columns:2,style:{padding:"5px 0"}},c.createElement(h.Grid.Column,{width:9},"Experimental ("+this.state.selectedExperimentalProteins.length+"/"+this.props.experimentalProteins.length+")",this.renderPDBTable(this.props.experimentalProteins,"experimental",this.onExperimentalProteinSelect)),c.createElement(h.Grid.Column,{width:7},"Predicted ("+this.state.selectedPredictedProteins.length+"/"+this.props.predictedProteins.length+")",this.renderPDBTable(this.props.predictedProteins,"predicted",this.onPredictedProteinSelect))))},t.prototype.renderPDBTable=function(e,t,n){var r=this.props.maxPDBPerPopup,a={padding:"5px 0"};return c.createElement("div",{style:{height:50*r+"px",overflow:"auto"}},c.createElement(h.Table,{basic:"very",compact:!0,padded:!0},this.renderPDBTableHeader(t,a),this.renderPDBTableBody(e,t,a,n)))},t.prototype.sequenceSimilarityPercent=function(e,t,n){void 0===n&&(n=1);var r=e.split("").reduce((function(e,n,r){return e+(n===t[r]?1:0)}),0)/e.length*100;return isNaN(r)?"N/A":r.toFixed(n)+"%"},t.defaultProps={dispatchNglFetch:y.EMPTY_FUNCTION,experimentalProteins:[],isDataLoading:!1,lockedResiduePairs:u.Map(),maxPDBPerPopup:5,measuredProximity:b.CONTACT_DISTANCE_PROXIMITY.C_ALPHA,predictedProteins:[],showConfigurations:!0},t}(c.Component);t.NGLContainerClass=x;t.NGLContainer=d.connect((function(e){return{candidateResidues:v.getCandidates(e).toArray(),hoveredResidues:v.getHovered(e).toArray(),hoveredSecondaryStructures:v.selectCurrentItems(e,"secondaryStructure/hovered").toArray(),lockedResiduePairs:v.getLocked(e),removeNonLockedResidues:function(){var e=g.createResiduePairActions(),t=e.candidates,n=e.hovered;t.clear(),n.clear()},selectedSecondaryStructures:v.selectCurrentItems(e,"secondaryStructure/selected").toArray()}}),(function(e){return p.bindActionCreators({addCandidateResidues:g.createResiduePairActions().candidates.addMultiple,addHoveredResidues:g.createResiduePairActions().hovered.set,addLockedResiduePair:g.createResiduePairActions().locked.add,removeAllLockedResiduePairs:g.createResiduePairActions().locked.clear,removeAllSelectedSecondaryStructures:m.createContainerActions("secondaryStructure/selected").clear,removeCandidateResidues:g.createResiduePairActions().candidates.clear,removeHoveredResidues:g.createResiduePairActions().hovered.clear,removeLockedResiduePair:g.createResiduePairActions().locked.remove},e)}))(x);try{x.displayName="NGLContainerClass",x.__docgenInfo={description:"",displayName:"NGLContainerClass",props:{candidateResidues:{defaultValue:null,description:"",name:"candidateResidues",required:!1,type:{name:"any[]"}},experimentalProteins:{defaultValue:null,description:"",name:"experimentalProteins",required:!0,type:{name:"any[]"}},hoveredResidues:{defaultValue:null,description:"",name:"hoveredResidues",required:!1,type:{name:"any[]"}},hoveredSecondaryStructures:{defaultValue:null,description:"",name:"hoveredSecondaryStructures",required:!1,type:{name:"any[]"}},isDataLoading:{defaultValue:{value:"false"},description:"",name:"isDataLoading",required:!1,type:{name:"boolean"}},lockedResiduePairs:{defaultValue:null,description:"",name:"lockedResiduePairs",required:!0,type:{name:"Map<string, Set<any>>"}},maxPDBPerPopup:{defaultValue:{value:"5"},description:"",name:"maxPDBPerPopup",required:!1,type:{name:"number"}},measuredProximity:{defaultValue:{value:"CONTACT_DISTANCE_PROXIMITY.C_ALPHA"},description:"",name:"measuredProximity",required:!1,type:{name:"any"}},predictedProteins:{defaultValue:null,description:"",name:"predictedProteins",required:!0,type:{name:"any[]"}},selectedSecondaryStructures:{defaultValue:null,description:"",name:"selectedSecondaryStructures",required:!1,type:{name:"any[]"}},showConfigurations:{defaultValue:{value:"true"},description:"",name:"showConfigurations",required:!1,type:{name:"boolean"}},addCandidateResidues:{defaultValue:null,description:"",name:"addCandidateResidues",required:!1,type:{name:"(residues: any[]) => void"}},addHoveredResidues:{defaultValue:null,description:"",name:"addHoveredResidues",required:!1,type:{name:"(residues: any[]) => void"}},addLockedResiduePair:{defaultValue:null,description:"",name:"addLockedResiduePair",required:!1,type:{name:"(residuePair: any) => void"}},onMeasuredProximityChange:{defaultValue:null,description:"",name:"onMeasuredProximityChange",required:!1,type:{name:"(value: number) => void"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"(event?: UIEvent) => void"}},removeAllLockedResiduePairs:{defaultValue:null,description:"",name:"removeAllLockedResiduePairs",required:!1,type:{name:"() => void"}},removeHoveredResidues:{defaultValue:null,description:"",name:"removeHoveredResidues",required:!1,type:{name:"() => void"}},removeNonLockedResidues:{defaultValue:null,description:"",name:"removeNonLockedResidues",required:!1,type:{name:"() => void"}},removeLockedResiduePair:{defaultValue:null,description:"",name:"removeLockedResiduePair",required:!1,type:{name:"(key: string) => void"}},removeCandidateResidues:{defaultValue:null,description:"",name:"removeCandidateResidues",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/NGLContainer.tsx#NGLContainerClass"]={docgenInfo:x.__docgenInfo,name:"NGLContainerClass",path:"src/container/NGLContainer.tsx#NGLContainerClass"})}catch(e){}try{t.NGLContainer.displayName="NGLContainer",t.NGLContainer.__docgenInfo={description:"",displayName:"NGLContainer",props:{onMeasuredProximityChange:{defaultValue:null,description:"",name:"onMeasuredProximityChange",required:!1,type:{name:"(value: number) => void"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"(event?: UIEvent) => void"}},experimentalProteins:{defaultValue:null,description:"",name:"experimentalProteins",required:!1,type:{name:"any[]"}},isDataLoading:{defaultValue:null,description:"",name:"isDataLoading",required:!1,type:{name:"boolean"}},measuredProximity:{defaultValue:null,description:"",name:"measuredProximity",required:!1,type:{name:"any"}},predictedProteins:{defaultValue:null,description:"",name:"predictedProteins",required:!1,type:{name:"any[]"}},showConfigurations:{defaultValue:null,description:"",name:"showConfigurations",required:!1,type:{name:"boolean"}},maxPDBPerPopup:{defaultValue:null,description:"",name:"maxPDBPerPopup",required:!1,type:{name:"number"}},lockedResiduePairs:{defaultValue:null,description:"",name:"lockedResiduePairs",required:!1,type:{name:"Map<string, Set<any>>"}},dispatchNglFetch:{defaultValue:null,description:"",name:"dispatchNglFetch",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/NGLContainer.tsx#NGLContainer"]={docgenInfo:t.NGLContainer.__docgenInfo,name:"NGLContainer",path:"src/container/NGLContainer.tsx#NGLContainer"})}catch(e){}},"./src/container/PredictedContactMap.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/react/index.js"),l=n("./node_modules/react-redux/es/index.js"),u=n("./src/component/index.ts"),c=n("./src/data/index.ts"),d=n("./src/helper/index.ts"),p=n("./src/reducer/index.ts");t.initialPredictedContactMapState={linearDistFilter:5,minimumProbability:.9,minimumScore:0,numPredictionsToShow:-1,pointsToPlot:[],rankFilter:[1,100]};var h=function(e){function n(n){var r=e.call(this,n)||this;return r.state=t.initialPredictedContactMapState,r.onLinearDistFilterChange=function(){return function(e){r.setState({linearDistFilter:e})}},r.onMinimumProbabilityChange=function(){return function(e){r.setState({minimumProbability:e})}},r.onNumPredictionsToShowChange=function(){return function(e){r.setState({numPredictionsToShow:e})}},r.getConfigs=function(){var e,n=r.state,a=n.linearDistFilter,i=n.minimumProbability,s=n.numPredictionsToShow,o=r.props.data.couplingScores.chainLength;return[{marks:(e={},e[Math.floor(o/2)]="L/2",e[Math.floor(o/4)]="L/4",e[0]="0",e[o]="L",e[2*o]="2L",e[3*o]="3L",e),name:"# Couplings to Display",onChange:r.onNumPredictionsToShowChange(),type:c.CONFIGURATION_COMPONENT_TYPE.SLIDER,values:{current:s,defaultValue:Math.floor(o/2),max:3*o,min:0}},{name:"Linear Distance Filter (|i - j|)",onChange:r.onLinearDistFilterChange(),type:c.CONFIGURATION_COMPONENT_TYPE.SLIDER,values:{current:a,defaultValue:t.initialPredictedContactMapState.linearDistFilter,max:10,min:1}},{name:"Minimum Probability",onChange:r.onMinimumProbabilityChange(),step:.01,type:c.CONFIGURATION_COMPONENT_TYPE.SLIDER,values:{current:i,defaultValue:t.initialPredictedContactMapState.minimumProbability,max:1,min:0}}]},r.getPredictedFilters=function(){var e=r.state,t=e.linearDistFilter,n=e.minimumProbability,a=e.minimumScore;return new Array({filterFn:function(e){return void 0===e.probability||e.probability>=n}},{filterFn:function(e){return void 0===e.score||e.score>=a}},{filterFn:function(e){return Math.abs(e.i-e.j)>=t}})},r.setupDataServices(),r}return a(n,e),n.prototype.setupDataServices=function(){p.createContainerReducer("secondaryStructure/hovered"),p.createContainerReducer("secondaryStructure/selected"),p.createContainerReducer("pdb"),p.createResiduePairReducer()},n.prototype.componentDidMount=function(){this.setupData(!0)},n.prototype.componentDidUpdate=function(e,t){var n=this.props,r=n.agreementColor,a=n.allColor,i=n.data,s=this.state,o=s.linearDistFilter,l=s.minimumProbability,u=s.minimumScore,c=s.numPredictionsToShow,d=s.rankFilter;(r!==e.agreementColor||a!==e.allColor||i.couplingScores!==e.data.couplingScores||o!==t.linearDistFilter||l!==t.minimumProbability||u!==t.minimumScore||c!==t.numPredictionsToShow||d!==t.rankFilter)&&this.setupData(i.couplingScores!==e.data.couplingScores)},n.prototype.render=function(){var e=this.props,t=e.data,n=e.style,r=s(e,["data","style"]),a=this.state.pointsToPlot;return o.createElement(l.Provider,{store:p.BBStore},o.createElement("div",{className:"PredictedContactMapComponent",style:n},o.createElement(u.ContactMap,i({configurations:this.getConfigs(),data:{couplingScores:t.couplingScores,pdbData:t.pdbData,secondaryStructures:t.secondaryStructures},formattedPoints:a},r))))},n.prototype.setupData=function(e){var t=this.props,n=t.agreementColor,r=t.data,a=t.allColor,i=this.state,s=i.linearDistFilter,o=i.numPredictionsToShow,l=r.couplingScores,c=l.chainLength,p=new Array;if(l.isDerivedFromCouplingScores){var h=l.getPredictedContacts(o,s,this.getPredictedFilters()),m=(h.correct.length/h.predicted.length*100).toFixed(1);p.push(u.generateChartDataEntry("text",a,"Inferred Contact","(N="+o+", L="+c+")",4,h.predicted,{text:h.predicted.map(d.generateCouplingScoreHoverText)}),u.generateChartDataEntry("text",n,"Inferred Contact Agrees with PDB Contact","(N="+h.correct.length+", "+m+"%)",6,h.correct,{text:h.correct.map(d.generateCouplingScoreHoverText)}))}this.setState({numPredictionsToShow:e?Math.floor(c/2):o,pointsToPlot:p})},n.defaultProps={agreementColor:"#ff0000",allColor:"#000000",data:{couplingScores:new c.CouplingContainer,secondaryStructures:new Array},filters:[],height:"100%",highlightColor:"#ff8800",isDataLoading:!1,observedColor:"#0000ff",width:"100%"},n}(o.Component);t.PredictedContactMap=h;try{h.displayName="PredictedContactMap",h.__docgenInfo={description:"",displayName:"PredictedContactMap",props:{agreementColor:{defaultValue:{value:"#ff0000"},description:"",name:"agreementColor",required:!1,type:{name:"string"}},allColor:{defaultValue:{value:"#000000"},description:"",name:"allColor",required:!1,type:{name:"string"}},data:{defaultValue:{value:"{\n      couplingScores: new CouplingContainer(),\n      secondaryStructures: new Array<SECONDARY_STRUCTURE>(),\n    }"},description:"",name:"data",required:!1,type:{name:"any"}},filters:{defaultValue:null,description:"",name:"filters",required:!0,type:{name:"any[]"}},height:{defaultValue:{value:"100%"},description:"",name:"height",required:!1,type:{name:"string | number"}},highlightColor:{defaultValue:{value:"#ff8800"},description:"",name:"highlightColor",required:!1,type:{name:"string"}},isDataLoading:{defaultValue:{value:"false"},description:"",name:"isDataLoading",required:!1,type:{name:"boolean"}},observedColor:{defaultValue:{value:"#0000ff"},description:"",name:"observedColor",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}},width:{defaultValue:{value:"100%"},description:"",name:"width",required:!1,type:{name:"string | number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/PredictedContactMap.tsx#PredictedContactMap"]={docgenInfo:h.__docgenInfo,name:"PredictedContactMap",path:"src/container/PredictedContactMap.tsx#PredictedContactMap"})}catch(e){}},"./src/container/ProteinFeatureViewer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/react/index.js"),l=n("./node_modules/semantic-ui-react/dist/es/index.js"),u=n("./src/component/index.ts"),c=n("./src/data/index.ts"),d=n("./src/helper/index.ts");t.SAMPLE_PROTEIN_IDS={"3Domains":"Q8TDF5","5Domains":"Q96L73",DLL3_HUMAN:"Q9NYJ7",SMAD4_HUMAN:"Q13485"};var p=function(e){function n(t){var n=e.call(this,t)||this;return n.getPFamFamilyLink=function(e){return'<a href="http://pfam.xfam.org/family/'+e.id+'">PFAM</a>'},n.getPFamDomainLink=function(e){return'<a href="http://mutationaligner.org/domains/'+e.id+'">Mutagen Aligner</a>'},n.getPFamLinks=function(e){return n.getPFamFamilyLink(e[0])+" "+n.getPFamDomainLink(e[0])},n.initializeProteinData=function(e){var t=e.features.filter((function(e){return"DOMAIN"===e.type})),r=new d.ColorMapper,a=t.map((function(e,t){var n=e.begin,a=e.description,i=void 0===a?"":a,s=e.end,o=i.split("-like")[0];return new c.TintedBioblocks1DSection(o,n?Number.parseInt(n,10):-1,s?Number.parseInt(s,10):-1,r.getColorFor(o))}));n.setState({domainData:a,protein:e})},n.onProteinInputChange=function(e,t){n.setState({proteinId:t.value})},n.onProteinInputSubmit=function(e,t){return i(n,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.deriveProteinData()];case 1:return e.sent(),[2]}}))}))},n.onShowGroupedChange=function(e,t){n.setState({showGrouped:void 0!==t.checked?t.checked:n.state.showGrouped})},n.renderAnnotationText=function(e,t){var r=n.state,a=r.domainData,i=r.protein,s=i?i.dbReferences.filter((function(e){return"Pfam"===e.type})).filter((function(n){var r=n.properties,a=r?r["entry name"]:null;return a&&(a===e||a.localeCompare(e+"-like "+t))})):[];return s.length>=1?e+": "+e+" domain ("+a[t].start+" - "+a[t].end+")<br />"+n.getPFamLinks(s):""},n.renderProteinForm=function(e){return o.createElement(l.Form,{onSubmit:n.onProteinInputSubmit},o.createElement(l.Form.Input,{onChange:n.onProteinInputChange,value:e,fluid:!1,width:"three"}),o.createElement(l.Form.Button,null,"Submit Protein ID"),o.createElement(l.Form.Checkbox,{defaultChecked:!0,label:"Show grouped?",onChange:n.onShowGroupedChange}))},n.state={data:[],domainData:[],proteinId:t.initialProteinId,showGrouped:!0},n}return a(n,e),n.prototype.componentDidMount=function(){return i(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.deriveProteinData()];case 1:return e.sent(),[2]}}))}))},n.prototype.render=function(){var e=this.state,t=e.domainData,n=e.protein,r=e.proteinId,a=e.showGrouped;return o.createElement("div",{className:"protein-feature-viewer"},o.createElement(l.GridRow,{centered:!0,stretched:!1},o.createElement(l.GridColumn,null,o.createElement(u.FeatureViewer,{data:t,getTextForHover:this.renderAnnotationText,title:n?n.id:"",showGrouped:a})),o.createElement(l.GridColumn,null,this.renderProteinForm(r))))},n.prototype.deriveProteinData=function(){return i(this,void 0,void 0,(function(){var e,t,n;return s(this,(function(r){switch(r.label){case 0:return r.trys.push([0,4,,5]),[4,fetch("https://www.ebi.ac.uk/proteins/api/proteins/"+this.state.proteinId)];case 1:return(e=r.sent())&&e.ok?[4,e.json()]:[3,3];case 2:t=r.sent(),this.initializeProteinData(t),r.label=3;case 3:return[3,5];case 4:return n=r.sent(),console.error(n),[3,5];case 5:return[2]}}))}))},n.defaultProps={initialProteinId:t.SAMPLE_PROTEIN_IDS.DLL3_HUMAN},n}(o.Component);t.ProteinFeatureViewer=p;try{p.displayName="ProteinFeatureViewer",p.__docgenInfo={description:"",displayName:"ProteinFeatureViewer",props:{initialProteinId:{defaultValue:{value:"SAMPLE_PROTEIN_IDS.DLL3_HUMAN"},description:"",name:"initialProteinId",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/ProteinFeatureViewer.tsx#ProteinFeatureViewer"]={docgenInfo:p.__docgenInfo,name:"ProteinFeatureViewer",path:"src/container/ProteinFeatureViewer.tsx#ProteinFeatureViewer"})}catch(e){}},"./src/container/SpringContainer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/immutable/dist/immutable.js"),l=n("./node_modules/react/index.js"),u=n("./node_modules/react-redux/es/index.js"),c=n("./node_modules/redux/es/redux.js"),d=n("./node_modules/react-iframe-comm/dist/IframeComm.js"),p=n("./src/action/index.ts"),h=n("./src/component/index.ts"),m=n("./src/container/index.ts"),g=n("./src/helper/index.ts"),f=n("./src/reducer/index.ts"),b=n("./src/selector/index.ts"),y=function(e){function t(t){var n=e.call(this,t)||this;return n.onReady=function(){},n.onReceiveMessage=function(e){var t=n.props,r=t.currentCells,a=t.setCurrentCategory,i=t.setCurrentCells,s=e.data;switch(s.type){case"selected-category-update":case"selected-cells-update":var o=s.payload,l=o.currentCategory,u=o.indices;a(l||""),i(u);break;case"loaded":n.setState({postMessageData:{payload:{indices:r.toArray()},type:"init"}});break;default:if(e.isTrusted&&1===Object.keys(e).length)return;console.log("Got this msg for ya: "+JSON.stringify(e))}},n.generateSpringURL=function(e){return n.props.springSrc+"?datasets/"+e},n.state={postMessageData:{payload:{},type:"init"},springUrl:n.generateSpringURL(n.props.datasetLocation)},n}return a(t,e),t.prototype.setupDataServices=function(){f.createSpringReducer()},t.prototype.componentDidMount=function(){var e=this,t=this.props,n=t.datasetLocation,r=t.datasetsURI;(0,t.dispatchSpringFetch)((function(){return i(e,void 0,void 0,(function(){return s(this,(function(e){return[2,g.fetchSpringData(r+"/"+n)]}))}))}))},t.prototype.componentDidUpdate=function(e,t){var n=this.props,r=n.currentCells,a=n.datasetLocation;if(r!==e.currentCells)this.setState({postMessageData:{payload:{indices:r.toArray()},type:"selected-cells-update"}});else if(e.datasetLocation!==a){var i=this.generateSpringURL(a);this.setState({springUrl:i})}},t.prototype.render=function(){var e=this.props,n=e.headerHeight,r=e.iconSrc,a=e.isFullPage,i=e.springHeight,s=e.springWidth,o=this.state,c=o.postMessageData,p=o.springUrl,m={allowFullScreen:!0,height:i+n,src:p,width:s},g=p.split("/");return l.createElement(u.Provider,{store:f.BBStore},l.createElement(h.ComponentCard,{componentName:t.displayName,iconSrc:r,isFramedComponent:!0,isFullPage:a,frameHeight:i,frameWidth:s},l.createElement(d.default,{attributes:m,postMessageData:c,handleReady:this.onReady,handleReceiveMessage:this.onReceiveMessage,targetOrigin:g[0]+"//"+g[2]})))},t.defaultProps={categories:o.Set(),currentCells:o.Set(),datasetLocation:"hpc/full",datasetsURI:"",dispatchSpringFetch:g.EMPTY_FUNCTION,headerHeight:18,isFullPage:!1,padding:0,selectedCategory:"",setCurrentCategory:g.EMPTY_FUNCTION,setCurrentCells:g.EMPTY_FUNCTION,springGraphData:{links:new Array,nodes:new Array},springHeight:1150,springSrc:window.location.origin+"/"+window.location.pathname.substr(0,window.location.pathname.lastIndexOf("/"))+"/springViewer.html",springWidth:1150},t.displayName="SPRING",t}(m.BioblocksVisualization);t.SpringContainerClass=y;t.SpringContainer=u.connect((function(e){return{categories:b.getCategories(e,void 0),currentCells:b.selectCurrentItems(e,"cells"),springGraphData:b.getGraphData(e)}}),(function(e){return c.bindActionCreators({dispatchSpringFetch:p.fetchSpringGraphData,setCurrentCategory:p.createSpringActions().category.set,setCurrentCells:p.createContainerActions("cells").set},e)}))(y);try{t.SpringContainer.displayName="SpringContainer",t.SpringContainer.__docgenInfo={description:"",displayName:"SpringContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/SpringContainer.tsx#SpringContainer"]={docgenInfo:t.SpringContainer.__docgenInfo,name:"SpringContainer",path:"src/container/SpringContainer.tsx#SpringContainer"})}catch(e){}},"./src/container/TensorTContainer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/@tensorflow/tfjs-core/dist/tf-core.esm.js"),l=n("./node_modules/@tensorflow/tfjs-tsne/dist/tsne.js"),u=n("./node_modules/immutable/dist/immutable.js"),c=n("./node_modules/react/index.js"),d=n("./node_modules/react-redux/es/index.js"),p=n("./node_modules/redux/es/redux.js"),h=n("./node_modules/semantic-ui-react/dist/es/index.js"),m=n("./src/action/index.ts"),g=n("./src/component/index.ts"),f=n("./src/container/index.ts"),b=n("./src/data/index.ts"),y=n("./src/helper/index.ts"),S=n("./src/reducer/index.ts"),v=n("./src/selector/ContainerSelectors.ts"),x=function(e){function t(t){var n=e.call(this,t)||this;return n.canvasContext=null,n.getPlotlyCoordsFromTsne=function(e){var t=n.props,r=t.currentCells;return[{marker:{color:t.pointColor},mode:"markers",type:"scattergl",x:e.map((function(e){return e[0]})),y:e.map((function(e){return e[1]}))},{marker:{color:"#ffaa00"},mode:"markers",type:"scattergl",x:r.toArray().map((function(t){return e[t][0]})),y:r.toArray().map((function(t){return e[t][1]}))}]},n.getPlotlyCoordsFromSpring=function(e,t){return[{marker:{color:n.props.pointColor},mode:"markers",type:"scattergl",x:e.map((function(e){return e[0]})),y:e.map((function(e){return e[1]}))},{marker:{color:"#ffaa00"},mode:"markers",type:"scattergl",x:t.map((function(t){return e[t][0]})),y:t.map((function(t){return e[t][1]}))}]},n.getTensorConfigs=function(){return[{name:"Iterate Once",onClick:n.onIterateForward(),type:b.CONFIGURATION_COMPONENT_TYPE.BUTTON},{name:"Iterate Ten Times",onClick:n.onIterateForward(10),type:b.CONFIGURATION_COMPONENT_TYPE.BUTTON},{name:"Iterate Fifty Times",onClick:n.onIterateForward(50),type:b.CONFIGURATION_COMPONENT_TYPE.BUTTON},{name:"Reset",onClick:n.onReset(),type:b.CONFIGURATION_COMPONENT_TYPE.BUTTON},{icon:"hashtag",name:"Total Iterations: "+n.state.numIterations,type:b.CONFIGURATION_COMPONENT_TYPE.LABEL}]},n.handlePointSelection=function(e){for(var t=n.props.setCurrentCells,r=n.state.coordsArray,a=new Array,i=function(t){var n=e.selectedPoints[t],i=e.selectedPoints[t+1],s=r.findIndex((function(e){return e[0]===n&&e[1]===i}));s>=0&&a.push(s)},s=0;s<e.selectedPoints.length-1;s+=2)i(s);t(a)},n.renderIterateLabel=function(){return c.createElement("label",null,"iterations: "+n.state.numIterations)},n.renderIterateButton=function(){return c.createElement(h.Radio,{label:c.createElement("label",{style:{fontSize:"14px",fontWeight:"bold"}},"iterate"),onClick:n.onIterationToggle(),toggle:!0})},n.renderResetButton=function(){return c.createElement(h.Icon,{name:"undo",onClick:n.onReset()})},n.onIterateForward=function(e){return void 0===e&&(e=1),function(){return i(n,void 0,void 0,(function(){var t,n,r,a,i;return s(this,(function(s){switch(s.label){case 0:return t=this.state,n=t.isComputing,!(r=t.tsne)||n?[3,3]:(this.setState({isComputing:!0}),[4,r.iterate(e)]);case 1:return s.sent(),[4,r.coordsArray()];case 2:a=s.sent(),i=this.getPlotlyCoordsFromTsne(a),this.setState({coordsArray:a,isComputing:!1,numIterations:this.state.numIterations+e,plotlyCoords:i}),s.label=3;case 3:return[2]}}))}))}},n.onIterationToggle=function(){return function(){var e=!n.state.isAnimating;if(e){var t=function(){return i(n,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.onIterateForward(1)()];case 1:return e.sent(),this.state.isAnimating&&this.state.numIterations<500?requestAnimationFrame(t):this.setState({isAnimating:!1}),[2]}}))}))};requestAnimationFrame(t)}n.setState({isAnimating:e})}},n.onReset=function(){return function(){return i(n,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.computeTensorTsne(0)];case 1:return e.sent(),[2]}}))}))}},n.renderPlaybackControls=function(){return c.createElement(h.Grid.Row,{columns:"equal",style:{maxHeight:"42px",padding:"14px 0 0 0"}},c.createElement(h.Grid.Column,{floated:"left"},n.renderIterateButton()),c.createElement(h.Grid.Column,null,n.renderIterateLabel()),c.createElement(h.Grid.Column,{floated:"right"},n.renderResetButton()))},n.state={coordsArray:[],isAnimating:!1,isComputing:!1,numIterations:0,plotlyCoords:[]},n}return a(t,e),t.prototype.setupDataServices=function(){this.registerDataset("cells",[])},t.prototype.componentDidMount=function(){return i(this,void 0,void 0,(function(){var e,t,r,a;return s(this,(function(i){switch(i.label){case 0:return i.trys.push([0,4,,5]),[4,y.fetchTensorTSneCoordinateData(this.props.datasetLocation)];case 1:return e=i.sent(),t=o.tensor(e),[4,Promise.resolve().then((function(){return n("./node_modules/@tensorflow/tfjs-tsne/dist-es6/index.js")}))];case 2:return r=i.sent().tsne(t),this.setState({tsne:r}),[4,this.computeTensorTsne(this.state.numIterations)];case 3:return i.sent(),[3,5];case 4:return a=i.sent(),console.log(a),[3,5];case 5:return[2]}}))}))},t.prototype.componentDidUpdate=function(e){return i(this,void 0,void 0,(function(){var t,n,r,a,i,o,l;return s(this,(function(s){switch(s.label){case 0:return t=this.props,n=t.currentCells,r=t.datasetLocation,a=this.state.tsne,r===e.datasetLocation?[3,2]:[4,this.setupTensorData()];case 1:return s.sent(),[3,4];case 2:return a?n===e.currentCells?[3,4]:(i=this.setState,o={},l=this.getPlotlyCoordsFromTsne,[4,a.coordsArray()]):[3,4];case 3:i.apply(this,[(o.plotlyCoords=l.apply(this,[s.sent()]),o)]),s.label=4;case 4:return[2]}}))}))},t.prototype.render=function(){var e=this.props,n=e.iconSrc,r=e.isFullPage,a=this.state.plotlyCoords;return c.createElement(d.Provider,{store:S.BBStore},c.createElement(g.ComponentCard,{componentName:t.displayName,iconSrc:n,isFullPage:r},c.createElement(h.Grid,{centered:!0,style:{height:"100%",marginLeft:0,width:"100%"}},this.renderPlaybackControls(),c.createElement(h.Grid.Row,{style:{height:"100%",margin:0}},c.createElement(g.TensorTComponent,{onSelectedCallback:this.handlePointSelection,pointsToPlot:a})))))},t.prototype.computeTensorTsne=function(e){return i(this,void 0,void 0,(function(){var t,n,r,a,i;return s(this,(function(s){switch(s.label){case 0:return t=this.state,n=t.isComputing,!(r=t.tsne)||n?[3,3]:(this.setState({isComputing:!0}),[4,r.compute(e)]);case 1:return s.sent(),[4,r.coordsArray()];case 2:a=s.sent(),i=this.getPlotlyCoordsFromTsne(a),this.setState({coordsArray:a,isComputing:!1,numIterations:e,plotlyCoords:i}),s.label=3;case 3:return[2]}}))}))},t.prototype.setupTensorData=function(){return i(this,void 0,void 0,(function(){var e,t,n,r,a,i,u;return s(this,(function(s){switch(s.label){case 0:return s.trys.push([0,4,,5]),this.setState({isAnimating:!1,isComputing:!0,plotlyCoords:[],tsne:void 0}),[4,y.fetchTensorTSneCoordinateData(this.props.datasetLocation)];case 1:return e=s.sent(),t=o.tensor(e),n=new l.TSNE(t),r=0,[4,n.compute(r)];case 2:return s.sent(),[4,n.coordsArray()];case 3:return a=s.sent(),i=this.getPlotlyCoordsFromTsne(a),this.setState({coordsArray:a,isComputing:!1,numIterations:r,plotlyCoords:i}),[3,5];case 4:return u=s.sent(),console.log(u),[3,5];case 5:return[2]}}))}))},t.defaultProps={currentCells:u.Set(),datasetLocation:"hpc/full",height:400,isFullPage:!1,pointColor:"#aa0000",setCurrentCells:y.EMPTY_FUNCTION,style:{padding:0},width:400},t.displayName="tSNE - TensorFlow",t}(f.BioblocksVisualization);t.TensorTContainerClass=x;t.TensorTContainer=d.connect((function(e){return{currentCells:v.selectCurrentItems(e,"cells")}}),(function(e){return p.bindActionCreators({setCurrentCells:m.createContainerActions("cells").set},e)}))(x);try{t.TensorTContainer.displayName="TensorTContainer",t.TensorTContainer.__docgenInfo={description:"",displayName:"TensorTContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/TensorTContainer.tsx#TensorTContainer"]={docgenInfo:t.TensorTContainer.__docgenInfo,name:"TensorTContainer",path:"src/container/TensorTContainer.tsx#TensorTContainer"})}catch(e){}},"./src/container/UMAPSequenceContainer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},l=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};Object.defineProperty(t,"__esModule",{value:!0});var u=n("./node_modules/papaparse/papaparse.min.js"),c=n("./node_modules/react/index.js"),d=n("./node_modules/semantic-ui-react/dist/es/index.js"),p=n("./src/component/index.ts"),h=n("./src/data/index.ts"),m=n("./src/helper/index.ts"),g=function(e){function t(t){var n=e.call(this,t)||this;return n.getDataLabels=function(){var e=n.state,t=e.labelCategory,r=e.seqNameToTaxonomyMetadata,a=e.subsampledSequences,i=new Array;if(r){var s=a.map((function(e){if(e.annotations.name&&r[e.annotations.name])return r[e.annotations.name][t]}));i=h.Marker.colors.autoColorFromStates(s)}return i},n.onLabelChange=function(e,t){n.setState({labelCategory:t.value})},n.onTaxonomyUpload=function(e){return s(n,void 0,void 0,(function(){var t,n,r;return o(this,(function(a){switch(a.label){case 0:return e.persist(),(t=e.target.files)?(n=t.item(0),r=this.parseTaxonomy,[4,m.readFileAsText(n)]):[2];case 1:return r.apply(this,[a.sent()]),[2]}}))}))},n.renderTaxonomyUpload=function(){return c.createElement(d.Popup,{trigger:n.renderTaxonomyTrigger(),content:c.createElement(c.Fragment,null,c.createElement("span",null,"A tab delimited file with 2 columns and optional headers:"),c.createElement("br",null),c.createElement("span",null,"- First column is sequence name."),c.createElement("br",null),c.createElement("span",null,"- Second column is how to group sequences."))})},n.renderTaxonomyTrigger=function(){return c.createElement(d.Label,{as:"label",basic:!0,htmlFor:"upload-taxonomy"},c.createElement(d.Button,{icon:"upload",label:{basic:!0,content:"Upload Taxonomy File"},labelPosition:"right"}),c.createElement("input",{hidden:!0,id:"upload-taxonomy",multiple:!1,onChange:n.onTaxonomyUpload,required:!0,type:"file"}))},n.setupSequenceAnnotation=function(e,t){n.setState({seqNameToTaxonomyMetadata:e.reduce((function(e,n){var r;return n.annotations.name&&n.annotations.metadata&&(e[n.annotations.name]=((r={})[t]=n.annotations.metadata[t],r)),e}),{})})},n.state={labelCategory:"",labels:new Array,randomSequencesDataMatrix:new Array(new Array),seqNameToTaxonomyMetadata:{},subsampledSequences:new Array,tooltipNames:new Array},n}return a(t,e),t.prototype.componentDidMount=function(){this.prepareData()},t.prototype.componentDidUpdate=function(e,t){var n=this.props,r=n.allSequences,a=n.labelCategory,i=n.numSequencesToShow,s=n.taxonomyText;if(e.allSequences!==r||e.numSequencesToShow!==i||e.labelCategory!==a||e.taxonomyText!==s){var o=e.allSequences.length===r.length;e.allSequences.forEach((function(e,t){r[t]&&0===e.sequence.localeCompare(r[t].sequence)||(o=!1)})),o?s?this.parseTaxonomy(s):this.setupSequenceAnnotation(r,a):this.prepareData()}},t.prototype.render=function(){var e=this,t=this.props,n=(t.allSequences,t.numIterationsBeforeReRender),r=t.showUploadButton,a=l(t,["allSequences","numIterationsBeforeReRender","showUploadButton"]),s=this.state,o=s.labelCategory,u=s.labels,h=s.randomSequencesDataMatrix,m=s.tooltipNames,g=this.getDataLabels();return c.createElement(d.Grid,{centered:!0,padded:!0},c.createElement(d.Grid.Row,null,c.createElement(p.UMAPVisualization,i({currentLabel:o,dataLabels:g,dataMatrix:h,distanceFn:function(t,n){return e.equalityHammingDistance(t,n)},errorMessages:[],labels:u,numIterationsBeforeReRender:n,onLabelChange:this.onLabelChange,tooltipNames:m},a))),r&&c.createElement(d.Grid.Row,null,this.renderTaxonomyUpload()))},t.prototype.prepareData=function(){var e=this.props,t=e.allSequences,n=e.labelCategory,r=e.numSequencesToShow,a=e.taxonomyText;a?this.parseTaxonomy(a):this.setupSequenceAnnotation(t,n);var i=this.state.subsampledSequences;i&&i.length===r||(i=m.subsample(this.props.allSequences,r)),this.setState({labelCategory:n,randomSequencesDataMatrix:i.map((function(e){return e.integerRepresentation(["-"])})),subsampledSequences:i,tooltipNames:i.map((function(e){return e.annotations.name?e.annotations.name:""}))})},t.prototype.parseTaxonomy=function(e){var t=this;if(e){var n=e.split("\n")[0].includes("seq_name");u.parse(e,{complete:function(e){t.setState({labels:n?e.meta.fields.filter((function(e){return"sequence"!==e.toLocaleLowerCase()})):[],seqNameToTaxonomyMetadata:e.data.reduce((function(e,r){var a;if(n)e[r.seq_name]=r;else{var i=r;e[i[0]]=((a={seq_name:i[0]})[t.props.labelCategory]=i[1],a)}return e}),{})})},header:n})}},t.prototype.equalityHammingDistance=function(e,t){for(var n=0,r=0;r<e.length;r++)e[r]!==t[r]&&(n+=1);return n},t.defaultProps={labelCategory:"class",numIterationsBeforeReRender:1,numSequencesToShow:4e3,showUploadButton:!1},t}(c.Component);t.UMAPSequenceContainer=g;try{g.displayName="UMAPSequenceContainer",g.__docgenInfo={description:"",displayName:"UMAPSequenceContainer",props:{numSequencesToShow:{defaultValue:{value:"4000"},description:"if the number of data points are too large, the container will randomly subsample points",name:"numSequencesToShow",required:!1,type:{name:"number"}},numIterationsBeforeReRender:{defaultValue:{value:"1"},description:"",name:"numIterationsBeforeReRender",required:!1,type:{name:"number"}},taxonomyText:{defaultValue:null,description:"Text from taxonomy file - only valid when umap is showing sequences:\n1. tab delimited with each row being a sequence\n2. first row is a header with column names\n3. must contain columns 'seq_name': values matched to fasta sequence names\n                         'phylum': the phylum of the organism the sequence originated from\n                         'class': the class of the organism the sequence originated from",name:"taxonomyText",required:!1,type:{name:"string"}},labelCategory:{defaultValue:{value:"class"},description:"",name:"labelCategory",required:!1,type:{name:"string"}},allSequences:{defaultValue:null,description:"",name:"allSequences",required:!0,type:{name:"any[]"}},showUploadButton:{defaultValue:{value:"false"},description:"",name:"showUploadButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/UMAPSequenceContainer.tsx#UMAPSequenceContainer"]={docgenInfo:g.__docgenInfo,name:"UMAPSequenceContainer",path:"src/container/UMAPSequenceContainer.tsx#UMAPSequenceContainer"})}catch(e){}},"./src/container/UMAPTranscriptionalContainer.tsx":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};Object.defineProperty(t,"__esModule",{value:!0});var o=n("./node_modules/react/index.js"),l=n("./src/component/index.ts"),u=n("./src/data/index.ts"),c=n("./src/helper/index.ts"),d=function(e){function t(t){var n=e.call(this,t)||this;return n.subsampledIndices=new Array,n.getAnnotations=function(){var e=n.props.categoricalAnnotations,t={};return e&&Object.keys(e).forEach((function(n){var r,a=e[n].label_list,i=e[n].label_colors;r=i&&0!==Object.keys(i).length?a.map((function(e){if(i[e])return{color:i[e],name:e}})):u.Marker.colors.autoColorFromStates(a),t[n]=r})),t},n.getErrorMessages=function(e){var t=n.props,r=t.categoricalAnnotations,a=t.dataMatrix,i=t.sampleNames,s=new Array;return i&&a.length!==i.length&&s.push("The "+i.length+" sample names provided do not account for all "+a.length+" data matrix rows."),!1===e&&r&&Object.keys(r).forEach((function(e){r[e].label_list.length!==a.length&&s.push("Label category "+e+" does not provide labels for all "+a.length+" samples in the data matrix.")})),s},n.state={completeSampleAnnotations:{},errorMessages:[]},n}return a(t,e),t.prototype.componentDidMount=function(){this.prepareData()},t.prototype.componentDidUpdate=function(e,t){e.dataMatrix===this.props.dataMatrix&&e.numSamplesToShow===this.props.numSamplesToShow&&e.sampleNames===this.props.sampleNames&&e.categoricalAnnotations===this.props.categoricalAnnotations&&e.labelCategory===this.props.labelCategory||this.prepareData(e.categoricalAnnotations===this.props.categoricalAnnotations)},t.prototype.render=function(){var e=this.props,t=e.dataMatrix,n=e.labelCategory,r=e.numIterationsBeforeReRender,a=(e.numSamplesToShow,s(e,["dataMatrix","labelCategory","numIterationsBeforeReRender","numSamplesToShow"])),u=this.state,c=u.completeSampleAnnotations,d=u.errorMessages,p=new Array,h=new Array,m=new Array(new Array);if(this.subsampledIndices.length>0&&(m=this.subsampledIndices.map((function(e){return t[e]})),n&&c&&c[n])){var g=c[n];p=this.subsampledIndices.map((function(e){return g[e]})),h=this.subsampledIndices.map((function(e){var t=g[e];return t?t.name:"unannotated"}))}return o.createElement(l.UMAPVisualization,i({dataLabels:p,dataMatrix:m,errorMessages:d,tooltipNames:h,numIterationsBeforeReRender:r},a))},t.prototype.prepareData=function(e){void 0===e&&(e=!1);var t=this.props.numSamplesToShow,n=this.getErrorMessages(e),r=this.state.completeSampleAnnotations;!1===e&&(r=this.getAnnotations()),this.subsampledIndices&&this.subsampledIndices.length===t||(this.subsampledIndices=c.subsample(this.props.dataMatrix,t,!0)),this.setState({completeSampleAnnotations:r,errorMessages:n})},t.defaultProps={numIterationsBeforeReRender:1,numSamplesToShow:4e3},t}(o.Component);t.UMAPTranscriptionalContainer=d;try{d.displayName="UMAPTranscriptionalContainer",d.__docgenInfo={description:"",displayName:"UMAPTranscriptionalContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/container/UMAPTranscriptionalContainer.tsx#UMAPTranscriptionalContainer"]={docgenInfo:d.__docgenInfo,name:"UMAPTranscriptionalContainer",path:"src/container/UMAPTranscriptionalContainer.tsx#UMAPTranscriptionalContainer"})}catch(e){}},"./src/container/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/container/BioblocksVisualization.tsx")),r(n("./src/container/AnatomogramContainer.tsx")),r(n("./src/container/InfoPanelContainer.tsx")),r(n("./src/container/NGLContainer.tsx")),r(n("./src/container/PredictedContactMap.tsx")),r(n("./src/container/ProteinFeatureViewer.tsx")),r(n("./src/container/SpringContainer.tsx")),r(n("./src/container/TensorTContainer.tsx")),r(n("./src/container/UMAPSequenceContainer.tsx")),r(n("./src/container/UMAPTranscriptionalContainer.tsx"))},"./src/data/AminoAcid.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/lodash/lodash.js"),a=function(){function e(e,t,n,r){this.fullName=e,this.singleLetterCode=t,this.threeLetterCode=n,this.codons=r}return e.getAllCanonicalAminoAcids=function(){return Object.keys(e).reduce((function(t,n){var r=e[n];return r instanceof e&&t.push(r),t}),new Array)},e.fromSingleLetterCode=function(t){return e.getAllCanonicalAminoAcids().find((function(e){return e.singleLetterCode.toUpperCase()===t.toUpperCase()}))},e.fromThreeLetterCode=function(t){e.getAllCanonicalAminoAcids().forEach((function(e){if(e.threeLetterCode.toUpperCase()===t.toUpperCase())return e}))},e.fromCodon=function(t){e.getAllCanonicalAminoAcids().forEach((function(e){e.codons.forEach((function(n){if(n.toUpperCase()===t.toUpperCase())return e}))}))},e.Alanine=new e("Alanine","A","ALA",["GCT","GCC","GCA","GCG"]),e.Arginine=new e("Arginine","R","ARG",["CGT","CGC","CGA","CGG","AGA","AGG"]),e.Asparagine=new e("Asparagine","N","ASN",["AAT","AAC"]),e.AsparticAcid=new e("Aspartic Acid","D","ASP",["GAT","GAC"]),e.Cysteine=new e("Cysteine","C","CYS",["TGT","TGC"]),e.Glutamine=new e("Glutamine","Q","GLN",["CAA","CAG"]),e.GlutamicAcid=new e("Glutamic Acid","E","GLU",["GAA","GAG"]),e.Glycine=new e("Glycine","G","GLY",["GGT","GGC","GGA","GGG"]),e.Histidine=new e("Histidine","H","HIS",["CAT","CAC"]),e.Isoleucine=new e("Isoleucine","I","ILE",["ATT","ATC","ATA"]),e.Leucine=new e("Leucine","L","LEU",["TTA","TTG","CTT","CTC","CTA","CTG"]),e.Lysine=new e("Lysine","K","LYS",["AAA","AAG"]),e.Methionine=new e("Methionine","M","MET",["ATG"]),e.Phenylalanine=new e("Phenylalanine","F","PHE",["TTT","TTC"]),e.Proline=new e("Proline","P","PRO",["CCT","CCC","CCA","CCG"]),e.Serine=new e("Serine","S","SER",["TCT","TCC","TCA","TCG","AGT","AGC"]),e.Threonine=new e("Threonine","T","THR",["ACT","ACC","ACA","ACG"]),e.Tryptophan=new e("Tryptophan","W","TRP",["TGG"]),e.Tyrosine=new e("Tyrosine","Y","TYR",["TAT","TAC"]),e.Valine=new e("Valine","V","VAL",["GTT","GTC","GTA","GTG"]),e.ALL_FULL_NAMES=function(){return e.getAllCanonicalAminoAcids().map((function(e){return e.fullName}))},e.ALL_1LETTER_CODES=function(){return e.getAllCanonicalAminoAcids().map((function(e){return e.singleLetterCode}))},e.ALL_3LETTER_CODES=function(){return e.getAllCanonicalAminoAcids().map((function(e){return e.threeLetterCode}))},e.ALL_CODONS=function(){return r.flatten(e.getAllCanonicalAminoAcids().map((function(e){return e.codons})))},e}();t.AminoAcid=a,t.getPDBAndCouplingMismatch=function(e,n){var r=e.sequence,a=n.sequence,i=t.getSequenceMismatch(r,a);return 0===i.length?e.getResidueNumberingMismatches(n):i},t.getSequenceMismatch=function(e,t){var n=new Array;if(e.length===t.length)for(var r=0;r<e.length;++r){var i=a.fromSingleLetterCode(e[r]),s=a.fromSingleLetterCode(t[r]);e[r]!==t[r]&&i&&s&&n.push({couplingAminoAcid:i,pdbAminoAcid:s,resno:r})}return n}},"./src/data/AnatomogramMapping.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AnatomogramMapping={homo_sapiens:{P11A:["UBERON_0000178"],P11B:["UBERON_0001155"],P12A:["UBERON_0000955"],P9A:["UBERON_0000977"],UBERON_0000178:["P11A"],UBERON_0000955:["P12A"],UBERON_0000977:["P9A"],UBERON_0001155:["P11B"]},mus_musculus:{UBERON_0000948:["Heart","Heart_and_Aorta","Heart_and_Aorta-10X_P7_4"],UBERON_0001255:["Bladder","Bladder-10X_P4_3","Bladder-10X_P4_4","Bladder-10X_P7_7"],UBERON_0001723:["Tongue","Tongue-10X_P4_0","Tongue-10X_P4_1","Tongue-10X_P7_10"],UBERON_0001911:["Mammary","Mammary_Gland","Mammary_Gland-10X_P7_12","Mammary_Gland-10X_P7_13"],UBERON_0002048:["Lung","Lung-10X_P7_8","Lung-10X_P7_9","Lung-10X_P8_12","Lung-10X_P8_13"],UBERON_0002106:["Spleen","Spleen-10X_P4_7","Spleen-10X_P7_6"],UBERON_0002107:["Liver","Liver-10X_P4_2","Liver-10X_P7_0","Liver-10X_P7_1"],UBERON_0002113:["Kidney","Kidney-10X_P4_5","Kidney-10X_P4_6","Kidney-10X_P7_5"],UBERON_0002370:["Thymus","Thymus-10X_P7_11"],UBERON_0002371:["Marrow","Marrow-10X_P7_2","Marrow-10X_P7_3"],UBERON_0003126:["Trachea","Trachea-10X_P8_14","Trachea-10X_P8_15"],UBERON_0014892:["Muscle","Limb","Limb_Muscle","Limb_Muscle-10X_P7_14","Limb_Muscle-10X_P7_15"]}}},"./src/data/Bioblocks1DSection.ts":function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t,n){void 0===n&&(n=t),this.label=e,this.sectionEnd=0,this.sectionStart=0,this.sectionEnd=Math.max(n,t),this.sectionStart=Math.min(t,n)}return Object.defineProperty(e.prototype,"end",{get:function(){return this.sectionEnd},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"length",{get:function(){return this.sectionEnd-this.sectionStart+1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"start",{get:function(){return this.sectionStart},enumerable:!0,configurable:!0}),e.prototype.contains=function(){for(var e,t,n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];try{for(var i=r(n),s=i.next();!s.done;s=i.next()){var o=s.value;if(o<this.sectionStart||o>this.sectionEnd||void 0===o)return!1}}catch(t){e={error:t}}finally{try{s&&!s.done&&(t=i.return)&&t.call(i)}finally{if(e)throw e.error}}return!0},e.prototype.isEqual=function(e){return e.end===this.end&&e.label===this.label&&e.start===this.start},e.prototype.updateStart=function(e){e>this.sectionEnd?(this.sectionStart=this.sectionEnd,this.sectionEnd=e):this.sectionStart=e},e.prototype.updateEnd=function(e){e<this.sectionStart?(this.sectionEnd=this.sectionStart,this.sectionStart=e):this.sectionEnd=e},e}();t.Bioblocks1DSection=a;try{a.displayName="Bioblocks1DSection",a.__docgenInfo={description:"Class to encapsulate a 1 Dimensional data segment.\nThis is defined as a numerical range with inclusive start, inclusive end, and label associated with it.\nAdditionally, a Section is defined such that [start <= end] - meaning values will be flipped to keep this constraint.\n@export",displayName:"Bioblocks1DSection",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/Bioblocks1DSection.ts#Bioblocks1DSection"]={docgenInfo:a.__docgenInfo,name:"Bioblocks1DSection",path:"src/data/Bioblocks1DSection.ts#Bioblocks1DSection"})}catch(e){}},"./src/data/BioblocksConfig.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.BUTTON="BUTTON",e.BUTTON_GROUP="BUTTON_GROUP",e.DROP_DOWN="DROP_DOWN",e.LABEL="LABEL",e.CHECKBOX="CHECKBOX",e.RADIO="RADIO",e.RANGE_SLIDER="RANGE_SLIDER",e.SLIDER="SLIDER"}(t.CONFIGURATION_COMPONENT_TYPE||(t.CONFIGURATION_COMPONENT_TYPE={}))},"./src/data/BioblocksData.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.CONTACT_MAP="Contact Map",e.INFO_PANEL="Info Panel",e.NGL="NGL",e.SPRING="Spring",e["TENSOR-T-SNE"]="TENSOR-T-SNE",e["T-SNE"]="T-SNE",e.UMAP_SEQUENCE="UMAP Sequence",e.UMAP_TRANSCRIPTION="UMAP Transcription"}(t.VIZ_TYPE||(t.VIZ_TYPE={})),function(e){e.cn="cn",e.dist="dist",e.dist_intra="dist_intra",e.dist_multimer="dist_multimer",e.fn="fn",e.probability="probability",e.precision="precision",e.score="score"}(t.COUPLING_SCORE_SOURCE||(t.COUPLING_SCORE_SOURCE={})),function(e){e.CLOSEST="CLOSEST ATOM",e.C_ALPHA="C-α"}(t.CONTACT_DISTANCE_PROXIMITY||(t.CONTACT_DISTANCE_PROXIMITY={})),function(e){e.G="310_HELIX",e.H="ALPHA_HELIX",e.I="PI_HELIX",e.T="HYDROGEN_BONDED_TURN",e.E="BETA_SHEET",e.B="BETA_BRIDGE",e.S="BEND",e.C="COIL"}(t.SECONDARY_STRUCTURE_CODES||(t.SECONDARY_STRUCTURE_CODES={})),function(e){e[e.AFTER_PLOT=0]="AFTER_PLOT",e[e.CLICK=1]="CLICK",e[e.DOUBLE_CLICK=2]="DOUBLE_CLICK",e[e.HOVER=3]="HOVER",e[e.LEGEND_CLICK=4]="LEGEND_CLICK",e[e.RELAYOUT=5]="RELAYOUT",e[e.SELECTION=6]="SELECTION",e[e.UNHOVER=7]="UNHOVER"}(t.BIOBLOCKS_CHART_EVENT_TYPE||(t.BIOBLOCKS_CHART_EVENT_TYPE={})),function(e){e[e.AXIS=0]="AXIS",e[e.LEGEND=1]="LEGEND",e[e.POINT=2]="POINT"}(t.BIOBLOCKS_CHART_PIECE||(t.BIOBLOCKS_CHART_PIECE={}))},"./src/data/BioblocksPDB.ts":function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=n("./node_modules/ngl/dist/ngl.esm.js"),s=n("./src/data/index.ts"),o=function(){function e(){this.fileName="",this.nglData=new i.Structure,this.getSecStructFromNGLResidue=function(e,t){for(var n=e.chainIndex;!t[n];)t.push(new Array);var r="C";e.isSheet()?r="E":e.isHelix()&&(r="H"),t[n].length>=1&&t[n][t[n].length-1].label===r?t[n][t[n].length-1].updateEnd(e.resno):t[n].push(new s.Bioblocks1DSection(r,e.resno))}}return Object.defineProperty(e.prototype,"contactInformation",{get:function(){var e=this;if(!this.contactInfo){var t=new s.CouplingContainer;this.nglData.eachResidue((function(n){if(n.isProtein()){var r=n.resno;e.nglData.eachResidue((function(n){var a=n.resno;n.isProtein()&&r!==a&&t.addCouplingScore({dist:e.getMinDistBetweenResidues(r,a).dist,i:r,j:a})}))}})),this.contactInfo=t}return this.contactInfo},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){var e=this.fileName.split("/"),t=e[e.length-1],n=t.lastIndexOf(".");return t.slice(0,-1===n?void 0:n)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nglStructure",{get:function(){return this.nglData},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rank",{get:function(){return"UNK"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"secondaryStructure",{get:function(){var e=new Array;return this.nglData.eachResidue((function(t){if(t.isProtein()){var n="C";if(t.isSheet())n="E";else if(t.isHelix())n="H";else if(t.isTurn())return;e.push({resno:t.resno,structId:n})}})),e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"secondaryStructureSections",{get:function(){var e=this,t=new Array;return this.nglData.eachResidue((function(n){n.isProtein()&&e.getSecStructFromNGLResidue(n,t)})),t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sequence",{get:function(){return this.nglData?this.nglData.getSequence().join(""):""},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"source",{get:function(){return"UKN"},enumerable:!0,configurable:!0}),e.createEmptyPDB=function(){return new e},e.createPDB=function(t){return void 0===t&&(t=""),r(this,void 0,void 0,(function(){var n,r;return a(this,(function(a){switch(a.label){case 0:return n=new e,r=n,[4,i.autoLoad(t)];case 1:return r.nglData=a.sent(),n.fileName="string"==typeof t?t:t.name,[2,n]}}))}))},e.createPDBFromNGLData=function(t){var n=new e;return n.nglData=t,n.fileName=t.path?t.path:t.name,n},e.prototype.eachResidue=function(e){this.nglData.eachResidue(e)},e.prototype.amendPDBWithCouplingScores=function(t,n){var r=this,a=new s.CouplingContainer(t),i=this.nglData.atomMap.dict[e.NGL_C_ALPHA_INDEX],o={};return this.nglData.eachResidue((function(e){r.nglData.eachResidue((function(t){if(e.isProtein()&&t.isProtein())if(n===s.CONTACT_DISTANCE_PROXIMITY.C_ALPHA){var l=r.getCAlphaAtomIndexFromResidue(e.index,i),u=r.getCAlphaAtomIndexFromResidue(t.index,i),c=r.nglData.getAtomProxy(l).distanceTo(r.nglData.getAtomProxy(u));0!==c&&a.addCouplingScore({dist:c,i:e.resno,j:t.resno})}else{var d=Math.min(e.resno,t.resno)+","+Math.max(e.resno,t.resno);o[d]||(o[d]=r.getMinDistBetweenResidueIndices(e.index,t.index).dist),0!==o[d]&&a.addCouplingScore({dist:o[d],i:e.resno,j:t.resno})}}))})),this.contactInfo=a,this.contactInfo},e.prototype.getCAlphaAtomIndexFromResidue=function(e,t){for(var n=this.nglData.residueStore,r=n.atomOffset[e],a=n.atomCount[e],i=r;n.residueTypeId[i]!==t&&i<r+a;)i++;return i},e.prototype.getMinDistBetweenResidues=function(e,t){return this.getMinDistBetweenResidueIndices(this.nglData.residueStore.resno.indexOf(e),this.nglData.residueStore.resno.indexOf(t))},e.prototype.getResidueNumberingMismatches=function(e){var t=new Array;return this.eachResidue((function(n){var r=n.resname.toUpperCase(),a=e.getAminoAcidOfContact(n.resno);if(a&&s.AminoAcid.fromSingleLetterCode(r)!==s.AminoAcid.fromSingleLetterCode(a.singleLetterCode)){var i=s.AminoAcid.fromSingleLetterCode(a.singleLetterCode),o=s.AminoAcid.fromSingleLetterCode(r);i&&o&&t.push({couplingAminoAcid:i,pdbAminoAcid:o,resno:n.resno})}})),t},e.prototype.getTrimmedName=function(e,t,n){void 0===e&&(e="_"),void 0===t&&(t=3),void 0===n&&(n="back");var r=this.name.split(e);return r.length>t?("back"===n?r.slice(0,r.length-t):r.slice(t)).join(e):this.name},e.prototype.getMinDistBetweenResidueIndices=function(e,t){for(var n=this.nglData.residueStore,r=n.atomCount[e],a=n.atomCount[t],i=n.atomOffset[e],s=n.atomOffset[t],o={atomIndexI:-1,atomIndexJ:-1,dist:Number.MAX_SAFE_INTEGER},l=0;l<r;++l)for(var u=0;u<a;++u){var c=i+l,d=s+u,p=this.nglData.getAtomProxy(c).distanceTo(this.nglData.getAtomProxy(d));p<o.dist&&(o={atomIndexI:c,atomIndexJ:d,dist:p})}return o},e.NGL_C_ALPHA_INDEX="CA|C",e}();t.BioblocksPDB=o;try{o.displayName="BioblocksPDB",o.__docgenInfo={description:"A BioblocksPDB instance provides an API to interact with a loaded PDB file while hiding the implementation details of how it is loaded.\n@export",displayName:"BioblocksPDB",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/BioblocksPDB.ts#BioblocksPDB"]={docgenInfo:o.__docgenInfo,name:"BioblocksPDB",path:"src/data/BioblocksPDB.ts#BioblocksPDB"})}catch(e){}},"./src/data/CodonTable.ts":function(e,t,n){"use strict";var r=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s};Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t,n,r,a,i){this.id=e,this.name=t,this.altName=n,this.table=r,this.startCodons=a,this.stopCodons=i}return e.rnaTableFromDNACodonTable=function(t,n,a,i){return new e(t,n,a,Object.entries(i.table).reduce((function(e,t){var n=r(t,2),a=n[0],i=n[1];return e[a.replace(/T/g,"U").replace(/t/g,"u")]=i,e}),{}),i.startCodons.map((function(e){return e.replace(/T/g,"U").replace(/t/g,"u")})),i.stopCodons.map((function(e){return e.replace(/T/g,"U").replace(/t/g,"u")})))},e}();t.CodonTable=a,t.standardDnaCodonTable=new a(1,"standard","SGC0",{AAA:"K",AAC:"N",AAG:"K",AAT:"N",ACA:"T",ACC:"T",ACG:"T",ACT:"T",AGA:"R",AGC:"S",AGG:"R",AGT:"S",ATA:"I",ATC:"I",ATG:"M",ATT:"I",CAA:"Q",CAC:"H",CAG:"Q",CAT:"H",CCA:"P",CCC:"P",CCG:"P",CCT:"P",CGA:"R",CGC:"R",CGG:"R",CGT:"R",CTA:"L",CTC:"L",CTG:"L",CTT:"L",GAA:"E",GAC:"D",GAG:"E",GAT:"D",GCA:"A",GCC:"A",GCG:"A",GCT:"A",GGA:"G",GGC:"G",GGG:"G",GGT:"G",GTA:"V",GTC:"V",GTG:"V",GTT:"V",TAC:"Y",TAT:"Y",TCA:"S",TCC:"S",TCG:"S",TCT:"S",TGC:"C",TGG:"W",TGT:"C",TTA:"L",TTC:"F",TTG:"L",TTT:"F"},["TAA","TAG","TGA"],["TTG","CTG","ATG"]),t.standardRnaCodonTable=a.rnaTableFromDNACodonTable(2,"standard","SGC0",t.standardDnaCodonTable);try{a.displayName="CodonTable",a.__docgenInfo={description:"Codon tables based on those from the NCBI.\nInspired from BioPython IUPACData.py:\n     https://github.com/biopython/biopython/blob/master/Bio/Data/CodonTable.py\n     which is under the BSD 3-Clause License with Copyright 2000 Andrew Dalke\n\nNote: only implemented a very small subset of BioPython functionality.",displayName:"CodonTable",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/CodonTable.ts#CodonTable"]={docgenInfo:a.__docgenInfo,name:"CodonTable",path:"src/data/CodonTable.ts#CodonTable"})}catch(e){}},"./src/data/CouplingContainer.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=n("./src/data/index.ts"),s=function(){function e(e,t){var n,r,s=this;void 0===e&&(e=[]),void 0===t&&(t=i.COUPLING_SCORE_SOURCE.cn),this.scoreSource=t,this.contacts=new Array,this.indexRange={max:1,min:1},this.totalStoredContacts=0,this.derivedFromCouplingScoresFlag=!0,this.rowCounter=0,this.colCounter=0,this.getCouplingScore=function(e,t){var n=s.contacts[Math.min(e,t)-1];return n?n[Math.max(e,t)-1]:void 0},this.includes=function(e,t){return s.contacts[Math.min(e,t)-1]&&void 0!==s.contacts[Math.min(e,t)-1][Math.max(e,t)-1]};try{for(var o=a(e),l=o.next();!l.done;l=o.next()){var u=l.value;this.addCouplingScore(u)}}catch(e){n={error:e}}finally{try{l&&!l.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}}return e.getScore=function(e,t){switch(t){case"cn":return e.cn;case"dist":return e.dist;case"dist_intra":return e.dist_intra;case"dist_multimer":return e.dist_multimer;case"fn":return e.fn;case"probability":return e.probability;case"precision":return e.precision;case"score":return e.score;default:console.log("Unknown score source "+t)}},Object.defineProperty(e.prototype,"isDerivedFromCouplingScores",{get:function(){return this.derivedFromCouplingScoresFlag},set:function(e){this.derivedFromCouplingScoresFlag=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"allContacts",{get:function(){return this.contacts},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"chainLength",{get:function(){return this.indexRange.max-this.indexRange.min+1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rankedContacts",{get:function(){var t=this;return Array.from(this).sort((function(n,r){var a=e.getScore(n,t.scoreSource),i=e.getScore(r,t.scoreSource);return a&&i?i-a:a&&!i?-1:!a&&i?1:0}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"residueIndexRange",{get:function(){return this.indexRange},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sequence",{get:function(){for(var e="",t=this.indexRange.min;t<=this.indexRange.max;++t){var n=this.getAminoAcidOfContact(t);n&&(e+=n.singleLetterCode)}return e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"totalContacts",{get:function(){return this.totalStoredContacts},enumerable:!0,configurable:!0}),e.prototype[Symbol.iterator]=function(){return this},e.prototype.addCouplingScore=function(e){var t=e.A_i,n=e.A_j,a=e.i,i=e.j,s=Math.min(a,i)-1,o=Math.max(a,i)-1,l=s+1===i;this.contacts[s]||(this.contacts[s]=new Array),this.contacts[s][o]||this.totalStoredContacts++,this.contacts[s][o]=r(r({},this.contacts[s][o]),e),l&&(this.contacts[s][o].i=i,this.contacts[s][o].j=a,t&&n&&(this.contacts[s][o].A_i=n,this.contacts[s][o].A_j=t)),this.indexRange={max:Math.max(this.indexRange.max,o+1),min:Math.min(this.indexRange.min,s+1)}},e.prototype.getAminoAcidOfContact=function(e){var t,n,r,s;if(!(e>this.chainLength+1))try{for(var o=a(this.allContacts),l=o.next();!l.done;l=o.next()){var u=l.value;if(u)try{for(var c=(r=void 0,a(u)),d=c.next();!d.done;d=c.next()){var p=d.value;if(p&&p.i===e&&p.A_i)return i.AminoAcid.fromSingleLetterCode(p.A_i);if(p&&p.j===e&&p.A_j)return i.AminoAcid.fromSingleLetterCode(p.A_j)}}catch(e){r={error:e}}finally{try{d&&!d.done&&(s=c.return)&&s.call(c)}finally{if(r)throw r.error}}}}catch(e){t={error:e}}finally{try{l&&!l.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}},e.prototype.getObservedContacts=function(e){var t,n;void 0===e&&(e=10);var r=new Array;try{for(var i=a(this),s=i.next();!s.done;s=i.next()){var o=s.value;o.dist&&o.dist<=e&&r.push(o)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}return r},e.prototype.getPredictedContacts=function(e,t,n){var r,i;void 0===t&&(t=5),void 0===n&&(n=[]);var s={correct:new Array,predicted:new Array};try{for(var o=a(this.rankedContacts.filter((function(e){return n.reduce((function(t,n){return t&&n.filterFn(e)}),!0)})).slice(0,e)),l=o.next();!l.done;l=o.next()){var u=l.value;u.dist&&u.dist<t&&s.correct.push(u),s.predicted.push(u)}}catch(e){r={error:e}}finally{try{l&&!l.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}return s},e.prototype.next=function(){for(var e=this.rowCounter;e<this.contacts.length;++e)if(this.contacts[e]){for(var t=this.colCounter;t<this.contacts[e].length;++t){var n=this.contacts[e][t];if(n)return this.rowCounter=e,this.colCounter=t+1,{done:!1,value:n}}this.colCounter=0}return this.rowCounter=0,this.colCounter=0,{done:!0,value:null}},e.prototype.updateContact=function(e,t,n){this.addCouplingScore(r({i:e,j:t},n))},e}();t.CouplingContainer=s;try{s.displayName="CouplingContainer",s.__docgenInfo={description:"A CouplingContainer provides access to the coupling information of residue pairs.\n\nBehind the scenes, it is backed by a sparse 2D array to avoid data duplication and provide O(1) access.\n@export",displayName:"CouplingContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/CouplingContainer.ts#CouplingContainer"]={docgenInfo:s.__docgenInfo,name:"CouplingContainer",path:"src/data/CouplingContainer.ts#CouplingContainer"})}catch(e){}},"./src/data/Dataset.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){void 0===t&&(t="bioblocks"),this.name=e,this.namespace=t}return Object.defineProperty(e.prototype,"fullName",{get:function(){return this.namespace+"/"+this.name},enumerable:!0,configurable:!0}),e}();t.Dataset=r},"./src/data/IUPACData.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},i=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(a(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0}),t.proteinLetters="ACDEFGHIKLMNPQRSTVWY",t.extendedProteinLetters="ACDEFGHIKLMNPQRSTVWYBXZJUO",t.proteinLetters1to3={A:"Ala",C:"Cys",D:"Asp",E:"Glu",F:"Phe",G:"Gly",H:"His",I:"Ile",K:"Lys",L:"Leu",M:"Met",N:"Asn",P:"Pro",Q:"Gln",R:"Arg",S:"Ser",T:"Thr",V:"Val",W:"Trp",Y:"Tyr"},t.proteinLetters1to3Extended=r(r({},t.proteinLetters1to3),{B:"Asx",J:"Xle",O:"Pyl",U:"Sec",X:"Xaa",Z:"Glx"}),t.proteinLetters3to1=Object.assign.apply(Object,i([{}],Object.entries(t.proteinLetters1to3).map((function(e){var t,n=a(e,2),r=n[0];return(t={})[n[1]]=r,t})))),t.proteinLetters3to1Extended=Object.assign.apply(Object,i([{}],Object.entries(t.proteinLetters1to3Extended).map((function(e){var t,n=a(e,2),r=n[0];return(t={})[n[1]]=r,t})))),t.ambiguousDnaLetters="GATCRYWSMKHBVDN",t.unambiguousDnaLetters="GATC",t.ambiguousRnaLetters="GAUCRYWSMKHBVDN",t.unambiguousRnaLetters="GAUC",t.extendedDnaLetters="GATCBDSW",t.ambiguousDnaValues={A:"A",B:"CGT",C:"C",D:"AGT",G:"G",H:"ACT",K:"GT",M:"AC",N:"GATC",R:"AG",S:"CG",T:"T",V:"ACG",W:"AT",X:"GATC",Y:"CT"},t.ambiguousRnaValues={A:"A",B:"CGU",C:"C",D:"AGU",G:"G",H:"ACU",K:"GU",M:"AC",N:"GAUC",R:"AG",S:"CG",U:"U",V:"ACG",W:"AU",X:"GAUC",Y:"CU"},t.ambiguousDnaComplement={A:"T",B:"V",C:"G",D:"H",G:"C",H:"D",K:"M",M:"K",N:"N",R:"Y",S:"S",T:"A",V:"B",W:"W",X:"X",Y:"R"},t.ambiguousRnaComplement={A:"U",B:"V",C:"G",D:"H",G:"C",H:"D",K:"M",M:"K",N:"N",R:"Y",S:"S",U:"A",V:"B",W:"W",X:"X",Y:"R"},t.unambiguousDnaWeights={A:331.2218,C:307.1971,G:347.2212,T:322.2085},t.monoisotopicUnambiguousDnaWeights={A:331.06817,C:307.056936,G:347.063084,T:322.056602},t.unambiguousRnaWeights={A:347.2212,C:323.1965,G:363.2206,U:324.1813},t.monoisotopicUnambiguousRnaWeights={A:347.063084,C:323.051851,G:363.057999,U:324.035867},t.proteinWeights={A:89.0932,C:121.1582,D:133.1027,E:147.1293,F:165.1891,G:75.0666,H:155.1546,I:131.1729,K:146.1876,L:131.1729,M:149.2113,N:132.1179,O:255.3134,P:115.1305,Q:146.1445,R:174.201,S:105.0926,T:119.1192,U:168.0532,V:117.1463,W:204.2252,Y:181.1885},t.monoisotopicProteinWeights={A:89.047678,C:121.019749,D:133.037508,E:147.053158,F:165.078979,G:75.032028,H:155.069477,I:131.094629,K:146.105528,L:131.094629,M:149.051049,N:132.053492,O:255.158292,P:115.063329,Q:146.069142,R:174.111676,S:105.042593,T:119.058243,U:168.964203,V:117.078979,W:204.089878,Y:181.073893},t.extendedProteinValues={A:"A",B:"ND",C:"C",D:"D",E:"E",F:"F",G:"G",H:"H",I:"I",J:"IL",K:"K",L:"L",M:"M",N:"N",O:"O",P:"P",Q:"Q",R:"R",S:"S",T:"T",U:"U",V:"V",W:"W",X:"ACDEFGHIKLMNPQRSTVWY",Y:"Y",Z:"QE"},t.atomWeights={H:1.00794,D:2.0141,He:4.002602,Li:6.941,Be:9.012182,B:10.811,C:12.0107,N:14.0067,O:15.9994,F:18.9984032,Ne:20.1797,Na:22.98977,Mg:24.305,Al:26.981538,Si:28.0855,P:30.973761,S:32.065,Cl:35.453,Ar:39.948,K:39.0983,Ca:40.078,Sc:44.95591,Ti:47.867,V:50.9415,Cr:51.9961,Mn:54.938049,Fe:55.845,Co:58.9332,Ni:58.6934,Cu:63.546,Zn:65.39,Ga:69.723,Ge:72.64,As:74.9216,Se:78.96,Br:79.904,Kr:83.8,Rb:85.4678,Sr:87.62,Y:88.90585,Zr:91.224,Nb:92.90638,Mo:95.94,Tc:98,Ru:101.07,Rh:102.9055,Pd:106.42,Ag:107.8682,Cd:112.411,In:114.818,Sn:118.71,Sb:121.76,Te:127.6,I:126.90447,Xe:131.293,Cs:132.90545,Ba:137.327,La:138.9055,Ce:140.116,Pr:140.90765,Nd:144.24,Pm:145,Sm:150.36,Eu:151.964,Gd:157.25,Tb:158.92534,Dy:162.5,Ho:164.93032,Er:167.259,Tm:168.93421,Yb:173.04,Lu:174.967,Hf:178.49,Ta:180.9479,W:183.84,Re:186.207,Os:190.23,Ir:192.217,Pt:195.078,Au:196.96655,Hg:200.59,Tl:204.3833,Pb:207.2,Bi:208.98038,Po:208.98,At:209.99,Rn:222.02,Fr:223.02,Ra:226.03,Ac:227.03,Th:232.0381,Pa:231.03588,U:238.02891,Np:237.05,Pu:244.06,Am:243.06,Cm:247.07,Bk:247.07,Cf:251.08,Es:252.08,Fm:257.1,Md:258.1,No:259.1,Lr:262.11,Rf:261.11,Db:262.11,Sg:266.12,Bh:264.12,Hs:269.13,Mt:268.14};try{t.proteinLetters.displayName="proteinLetters",t.proteinLetters.__docgenInfo={description:"Useful biological nomenclature.\nDerived from BioPython IUPACData.py:\n     https://github.com/biopython/biopython/blob/master/Bio/Data/IUPACData.py\n     which is under the BSD 3-Clause License with Copyright 2000 Andrew Dalke\n\nNote: Currently unimplemented are a few functions and variables:\n     function '_make_ranges()', which is needed to generate:\n         - variable 'unambiguous_dna_weight_ranges'\n         - variable 'unambiguous_rna_weight_ranges'\n         - variable 'protein_weight_ranges'\n     function '_make_ambiguous_ranges', which is needed to generate:\n         - variable 'ambiguous_dna_weight_ranges'\n         - variable 'ambiguous_rna_weight_ranges'\n         - variable 'extended_protein_weight_ranges'",displayName:"proteinLetters",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/IUPACData.ts#proteinLetters"]={docgenInfo:t.proteinLetters.__docgenInfo,name:"proteinLetters",path:"src/data/IUPACData.ts#proteinLetters"})}catch(e){}},"./src/data/Markers.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.colors={autoColorFromStates:function(t,n){void 0===n&&(n=e.colorSets.colorBrewer);var r=t.reduce((function(e,t){return t&&(e[t]||(e[t]=0),e[t]+=1),e}),{}),a=Object.entries(r).sort((function(e,t){return e[1]===t[1]?0:e[1]>t[1]?-1:1})).reduce((function(e,t,r){return e[t[0]]=void 0,r<n.length&&(e[t[0]]={color:n[r],name:t[0]}),e}),{});return t.map((function(e){if(e)return a[e]}))}},e.colorSets={categorical:["#069668","#75e7dd","#145a6a","#c5d5f0","#82269b","#5361c7","#e8a2de","#479abc","#11e38c","#0b5313","#bbcf7a","#6e390d","#f4d403","#ae301f","#34f50e","#7c8a4f","#f6bb86","#b5753e","#fe1d66","#9bea30"],colorBrewer:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"]},e}();t.Marker=r},"./src/data/Nucleotide.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){this.fullName=e,this.singleLetterCode=t,this.fullName=e,this.singleLetterCode=t}return e.fromSingleLetterCode=function(t){var n=e.allNucleotides.find((function(e){return e.singleLetterCode.toUpperCase()===t.toUpperCase()}));return n||e.Unknown},e.fromFullName=function(t){var n=e.allNucleotides.find((function(e){return e.fullName.toUpperCase()===t.toUpperCase()}));return n||e.Unknown},e.prototype.getComplementDNA=function(){return this===e.A?e.T:this===e.T?e.A:this===e.G?e.C:this===e.C?e.G:e.Unknown},e.prototype.getComplementRNA=function(){return this===e.T?e.U:this===e.U?e.T:this.getComplementDNA()},e.A=new e("Adenine","A"),e.C=new e("Cytosine","C"),e.G=new e("Guanine","G"),e.T=new e("Thymine","T"),e.U=new e("Uracil","U"),e.UKN=new e("Unknown","-"),e.Adenine=e.A,e.Cytosine=e.C,e.Guanine=e.G,e.Thymine=e.T,e.Uracil=e.U,e.Unknown=e.UKN,e.allNucleotides=[e.A,e.C,e.G,e.T,e.U,e.UKN],e}();t.Nucleotide=r},"./src/data/PfamProtein.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.DOMAIN="Domain",e.FAMILY="Family",e.MOTIF="Motif",e.REPEAT="Repeat"}(t.PFAM_A_TYPE||(t.PFAM_A_TYPE={})),function(e){e.P_FAM_A_SEARCH="pfamASearch",e.P_FAM_B_SEARCH="pfamBSearch"}(t.PFAM_SEARCH_TYPE||(t.PFAM_SEARCH_TYPE={})),function(e){e.FS="fs",e.LS="ls"}(t.PFAM_MODEL_TYPE||(t.PFAM_MODEL_TYPE={})),function(e){e.P_FAM_A="Pfam-A",e.P_FAM_B="Pfam-B"}(t.PFAM_ELEMENT_TYPE||(t.PFAM_ELEMENT_TYPE={}))},"./src/data/PlotlyData.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.bar="bar",e.pointcloud="pointcloud",e.scatter="scatter",e.scattergl="scattergl",e.scatter3d="scatter3d"}(t.PLOTLY_CHART_TYPE||(t.PLOTLY_CHART_TYPE={}))},"./src/data/Protein.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.DISEASE=0]="DISEASE",e[e.DOMAIN=1]="DOMAIN",e[e.FUNCTION=2]="FUNCTION",e[e.INTERACTION=3]="INTERACTION",e[e.MIM=4]="MIM",e[e.PTM=5]="PTM",e[e.SIMILARITY=6]="SIMILARITY",e[e.SUBCELLULAR_LOCATION=7]="SUBCELLULAR_LOCATION",e[e.SUBUNIT=8]="SUBUNIT",e[e.WEBRESOURCE=9]="WEBRESOURCE"}(t.PROTEIN_COMMENT_TYPE||(t.PROTEIN_COMMENT_TYPE={}))},"./src/data/Seq.ts":function(e,t,n){"use strict";var r=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},a=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var i,s=n("./src/data/index.ts");!function(e){e.generic_dna="generic_dna",e.generic_rna="generic_rna",e.generic_protein="generic_protein"}(i=t.ALPHABET||(t.ALPHABET={}));var o=function(){function e(e,t,n){if(void 0===n&&(n=["-"]),this.sequence=e,this.alphabet=t,this.ignoredCharacters=n||[],this.alphabet===i.generic_dna&&!1===this.isValidDNA(this.ignoredCharacters))throw Error('Cannot create DNA Seq from sequence "'+this.sequence+'"');if(this.alphabet===i.generic_rna&&!1===this.isValidRNA(this.ignoredCharacters))throw Error('Cannot create RNA Seq from sequence "'+this.sequence+'"');if(this.alphabet===i.generic_protein&&!1===this.isValidProtein(this.ignoredCharacters))throw Error('Cannot create Protein Seq from sequence "'+this.sequence+'"')}return e.checkSequenceValidity=function(e,t,n){var r=(""+n.join().toLowerCase()+n.join().toUpperCase()).replace(/(.)(?=.*\1)/g,"");return new RegExp("^["+t.toLowerCase()+t.toUpperCase()+r+"]+$").test(e)},e.prototype.isValidProtein=function(t){return void 0===t&&(t=this.ignoredCharacters),e.checkSequenceValidity(this.sequence,s.proteinLetters,t)},e.prototype.isValidDNA=function(t){return void 0===t&&(t=this.ignoredCharacters),e.checkSequenceValidity(this.sequence,s.unambiguousDnaLetters,t)},e.prototype.isValidRNA=function(t){return void 0===t&&(t=this.ignoredCharacters),e.checkSequenceValidity(this.sequence,s.unambiguousRnaLetters,t)},e.prototype.determineAlphabet=function(e){return void 0===e&&(e=["-"]),this.alphabet?this.alphabet:this.isValidDNA(e)?i.generic_dna:this.isValidRNA(e)?i.generic_rna:this.isValidProtein(e)?i.generic_protein:void 0},e.prototype.equal=function(e){return this.alphabet===e.alphabet&&this.sequence.length===e.sequence.length&&this.sequence.toUpperCase()===e.sequence.toUpperCase()},e.prototype.binaryRepresentation=function(e){void 0===e&&(e=["-"]);var t=this.determineAlphabet(e),n=s.proteinLetters;t===i.generic_dna?n=s.unambiguousDnaLetters:t===i.generic_rna&&(n=s.unambiguousRnaLetters);var r=(n=(n+=e.join()).toUpperCase()).length;return this.sequence.toUpperCase().split("").reduce((function(e,t){var i=new Array(r).fill(0);return n.includes(t)&&(i[n.indexOf(t)]=1),e.push.apply(e,a(i)),e}),new Array)},e.prototype.integerRepresentation=function(e){void 0===e&&(e=["-"]);var t=this.determineAlphabet(e),n=s.proteinLetters;return t===i.generic_dna?n=s.unambiguousDnaLetters:t===i.generic_rna&&(n=s.unambiguousRnaLetters),n=(n+=e.join()).toUpperCase(),this.sequence.toUpperCase().split("").map((function(e){return n.indexOf(e)}),new Array)},e.prototype.toString=function(){return this.sequence},e.prototype.upper=function(){return new e(this.sequence.toUpperCase(),this.alphabet)},e.prototype.lower=function(){return new e(this.sequence.toLowerCase(),this.alphabet)},e.prototype.subSequence=function(t,n){return void 0===t&&(t=0),new e(this.sequence.slice(t,n),this.alphabet)},e.prototype.complement=function(t){var n=this;if(void 0===t&&(t=!1),this.alphabet===i.generic_protein)throw Error("Proteins do not have complements!");if((this.sequence.includes("U")||this.sequence.includes("u"))&&(this.sequence.includes("T")||this.sequence.includes("t")))throw Error("Mixed RNA/DNA found");var r=s.ambiguousDnaComplement,a=i.generic_dna;return(this.sequence.includes("U")||this.sequence.includes("u"))&&(r=s.ambiguousRnaComplement,a=i.generic_rna),new e((t?this.sequence.split("").reverse().join():this.sequence).split("").map((function(e){if(n.ignoredCharacters.includes(e))return e;var t=e.toUpperCase();return t===e?r[t]:r[t].toLowerCase()})).join(""),a,this.ignoredCharacters)},e.prototype.reverse_complement=function(){return this.complement(!0)},e.prototype.transcribe=function(){if(this.alphabet===i.generic_protein)throw Error("Proteins sequences cannot be transcribed!");return new e(this.sequence.replace(/T/g,"U").replace(/t/g,"u"),i.generic_rna)},e.prototype.back_transcribe=function(){if(this.alphabet===i.generic_protein)throw Error("Proteins sequences cannot be back transcribed!");return new e(this.sequence.replace(/U/g,"T").replace(/u/g,"t"),i.generic_dna)},e.prototype.translate=function(t,n,r){if(void 0===t&&(t="*"),void 0===n&&(n=!1),void 0===r&&(r=!1),this.alphabet===i.generic_protein)throw Error("Proteins sequences cannot be translated!");var a=s.standardDnaCodonTable;(this.sequence.includes("U")||this.sequence.includes("u"))&&(a=s.standardRnaCodonTable);var o=this.sequence.match(/.{1,3}/g);if(r){if(this.sequence.length%3!=0)throw Error("Invalid coding sequence - sequence length must be a multiple of 3!");if(this.sequence.length<6||o[0]in a.startCodons==!1||o[o.length-1]in a.stopCodons==!1)throw Error("Invalid coding sequence - sequence must have a valid start and stop codon!")}if(!o)return new e("",i.generic_protein);var l="";return o.forEach((function(e){if(3===e.length){var r=e.toUpperCase();if(r in a.table)l+=a.table[r];else if(r in a.stopCodons&&(l+=t,n))return}})),new e(l,i.generic_protein)},e}();t.Seq=o;try{o.displayName="Seq",o.__docgenInfo={description:"Seq\nProvide objects to represent biological sequences with alphabets.",displayName:"Seq",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/Seq.ts#Seq"]={docgenInfo:o.__docgenInfo,name:"Seq",path:"src/data/Seq.ts#Seq"})}catch(e){}},"./src/data/SeqIO.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},i=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(a(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var s,o=n("./src/data/index.ts");!function(e){e.fasta="fasta"}(s=t.SEQUENCE_FILE_TYPES||(t.SEQUENCE_FILE_TYPES={}));var l=function(){function e(){}return e.parseFile=function(t,n,a){var i=r(r({},e.DEFAULT_SEQ_PROPERTIES),a),l=new Array;if(n!==s.fasta)throw Error('File type "'+n+'" not recognized');t.split(/\r|\n|\r\n/).reduce((function(e,t){var n=t.trim();if(n.length>0)if(">"===n[0])e.push({annotations:{name:n.substr(1)},sequence:""});else if(e.length>0){var r=n.replace(/\./g,"-");e[e.length-1].sequence+=r}return e}),l);return l.map((function(e){i.alphabet,i.ignoredCharacters;return new o.SeqRecord(new o.Seq(e.sequence,i.alphabet,i.ignoredCharacters),{id:e.annotations.id,name:e.annotations.name})}))},e.getRandomSetOfSequences=function(e,t){var n=i(e);if(t>e.length)return n;for(var r=new Array;r.length<t;){var a=Math.floor(Math.random()*n.length);r.push(n[a]),n.splice(a,1)}return r},e.DEFAULT_SEQ_PROPERTIES={alphabet:void 0,ignoredCharacters:[]},e}();t.SeqIO=l;try{l.displayName="SeqIO",l.__docgenInfo={description:"General sequence Input and Output functions\n@export",displayName:"SeqIO",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/SeqIO.ts#SeqIO"]={docgenInfo:l.__docgenInfo,name:"SeqIO",path:"src/data/SeqIO.ts#SeqIO"})}catch(e){}},"./src/data/SeqRecord.ts":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var s=n("./src/data/index.ts"),o=function(e){function t(n,r){void 0===r&&(r={});var a=e.call(this,n.sequence,n.alphabet,n.ignoredCharacters)||this;return a.annotations=r,a.annotations=i(i({},t.DEFAULT_ANNOTATIONS),r),Object.keys(s.Seq.prototype).forEach((function(n){var i=n,o=Reflect.getOwnPropertyDescriptor(s.Seq.prototype,n);"function"==typeof a[i]&&o&&o.writable&&Reflect.set(a,i,(function(){for(var n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];var l=e.prototype[i].call(a,n);return l instanceof s.Seq?new t(l,r):l}))})),a}return a(t,e),t.DEFAULT_ANNOTATIONS={dbxrefs:[],description:"<unknown description>",id:"<unknown id>",letterAnnotations:{},metadata:{},name:"<unknown name>"},t}(s.Seq);t.SeqRecord=o;try{o.displayName="SeqRecord",o.__docgenInfo={description:"SeqRecord\nThis is a super class that provides additional annotation on top\nof the standard Seq class.\n\nInspired from BioPython SeqRecord.py:\n     https://github.com/biopython/biopython/blob/master/Bio/SeqRecord.py\n     which is under the BSD 3-Clause License",displayName:"SeqRecord",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/SeqRecord.ts#SeqRecord"]={docgenInfo:o.__docgenInfo,name:"SeqRecord",path:"src/data/SeqRecord.ts#SeqRecord"})}catch(e){}},"./src/data/TintedBioblocks1DSection.ts":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,a){void 0===r&&(r=n),void 0===a&&(a="orange");var i=e.call(this,t,n,r)||this;return i.label=t,i.sectionColor="orange",i.sectionColor=a,i}return a(t,e),Object.defineProperty(t.prototype,"color",{get:function(){return this.sectionColor},enumerable:!0,configurable:!0}),t.prototype.updateColor=function(e){this.sectionColor=e},t}(n("./src/data/index.ts").Bioblocks1DSection);t.TintedBioblocks1DSection=i;try{i.displayName="TintedBioblocks1DSection",i.__docgenInfo={description:"Class to encapsulate a 1 Dimensional data segment that has an associated color with it.\n@export\n@extends Bioblocks1DSection",displayName:"TintedBioblocks1DSection",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/TintedBioblocks1DSection.ts#TintedBioblocks1DSection"]={docgenInfo:i.__docgenInfo,name:"TintedBioblocks1DSection",path:"src/data/TintedBioblocks1DSection.ts#TintedBioblocks1DSection"})}catch(e){}},"./src/data/event/BioblocksChartEvent.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./src/data/index.ts"),a=function(){function e(e,t,n,r){void 0===n&&(n=[]),void 0===r&&(r={}),this.type=e,this.chartPiece=t,this.selectedPoints=n,this.plotlyEvent=r}return e.prototype.isAxis=function(){return this.chartPiece===r.BIOBLOCKS_CHART_PIECE.AXIS},e}();t.BioblocksChartEvent=a},"./src/data/event/index.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n("./src/data/event/BioblocksChartEvent.ts"))},"./src/data/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/data/AminoAcid.ts")),r(n("./src/data/Nucleotide.ts")),r(n("./src/data/AnatomogramMapping.ts")),r(n("./src/data/Bioblocks1DSection.ts")),r(n("./src/data/BioblocksConfig.ts")),r(n("./src/data/BioblocksData.ts")),r(n("./src/data/BioblocksPDB.ts")),r(n("./src/data/CodonTable.ts")),r(n("./src/data/CouplingContainer.ts")),r(n("./src/data/Dataset.ts")),r(n("./src/data/IUPACData.ts")),r(n("./src/data/Markers.ts")),r(n("./src/data/PfamProtein.ts")),r(n("./src/data/PlotlyData.ts")),r(n("./src/data/Protein.ts")),r(n("./src/data/Seq.ts")),r(n("./src/data/SeqIO.ts")),r(n("./src/data/SeqRecord.ts")),r(n("./src/data/TintedBioblocks1DSection.ts")),r(n("./src/data/event/index.ts"));try{Bioblocks1DSection.displayName="Bioblocks1DSection",Bioblocks1DSection.__docgenInfo={description:"Class to encapsulate a 1 Dimensional data segment.\nThis is defined as a numerical range with inclusive start, inclusive end, and label associated with it.\nAdditionally, a Section is defined such that [start <= end] - meaning values will be flipped to keep this constraint.\n@export",displayName:"Bioblocks1DSection",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#Bioblocks1DSection"]={docgenInfo:Bioblocks1DSection.__docgenInfo,name:"Bioblocks1DSection",path:"src/data/index.ts#Bioblocks1DSection"})}catch(e){}try{BioblocksPDB.displayName="BioblocksPDB",BioblocksPDB.__docgenInfo={description:"A BioblocksPDB instance provides an API to interact with a loaded PDB file while hiding the implementation details of how it is loaded.\n@export",displayName:"BioblocksPDB",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#BioblocksPDB"]={docgenInfo:BioblocksPDB.__docgenInfo,name:"BioblocksPDB",path:"src/data/index.ts#BioblocksPDB"})}catch(e){}try{CodonTable.displayName="CodonTable",CodonTable.__docgenInfo={description:"Codon tables based on those from the NCBI.\nInspired from BioPython IUPACData.py:\n     https://github.com/biopython/biopython/blob/master/Bio/Data/CodonTable.py\n     which is under the BSD 3-Clause License with Copyright 2000 Andrew Dalke\n\nNote: only implemented a very small subset of BioPython functionality.",displayName:"CodonTable",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#CodonTable"]={docgenInfo:CodonTable.__docgenInfo,name:"CodonTable",path:"src/data/index.ts#CodonTable"})}catch(e){}try{CouplingContainer.displayName="CouplingContainer",CouplingContainer.__docgenInfo={description:"A CouplingContainer provides access to the coupling information of residue pairs.\n\nBehind the scenes, it is backed by a sparse 2D array to avoid data duplication and provide O(1) access.\n@export",displayName:"CouplingContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#CouplingContainer"]={docgenInfo:CouplingContainer.__docgenInfo,name:"CouplingContainer",path:"src/data/index.ts#CouplingContainer"})}catch(e){}try{proteinLetters.displayName="proteinLetters",proteinLetters.__docgenInfo={description:"Useful biological nomenclature.\nDerived from BioPython IUPACData.py:\n     https://github.com/biopython/biopython/blob/master/Bio/Data/IUPACData.py\n     which is under the BSD 3-Clause License with Copyright 2000 Andrew Dalke\n\nNote: Currently unimplemented are a few functions and variables:\n     function '_make_ranges()', which is needed to generate:\n         - variable 'unambiguous_dna_weight_ranges'\n         - variable 'unambiguous_rna_weight_ranges'\n         - variable 'protein_weight_ranges'\n     function '_make_ambiguous_ranges', which is needed to generate:\n         - variable 'ambiguous_dna_weight_ranges'\n         - variable 'ambiguous_rna_weight_ranges'\n         - variable 'extended_protein_weight_ranges'",displayName:"proteinLetters",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#proteinLetters"]={docgenInfo:proteinLetters.__docgenInfo,name:"proteinLetters",path:"src/data/index.ts#proteinLetters"})}catch(e){}try{Seq.displayName="Seq",Seq.__docgenInfo={description:"Seq\nProvide objects to represent biological sequences with alphabets.",displayName:"Seq",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#Seq"]={docgenInfo:Seq.__docgenInfo,name:"Seq",path:"src/data/index.ts#Seq"})}catch(e){}try{SeqIO.displayName="SeqIO",SeqIO.__docgenInfo={description:"General sequence Input and Output functions\n@export",displayName:"SeqIO",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#SeqIO"]={docgenInfo:SeqIO.__docgenInfo,name:"SeqIO",path:"src/data/index.ts#SeqIO"})}catch(e){}try{SeqRecord.displayName="SeqRecord",SeqRecord.__docgenInfo={description:"SeqRecord\nThis is a super class that provides additional annotation on top\nof the standard Seq class.\n\nInspired from BioPython SeqRecord.py:\n     https://github.com/biopython/biopython/blob/master/Bio/SeqRecord.py\n     which is under the BSD 3-Clause License",displayName:"SeqRecord",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#SeqRecord"]={docgenInfo:SeqRecord.__docgenInfo,name:"SeqRecord",path:"src/data/index.ts#SeqRecord"})}catch(e){}try{TintedBioblocks1DSection.displayName="TintedBioblocks1DSection",TintedBioblocks1DSection.__docgenInfo={description:"Class to encapsulate a 1 Dimensional data segment that has an associated color with it.\n@export\n@extends Bioblocks1DSection",displayName:"TintedBioblocks1DSection",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data/index.ts#TintedBioblocks1DSection"]={docgenInfo:TintedBioblocks1DSection.__docgenInfo,name:"TintedBioblocks1DSection",path:"src/data/index.ts#TintedBioblocks1DSection"})}catch(e){}},"./src/helper/ColorMapper.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(t,n,r){void 0===t&&(t=new Map),void 0===n&&(n="black"),void 0===r&&(r=e.DEFAULT_COLORS),this.colorMap=t,this.defaultColor=n,this.colors=r}return e.prototype.getColorFor=function(e){return this.colorMap.has(e)||this.addColorToMapper(e),this.colorMap.get(e)},e.prototype.addEntry=function(e,t,n){void 0===n&&(n=!0),this.colorMap.has(e)||this.addColorToMapper(e,t,n)},e.prototype.addColorToMapper=function(e,t,n){void 0===t&&(t=this.defaultColor),this.colorMap.set(e,t),t&&n&&!this.colors.includes(t)&&this.colors.push(t)},e.DEFAULT_COLORS=["red","green","blue","orange","purple","teal","pink","yellow","violet","olive","brown"],e}();t.ColorMapper=r;try{r.displayName="ColorMapper",r.__docgenInfo={description:"Class to allow a mapping between a type and a color.\n@export",displayName:"ColorMapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/ColorMapper.ts#ColorMapper"]={docgenInfo:r.__docgenInfo,name:"ColorMapper",path:"src/helper/ColorMapper.ts#ColorMapper"})}catch(e){}},"./src/helper/CouplingMapper.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.getCouplingHeaderIndices=function(e,t){if(t){var n={};return e.filter((function(e){return e.length>=1})).map((function(t){n[t.trim()]=e.indexOf(t)})),n}return function(e){return{A_i:e.length-2,A_j:e.length-1,cn:2,dist:3,i:0,j:1}}(e)}},"./src/helper/DataHelper.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},s=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},l=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var u=n("./node_modules/ngl/dist/ngl.esm.js"),c=n("./src/data/index.ts"),d=n("./src/helper/index.ts");t.fetchAppropriateData=function(e,n){return a(void 0,void 0,void 0,(function(){return i(this,(function(r){switch(e){case c.VIZ_TYPE["T-SNE"]:return[2,t.fetchTSneCoordinateData(n)];case c.VIZ_TYPE["TENSOR-T-SNE"]:return[2,t.fetchTensorTSneCoordinateData(n)];case c.VIZ_TYPE.SPRING:return[2,t.fetchSpringData(n)];case c.VIZ_TYPE.NGL:return[2,t.fetchNGLDataFromDirectory(n)];case c.VIZ_TYPE.CONTACT_MAP:case c.VIZ_TYPE.INFO_PANEL:return[2,t.fetchContactMapData(n)];default:return[2,Promise.reject({error:"Currently no appropriate data getter for "+e})]}return[2]}))}))},t.fetchAppropriateDataFromFile=function(e,n){return a(void 0,void 0,void 0,(function(){var r,a;return i(this,(function(i){switch(i.label){case 0:switch(e){case c.VIZ_TYPE.NGL:return[3,1];case c.VIZ_TYPE.CONTACT_MAP:return[3,2]}return[3,4];case 1:return[2,t.fetchNGLDataFromFile(n)];case 2:return r={},a=t.getCouplingScoresData,[4,d.readFileAsText(n)];case 3:return[2,(r.couplingScores=a.apply(void 0,[i.sent()]),r)];case 4:return[2,Promise.reject({error:"Currently no appropriate data getter for "+e+" files"})]}}))}))},t.fetchSpringData=function(e){return a(void 0,void 0,void 0,(function(){var t,n,a;return i(this,(function(i){switch(i.label){case 0:return[4,p(e+"/categorical_coloring_data.json")];case 1:return t=i.sent(),n=new Array,a=Object.keys(t),t[a[0]].label_list.forEach((function(e,i){n.push({labelForCategory:a.reduce((function(e,n){var a;return r(r({},e),((a={})[n]=t[n].label_list[i],a))}),{}),number:i})})),[2,{nodes:n}]}}))}))};var p=function(e){return a(void 0,void 0,void 0,(function(){var t,n,r,a,o,l,u,c,p;return i(this,(function(i){switch(i.label){case 0:return[4,d.fetchJSONFile(e)];case 1:t=i.sent(),n={};try{for(r=s(Object.keys(t)),a=r.next();!a.done;a=r.next()){if(o=a.value,!(l=t[o]).label_colors||!l.label_list)throw new Error("Unable to parse color data - does it have keys named 'label_colors' and 'label_list'");u=h(l,t),n[o]=u}}catch(e){c={error:e}}finally{try{a&&!a.done&&(p=r.return)&&p.call(r)}finally{if(c)throw c.error}}return[2,n]}}))}))};t.fetchSpringCoordinateData=function(e){return a(void 0,void 0,void 0,(function(){var t,n;return i(this,(function(r){switch(r.label){case 0:return[4,d.fetchCSVFile(e)];case 1:return t=r.sent(),n=[],(t?t.split("\n"):[]).forEach((function(e,t,r){var a=e.split(",");if(a.length>=3){var i=parseFloat(a[1].trim()),s=parseFloat(a[2].trim()),o=parseInt(a[0].trim(),10);n[o]=[i,s]}else if(0!==e.localeCompare(""))throw new Error("Unable to parse coordinate data - Row "+t+" does not have at least 3 columns!")})),[2,n]}}))}))},t.fetchMatrixData=function(e){return a(void 0,void 0,void 0,(function(){var t,n;return i(this,(function(r){switch(r.label){case 0:return[4,d.fetchCSVFile(""+e)];case 1:return t=r.sent(),n=[],t.split("\n").forEach((function(e){if(e.length>0){var t=e.split(",").map(Number.parseFloat);n.push(t)}})),[2,n]}}))}))},t.fetchTSneCoordinateData=function(e){return a(void 0,void 0,void 0,(function(){var t,n;return i(this,(function(r){switch(r.label){case 0:return[4,d.fetchCSVFile(e+"/tsne_output.csv")];case 1:return t=r.sent(),n=[],t.split("\n").forEach((function(e){if(e.length>0){var t=e.split(","),r=[parseFloat(t[0]),parseFloat(t[1])];n.push(r)}})),[2,n]}}))}))},t.fetchTensorTSneCoordinateDataFromFile=function(e){return a(void 0,void 0,void 0,(function(){var t,n,r,a,o,l,u;return i(this,(function(i){switch(i.label){case 0:return[4,d.fetchCSVFile(e)];case 1:t=i.sent(),n=new Array;try{for(r=s(t.split("\n")),a=r.next();!a.done;a=r.next())(o=a.value).length>=1&&n.push(o.split(",").map(parseFloat))}catch(e){l={error:e}}finally{try{a&&!a.done&&(u=r.return)&&u.call(r)}finally{if(l)throw l.error}}return[2,n]}}))}))},t.fetchTensorTSneCoordinateData=function(e){return a(void 0,void 0,void 0,(function(){return i(this,(function(n){return[2,t.fetchTensorTSneCoordinateDataFromFile(e+"/tsne_matrix.csv")]}))}))},t.fetchGraphData=function(e){return a(void 0,void 0,void 0,(function(){var t;return i(this,(function(n){switch(n.label){case 0:return[4,d.fetchJSONFile(e)];case 1:if(!(t=n.sent()).nodes||!t.links)throw new Error("Unable to parse graph data - does it have keys named 'nodes' and 'links'");return[2,t]}}))}))},t.fetchNGLDataFromDirectory=function(e){return a(void 0,void 0,void 0,(function(){var n;return i(this,(function(r){return 0===e.length?[2,Promise.reject("Empty path.")]:(n=e+"/protein.pdb",[2,t.fetchNGLDataFromFile(n)])}))}))},t.fetchNGLDataFromFile=function(e,t){return void 0===t&&(t={}),a(void 0,void 0,void 0,(function(){return i(this,(function(n){switch(n.label){case 0:return[4,u.autoLoad(e,t)];case 1:return[2,n.sent()]}}))}))},t.fetchContactMapData=function(e,n){return void 0===n&&(n="known"),a(void 0,void 0,void 0,(function(){var r,s,o,l,u;return i(this,(function(p){switch(p.label){case 0:return 0===e.length?[2,Promise.reject("Empty path.")]:(r=["coupling_scores.csv","residue_mapping.csv"],[4,Promise.all(r.map((function(t){return a(void 0,void 0,void 0,(function(){return i(this,(function(n){return[2,d.fetchCSVFile(e+"/"+t)]}))}))})))]);case 1:return s=p.sent(),[4,c.BioblocksPDB.createPDB(e+"/protein.pdb")];case 2:return o=p.sent(),(u={})[n]=o,l=u,[2,{couplingScores:o.amendPDBWithCouplingScores(t.getCouplingScoresData(s[0],d.generateResidueMapping(s[1])).rankedContacts,c.CONTACT_DISTANCE_PROXIMITY.CLOSEST),pdbData:l,secondaryStructures:[]}]}}))}))};var h=function(e,t){var n,r,a={label_colors:{},label_list:e.label_list},i=t[Object.keys(t)[0]].label_colors;try{for(var o=s(Object.keys(i)),l=o.next();!l.done;l=o.next()){var u=l.value,c=i[u];"number"==typeof c?a.label_colors[u]=c:"#"===c.charAt(0)?a.label_colors[u]=Number.parseInt("0x"+c.slice(1),16):a.label_colors[u]=Number.parseInt(c,16)}}catch(e){n={error:e}}finally{try{l&&!l.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return a};t.getCouplingScoresData=function(e,t){void 0===t&&(t=[]);var n=e.split("\n")[0].split(","),a=m(n),i=d.getCouplingHeaderIndices(n,a),s=new c.CouplingContainer;return e.split("\n").slice(a?1:0).filter((function(e){return e.split(",").length>=2})).map((function(e){var n=e.split(","),a=g(n,i);if(t.length>=1){var o=t.findIndex((function(e){return e.couplingsResno===a.i})),l=t.findIndex((function(e){return e.couplingsResno===a.j}));s.addCouplingScore(r(r({},a),{A_i:t[o].pdbResCode,A_j:t[l].pdbResCode,i:t[o].pdbResno,j:t[l].pdbResno}))}else s.addCouplingScore(a)})),s};var m=function(e){return["cn","dist","i","j"].filter((function(t){return e.includes(t)})).length>=1},g=function(e,t){return Object.entries(t).reduce((function(t,n){var a,i=n[0],s=n[1];return r(r({},t),((a={})[i]=isNaN(Number(e[s]))?e[s]:Number(e[s]),a))}),{i:-1,j:-1})};function f(e,t,n){void 0===n&&(n=!1);var r=n?e.map((function(e,t){return t})):l(e);if(t>=e.length)return r;for(var a=new Array;a.length<t;){var i=Math.floor(Math.random()*r.length);a.push(r[i]),r.splice(i,1)}return a}t.augmentCouplingScoresWithResidueMapping=function(e,t){var n,a;void 0===t&&(t=[]);var i=new c.CouplingContainer,o=function(e){var n=t.findIndex((function(t){return t.couplingsResno===e.i})),a=t.findIndex((function(t){return t.couplingsResno===e.j}));i.addCouplingScore(r(r({},e),{A_i:t[n].pdbResCode,A_j:t[a].pdbResCode,i:t[n].pdbResno,j:t[a].pdbResno}))};try{for(var l=s(e),u=l.next();!u.done;u=l.next()){o(u.value)}}catch(e){n={error:e}}finally{try{u&&!u.done&&(a=l.return)&&a.call(l)}finally{if(n)throw n.error}}return i},t.getSecondaryStructureData=function(e){return e.split("\n").slice(1).filter((function(e){return e.split(",").length>=3})).map((function(e){var t=e.split(",");return{resno:parseFloat(t[1]),structId:t[2]}}))},t.subsample=f;try{f.displayName="subsample",f.__docgenInfo={description:'Randomly select and return "n" objects or indices (if returnIndices==true) and return\nin a new array.\n\nIf "n" is larger than the array, return the array directly or all the indices in the\narray (if returnIndices==true).\n\nNo duplicates are returned',displayName:"subsample",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#subsample"]={docgenInfo:f.__docgenInfo,name:"subsample",path:"src/helper/DataHelper.ts#subsample"})}catch(e){}try{t.fetchSpringData.displayName="fetchSpringData",t.fetchSpringData.__docgenInfo={description:"",displayName:"fetchSpringData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#fetchSpringData"]={docgenInfo:t.fetchSpringData.__docgenInfo,name:"fetchSpringData",path:"src/helper/DataHelper.ts#fetchSpringData"})}catch(e){}try{t.fetchSpringCoordinateData.displayName="fetchSpringCoordinateData",t.fetchSpringCoordinateData.__docgenInfo={description:"",displayName:"fetchSpringCoordinateData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#fetchSpringCoordinateData"]={docgenInfo:t.fetchSpringCoordinateData.__docgenInfo,name:"fetchSpringCoordinateData",path:"src/helper/DataHelper.ts#fetchSpringCoordinateData"})}catch(e){}try{t.fetchMatrixData.displayName="fetchMatrixData",t.fetchMatrixData.__docgenInfo={description:"",displayName:"fetchMatrixData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#fetchMatrixData"]={docgenInfo:t.fetchMatrixData.__docgenInfo,name:"fetchMatrixData",path:"src/helper/DataHelper.ts#fetchMatrixData"})}catch(e){}try{t.fetchTSneCoordinateData.displayName="fetchTSneCoordinateData",t.fetchTSneCoordinateData.__docgenInfo={description:"",displayName:"fetchTSneCoordinateData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#fetchTSneCoordinateData"]={docgenInfo:t.fetchTSneCoordinateData.__docgenInfo,name:"fetchTSneCoordinateData",path:"src/helper/DataHelper.ts#fetchTSneCoordinateData"})}catch(e){}try{t.fetchTensorTSneCoordinateDataFromFile.displayName="fetchTensorTSneCoordinateDataFromFile",t.fetchTensorTSneCoordinateDataFromFile.__docgenInfo={description:"",displayName:"fetchTensorTSneCoordinateDataFromFile",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#fetchTensorTSneCoordinateDataFromFile"]={docgenInfo:t.fetchTensorTSneCoordinateDataFromFile.__docgenInfo,name:"fetchTensorTSneCoordinateDataFromFile",path:"src/helper/DataHelper.ts#fetchTensorTSneCoordinateDataFromFile"})}catch(e){}try{t.fetchTensorTSneCoordinateData.displayName="fetchTensorTSneCoordinateData",t.fetchTensorTSneCoordinateData.__docgenInfo={description:"",displayName:"fetchTensorTSneCoordinateData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#fetchTensorTSneCoordinateData"]={docgenInfo:t.fetchTensorTSneCoordinateData.__docgenInfo,name:"fetchTensorTSneCoordinateData",path:"src/helper/DataHelper.ts#fetchTensorTSneCoordinateData"})}catch(e){}try{t.fetchGraphData.displayName="fetchGraphData",t.fetchGraphData.__docgenInfo={description:"",displayName:"fetchGraphData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#fetchGraphData"]={docgenInfo:t.fetchGraphData.__docgenInfo,name:"fetchGraphData",path:"src/helper/DataHelper.ts#fetchGraphData"})}catch(e){}try{t.fetchNGLDataFromDirectory.displayName="fetchNGLDataFromDirectory",t.fetchNGLDataFromDirectory.__docgenInfo={description:"",displayName:"fetchNGLDataFromDirectory",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#fetchNGLDataFromDirectory"]={docgenInfo:t.fetchNGLDataFromDirectory.__docgenInfo,name:"fetchNGLDataFromDirectory",path:"src/helper/DataHelper.ts#fetchNGLDataFromDirectory"})}catch(e){}try{t.getCouplingScoresData.displayName="getCouplingScoresData",t.getCouplingScoresData.__docgenInfo={description:"Parses a coupling_scores.csv file to generate the appropriate data structure.\n\n!Important!\nCurrently 12 fields are assumed to be part of a single coupling score.\nAs such, any rows with less will be ignored.\n@param line The csv file as a single string.\n@param residueMapping Maps the coupling_score.csv residue number to the residue number for the PDB.\n@returns Array of CouplingScores suitable for bioblocks-viz consumption.",displayName:"getCouplingScoresData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#getCouplingScoresData"]={docgenInfo:t.getCouplingScoresData.__docgenInfo,name:"getCouplingScoresData",path:"src/helper/DataHelper.ts#getCouplingScoresData"})}catch(e){}try{t.getSecondaryStructureData.displayName="getSecondaryStructureData",t.getSecondaryStructureData.__docgenInfo={description:"Parses a distance_map.csv file to generate the appropriate secondary structure mapping.\n\n!Important!\nThe first line in the csv will be ignored as it is assumed to be a csv header.\n\n!Important!\nCurrently 3 fields are assumed to be part of a single entry, with the second and third actually being relevant.\nAs such, any other rows will be ignored.\n@param line The csv file as a single string.\n@returns Array of SecondaryStructure mappings suitable for bioblocks-viz consumption.",displayName:"getSecondaryStructureData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/DataHelper.ts#getSecondaryStructureData"]={docgenInfo:t.getSecondaryStructureData.__docgenInfo,name:"getSecondaryStructureData",path:"src/helper/DataHelper.ts#getSecondaryStructureData"})}catch(e){}},"./src/helper/FetchHelper.ts":function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=n("./src/data/index.ts");t.fetchCSVFile=function(e){return r(void 0,void 0,void 0,(function(){var t;return a(this,(function(n){switch(n.label){case 0:return[4,fetch(e)];case 1:if((t=n.sent()).ok)return[2,t.text()];throw new Error(s("CSV",t))}}))}))},t.fetchJSONFile=function(e){return r(void 0,void 0,void 0,(function(){var t;return a(this,(function(n){switch(n.label){case 0:return[4,fetch(e)];case 1:if((t=n.sent()).ok)return[2,t.json()];throw new Error(s("JSON",t))}}))}))},t.fetchFastaFile=function(e){return r(void 0,void 0,void 0,(function(){var t,n,r;return a(this,(function(a){switch(a.label){case 0:return[4,fetch(e)];case 1:return(t=a.sent()).ok?(r=(n=i.SeqIO).parseFile,[4,t.text()]):[3,3];case 2:return[2,r.apply(n,[a.sent(),i.SEQUENCE_FILE_TYPES.fasta])];case 3:throw new Error("error "+t)}}))}))};var s=function(e,t){return"Bioblocks-viz error fetching "+e+" File!\nStatus: "+t.status+"\nMessage: "+t.statusText+"\n"};t.readFileAsText=function(e){return r(void 0,void 0,void 0,(function(){var t;return a(this,(function(n){return t=new FileReader,[2,new Promise((function(n,r){t.onerror=function(){t.abort(),r("Problem parsing input file.")},t.onload=function(){n(t.result)},t.readAsText(e)}))]}))}))};try{t.fetchCSVFile.displayName="fetchCSVFile",t.fetchCSVFile.__docgenInfo={description:"",displayName:"fetchCSVFile",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/FetchHelper.ts#fetchCSVFile"]={docgenInfo:t.fetchCSVFile.__docgenInfo,name:"fetchCSVFile",path:"src/helper/FetchHelper.ts#fetchCSVFile"})}catch(e){}try{t.fetchJSONFile.displayName="fetchJSONFile",t.fetchJSONFile.__docgenInfo={description:"",displayName:"fetchJSONFile",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/FetchHelper.ts#fetchJSONFile"]={docgenInfo:t.fetchJSONFile.__docgenInfo,name:"fetchJSONFile",path:"src/helper/FetchHelper.ts#fetchJSONFile"})}catch(e){}try{t.fetchFastaFile.displayName="fetchFastaFile",t.fetchFastaFile.__docgenInfo={description:"",displayName:"fetchFastaFile",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/FetchHelper.ts#fetchFastaFile"]={docgenInfo:t.fetchFastaFile.__docgenInfo,name:"fetchFastaFile",path:"src/helper/FetchHelper.ts#fetchFastaFile"})}catch(e){}try{t.readFileAsText.displayName="readFileAsText",t.readFileAsText.__docgenInfo={description:"",displayName:"readFileAsText",props:{lastModified:{defaultValue:null,description:"",name:"lastModified",required:!0,type:{name:"number"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"number"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"string"}},slice:{defaultValue:null,description:"",name:"slice",required:!0,type:{name:"(start?: number, end?: number, contentType?: string) => Blob"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/FetchHelper.ts#readFileAsText"]={docgenInfo:t.readFileAsText.__docgenInfo,name:"readFileAsText",path:"src/helper/FetchHelper.ts#readFileAsText"})}catch(e){}},"./src/helper/FunctionHelper.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EMPTY_FUNCTION=function(){}},"./src/helper/NGLHelper.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.defaultDistanceParams={color:"red"},t.defaultDistanceTooltipParams={labelBackground:!0,labelBackgroundColor:"lightgrey",labelBackgroundMargin:.75,labelBorder:!0,labelBorderColor:"white",labelBorderWidth:.3,labelColor:"black",labelSize:5,labelUnit:"angstrom",labelZOffset:35},t.createDistanceRepresentation=function(e,n,a,i){void 0===i&&(i={});var s=r(r(r({},t.defaultDistanceParams),i),{atomPair:Array.isArray(n)?[n]:[n.split(",")]});return a&&(s=r(r({},s),t.defaultDistanceTooltipParams)),e.addRepresentation("distance",s)},t.createBallStickRepresentation=function(e,t){return e.addRepresentation("ball+stick",{sele:t.join(", ")})},t.createSecStructRepresentation=function(e,t,n,r){void 0===n&&(n=2),void 0===r&&(r="#feb83f");var a=e.addRepresentation("cartoon",{color:r,radiusScale:n,sele:t.start+"-"+t.end});return a.setParameters({wireframe:!0}),a};try{t.createDistanceRepresentation.displayName="createDistanceRepresentation",t.createDistanceRepresentation.__docgenInfo={description:"Draws a line between two residues in NGL.\n@param structureComponent The NGL Structure for which these residues belong to.\n@param selection The [NGL Selection](http://nglviewer.org/ngl/api/manual/selection-language.html) defining the residues.",displayName:"createDistanceRepresentation",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/NGLHelper.ts#createDistanceRepresentation"]={docgenInfo:t.createDistanceRepresentation.__docgenInfo,name:"createDistanceRepresentation",path:"src/helper/NGLHelper.ts#createDistanceRepresentation"})}catch(e){}try{t.createBallStickRepresentation.displayName="createBallStickRepresentation",t.createBallStickRepresentation.__docgenInfo={description:"Marks a set of residues with a ball+stick representation in NGL.\n@param structureComponent The NGL Structure for which these residues belong to.\n@param residues The residues to mark.",displayName:"createBallStickRepresentation",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/NGLHelper.ts#createBallStickRepresentation"]={docgenInfo:t.createBallStickRepresentation.__docgenInfo,name:"createBallStickRepresentation",path:"src/helper/NGLHelper.ts#createBallStickRepresentation"})}catch(e){}try{t.createSecStructRepresentation.displayName="createSecStructRepresentation",t.createSecStructRepresentation.__docgenInfo={description:"Highlights a secondary structure in NGL.\n@param structureComponent The NGL Structure for which these residues belong to.\n@param section The secondary structure section to highlight.\n@param radiusScale How large to make the ribbon highlight.\n@param color The color of the ribbon highlight.",displayName:"createSecStructRepresentation",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/NGLHelper.ts#createSecStructRepresentation"]={docgenInfo:t.createSecStructRepresentation.__docgenInfo,name:"createSecStructRepresentation",path:"src/helper/NGLHelper.ts#createSecStructRepresentation"})}catch(e){}},"./src/helper/PlotlyHelper.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},i=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(a(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var s=n("./src/data/index.ts");t.generateScatterGLData=function(e,n){return void 0===n&&(n=!1),r(r({},t.generateScatterData(e,n)),{type:s.PLOTLY_CHART_TYPE.scattergl})},t.generateScatterData=function(e,t){void 0===t&&(t=!1);var n=e.marker,a=e.points,i=e.hoverinfo,c=e.subtitle,d=e.name,p=e.text,h=a.map((function(e){return e.i})),m=a.map((function(e){return e.j})),g=a.map((function(e){return e.dist?e.dist:-1})),f=p?Array.isArray(p)?p:[p]:[];return{hoverinfo:i||"x+y+z",marker:r({color:o(t,g,e),size:e.nodeSize},n),mode:"markers",name:d+" "+c,text:u(t,f),type:s.PLOTLY_CHART_TYPE.scatter,x:l(t,h,m),y:l(t,m,h),z:l(t,g,g)}};var o=function(e,t,n){var r=e?2*t.length:t.length,a=new Array(r);if(n.marker&&"string"==typeof n.marker.color)return a.fill(n.marker.color);var s=t.map((function(e){return e.toString()}));return e?i(s,s):s},l=function(e,t,n){return e?i(t,n):t},u=function(e,t){return e?i(t,t.map((function(e){if(e.includes("<br>")&&e.includes("(")){var t=e.indexOf("<br>");return"("+e.substr(1,t-2).split(", ").reverse().join(", ")+")"+e.substring(t)}return e.includes("(")?"("+e.substr(1,e.length-2).split(", ").reverse().join(", ")+")":""+e.split(", ").reverse().join(", ")}))):t};t.generateCouplingScoreHoverText=function(e){var t="";return e&&(t=e.A_i&&e.A_j?"("+e.i+e.A_i+", "+e.j+e.A_j+")":"("+e.i+", "+e.j+")",e.score&&(t=t+"<br>Score: "+e.score),e.probability&&(t=t+"<br>Probability: "+e.probability.toFixed(1))),t},t.generateFloat32ArrayFromContacts=function(e){var t=new Float32Array(2*e.length);return e.forEach((function(e,n){t[2*n]=e.i,t[2*n+1]=e.j})),t},t.generatePointCloudData=function(e,n){void 0===n&&(n=!1);var a=e.points,o=t.generateFloat32ArrayFromContacts(a);return{marker:r(r({},e.marker),{sizemax:2*e.nodeSize,sizemin:e.nodeSize}),mode:"markers",type:s.PLOTLY_CHART_TYPE.pointcloud,xy:n?new Float32Array(i(Array.from(o),Array.from(o).slice().reverse())):o}};try{t.generateScatterGLData.displayName="generateScatterGLData",t.generateScatterGLData.__docgenInfo={description:"Generate data in the expected format for a WebGL Scatter plot.\n@param entry A unit of Plotly data containing points, color, name, and any extras.\n@param mirrorPoints Should we mirror the points on the x/y axis?\n@returns Data suitable for consumption by Plotly.",displayName:"generateScatterGLData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/PlotlyHelper.ts#generateScatterGLData"]={docgenInfo:t.generateScatterGLData.__docgenInfo,name:"generateScatterGLData",path:"src/helper/PlotlyHelper.ts#generateScatterGLData"})}catch(e){}try{t.generateScatterData.displayName="generateScatterData",t.generateScatterData.__docgenInfo={description:"Generate data in the expected format for a Scatter plot.\n@param entry A unit of Plotly data containing points, color, name, and any extras.\n@param mirrorPoints Should we mirror the points on the x/y axis?\n@returns Data suitable for consumption by Plotly.",displayName:"generateScatterData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/PlotlyHelper.ts#generateScatterData"]={docgenInfo:t.generateScatterData.__docgenInfo,name:"generateScatterData",path:"src/helper/PlotlyHelper.ts#generateScatterData"})}catch(e){}try{t.generateCouplingScoreHoverText.displayName="generateCouplingScoreHoverText",t.generateCouplingScoreHoverText.__docgenInfo={description:"Determines the appropriate hover text in plotly for this coupling score.\n\nCurrently the following 3 fields will be appended if present:\n- Amino acid (A_i, A_j)\n- Score\n- Probability",displayName:"generateCouplingScoreHoverText",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/PlotlyHelper.ts#generateCouplingScoreHoverText"]={docgenInfo:t.generateCouplingScoreHoverText.__docgenInfo,name:"generateCouplingScoreHoverText",path:"src/helper/PlotlyHelper.ts#generateCouplingScoreHoverText"})}catch(e){}try{t.generateFloat32ArrayFromContacts.displayName="generateFloat32ArrayFromContacts",t.generateFloat32ArrayFromContacts.__docgenInfo={description:"",displayName:"generateFloat32ArrayFromContacts",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => { i: number; j: number; }"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: { i: number; j: number; }[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<{ i: number; j: number; }>[]): { i: number; j: number; }[]; (...items: ({ i: number; j: number; } | ConcatArray<{ i: number; j: number; }>)[]): { i: number; j: number; }[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => { i: number; j: number; }[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => { i: number; j: number; }"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => { i: number; j: number; }[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.",name:"sort",required:!0,type:{name:"(compareFn?: (a: { i: number; j: number; }, b: { i: number; j: number; }) => number) => { i: number; j: number; }[]"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): { i: number; j: number; }[]; (start: number, deleteCount: number, ...items: { i: number; j: number; }[]): { i: number; j: number; }[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: { i: number; j: number; }[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: { i: number; j: number; }, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: { i: number; j: number; }, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends { i: number; j: number; }>(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => unknown, thisArg?: any): { ...; }[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: { i: number; j: number; }, currentValue: { i: number; j: number; }, currentIndex: number, array: { i: number; j: number; }[]) => { i: number; j: number; }): { i: number; j: number; }; (callbackfn: (previousValue: { ...; }, currentValue: { ...; }, currentIndex: number, array: { ...; }[]..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: { i: number; j: number; }, currentValue: { i: number; j: number; }, currentIndex: number, array: { i: number; j: number; }[]) => { i: number; j: number; }): { i: number; j: number; }; (callbackfn: (previousValue: { ...; }, currentValue: { ...; }, currentIndex: number, array: { ...; }[]..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends { i: number; j: number; }>(predicate: (this: void, value: { i: number; j: number; }, index: number, obj: { i: number; j: number; }[]) => value is S, thisArg?: any): S; (predicate: (value: { i: number; j: number; }, index: number, obj: { ...; }[]) => unknown, thisArg?: any): { ...; }; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: { i: number; j: number; }, index: number, obj: { i: number; j: number; }[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: { i: number; j: number; }, start?: number, end?: number) => { i: number; j: number; }[]"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => { i: number; j: number; }[]"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<{ i: number; j: number; }>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, { i: number; j: number; }]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<{ i: number; j: number; }>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: { i: number; j: number; }, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/PlotlyHelper.ts#generateFloat32ArrayFromContacts"]={docgenInfo:t.generateFloat32ArrayFromContacts.__docgenInfo,name:"generateFloat32ArrayFromContacts",path:"src/helper/PlotlyHelper.ts#generateFloat32ArrayFromContacts"})}catch(e){}try{t.generatePointCloudData.displayName="generatePointCloudData",t.generatePointCloudData.__docgenInfo={description:"Generate data in the expected format for a Plotly PointCloud.\n@param entry A unit of Plotly data containing points, color, and any extras.\n@param mirrorPoints Should we mirror the points on the x/y axis?\n@returns Data suitable for consumption by Plotly.",displayName:"generatePointCloudData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/PlotlyHelper.ts#generatePointCloudData"]={docgenInfo:t.generatePointCloudData.__docgenInfo,name:"generatePointCloudData",path:"src/helper/PlotlyHelper.ts#generatePointCloudData"})}catch(e){}},"./src/helper/ResidueMapper.ts":function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=["up_index","up_residue","pdb_index","pdb_residue"],i=["id","coord_id","one_letter_code"];t.generateResidueMapping=function(e){var t=/\t|,/,n=e.split("\n")[0].split(t),r=o(n),i=s(n,r),l=r?i.id:i.up_index,u=r?i.coord_id:i.pdb_index,c=r?i.one_letter_code:i.pdb_residue;return e.split("\n").slice(1).reduce((function(e,n){var s=n.split(t);return s.length>=a.length&&e.push({couplingsResCode:r?s[c]:s[i.up_residue],couplingsResno:parseInt(s[l],10),pdbResCode:s[c],pdbResno:parseInt(s[u],10)}),e}),new Array)};var s=function(e,t){var n={},r=t?i:a;return e.length>=a.length&&r.map((function(t){if(!e.includes(t))throw new Error("Missing error "+t+" in residue mapping file!");n[t]=e.indexOf(t)})),n},o=function(e){var t,n;try{for(var a=r(i),s=a.next();!s.done;s=a.next()){var o=s.value;if(!e.includes(o))return!1}}catch(e){t={error:e}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return!0};try{t.generateResidueMapping.displayName="generateResidueMapping",t.generateResidueMapping.__docgenInfo={description:"Determines the mapping of residues from a UniProt file to a PDB, given a indextableplus file.\n@description This file is, semantically, a csv with 4 headers:\n\nup_index - UniProt residue number.\n\nup_residue - UniProt residue name.\n\npdb_index - PDB residue number.\n\npdb_residue - PDB residue name.\n@param text The contents of a indextableplus file.\n@returns Array of all residue mappings.",displayName:"generateResidueMapping",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/ResidueMapper.ts#generateResidueMapping"]={docgenInfo:t.generateResidueMapping.__docgenInfo,name:"generateResidueMapping",path:"src/helper/ResidueMapper.ts#generateResidueMapping"})}catch(e){}},"./src/helper/StringHelper.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.capitalizeFirstLetter=function(e){return""+e.substr(0,1).toLocaleUpperCase()+e.substr(1).toLocaleLowerCase()},t.capitalizeEveryWord=function(e){return e.split(" ").map((function(e){return""+e.substr(0,1).toLocaleUpperCase()+e.substr(1).toLocaleLowerCase()})).join(" ")};try{t.capitalizeFirstLetter.displayName="capitalizeFirstLetter",t.capitalizeFirstLetter.__docgenInfo={description:"",displayName:"capitalizeFirstLetter",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/StringHelper.ts#capitalizeFirstLetter"]={docgenInfo:t.capitalizeFirstLetter.__docgenInfo,name:"capitalizeFirstLetter",path:"src/helper/StringHelper.ts#capitalizeFirstLetter"})}catch(e){}try{t.capitalizeEveryWord.displayName="capitalizeEveryWord",t.capitalizeEveryWord.__docgenInfo={description:"",displayName:"capitalizeEveryWord",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/StringHelper.ts#capitalizeEveryWord"]={docgenInfo:t.capitalizeEveryWord.__docgenInfo,name:"capitalizeEveryWord",path:"src/helper/StringHelper.ts#capitalizeEveryWord"})}catch(e){}},"./src/helper/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/helper/ColorMapper.ts")),r(n("./src/helper/CouplingMapper.ts")),r(n("./src/helper/DataHelper.ts")),r(n("./src/helper/FetchHelper.ts")),r(n("./src/helper/FunctionHelper.ts")),r(n("./src/helper/NGLHelper.ts")),r(n("./src/helper/PlotlyHelper.ts")),r(n("./src/helper/ResidueMapper.ts")),r(n("./src/helper/StringHelper.ts"));try{ColorMapper.displayName="ColorMapper",ColorMapper.__docgenInfo={description:"Class to allow a mapping between a type and a color.\n@export",displayName:"ColorMapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#ColorMapper"]={docgenInfo:ColorMapper.__docgenInfo,name:"ColorMapper",path:"src/helper/index.ts#ColorMapper"})}catch(e){}try{subsample.displayName="subsample",subsample.__docgenInfo={description:'Randomly select and return "n" objects or indices (if returnIndices==true) and return\nin a new array.\n\nIf "n" is larger than the array, return the array directly or all the indices in the\narray (if returnIndices==true).\n\nNo duplicates are returned',displayName:"subsample",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#subsample"]={docgenInfo:subsample.__docgenInfo,name:"subsample",path:"src/helper/index.ts#subsample"})}catch(e){}try{fetchSpringData.displayName="fetchSpringData",fetchSpringData.__docgenInfo={description:"",displayName:"fetchSpringData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchSpringData"]={docgenInfo:fetchSpringData.__docgenInfo,name:"fetchSpringData",path:"src/helper/index.ts#fetchSpringData"})}catch(e){}try{fetchSpringCoordinateData.displayName="fetchSpringCoordinateData",fetchSpringCoordinateData.__docgenInfo={description:"",displayName:"fetchSpringCoordinateData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchSpringCoordinateData"]={docgenInfo:fetchSpringCoordinateData.__docgenInfo,name:"fetchSpringCoordinateData",path:"src/helper/index.ts#fetchSpringCoordinateData"})}catch(e){}try{fetchMatrixData.displayName="fetchMatrixData",fetchMatrixData.__docgenInfo={description:"",displayName:"fetchMatrixData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchMatrixData"]={docgenInfo:fetchMatrixData.__docgenInfo,name:"fetchMatrixData",path:"src/helper/index.ts#fetchMatrixData"})}catch(e){}try{fetchTSneCoordinateData.displayName="fetchTSneCoordinateData",fetchTSneCoordinateData.__docgenInfo={description:"",displayName:"fetchTSneCoordinateData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchTSneCoordinateData"]={docgenInfo:fetchTSneCoordinateData.__docgenInfo,name:"fetchTSneCoordinateData",path:"src/helper/index.ts#fetchTSneCoordinateData"})}catch(e){}try{fetchTensorTSneCoordinateDataFromFile.displayName="fetchTensorTSneCoordinateDataFromFile",fetchTensorTSneCoordinateDataFromFile.__docgenInfo={description:"",displayName:"fetchTensorTSneCoordinateDataFromFile",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchTensorTSneCoordinateDataFromFile"]={docgenInfo:fetchTensorTSneCoordinateDataFromFile.__docgenInfo,name:"fetchTensorTSneCoordinateDataFromFile",path:"src/helper/index.ts#fetchTensorTSneCoordinateDataFromFile"})}catch(e){}try{fetchTensorTSneCoordinateData.displayName="fetchTensorTSneCoordinateData",fetchTensorTSneCoordinateData.__docgenInfo={description:"",displayName:"fetchTensorTSneCoordinateData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchTensorTSneCoordinateData"]={docgenInfo:fetchTensorTSneCoordinateData.__docgenInfo,name:"fetchTensorTSneCoordinateData",path:"src/helper/index.ts#fetchTensorTSneCoordinateData"})}catch(e){}try{fetchGraphData.displayName="fetchGraphData",fetchGraphData.__docgenInfo={description:"",displayName:"fetchGraphData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchGraphData"]={docgenInfo:fetchGraphData.__docgenInfo,name:"fetchGraphData",path:"src/helper/index.ts#fetchGraphData"})}catch(e){}try{fetchNGLDataFromDirectory.displayName="fetchNGLDataFromDirectory",fetchNGLDataFromDirectory.__docgenInfo={description:"",displayName:"fetchNGLDataFromDirectory",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchNGLDataFromDirectory"]={docgenInfo:fetchNGLDataFromDirectory.__docgenInfo,name:"fetchNGLDataFromDirectory",path:"src/helper/index.ts#fetchNGLDataFromDirectory"})}catch(e){}try{getCouplingScoresData.displayName="getCouplingScoresData",getCouplingScoresData.__docgenInfo={description:"Parses a coupling_scores.csv file to generate the appropriate data structure.\n\n!Important!\nCurrently 12 fields are assumed to be part of a single coupling score.\nAs such, any rows with less will be ignored.\n@param line The csv file as a single string.\n@param residueMapping Maps the coupling_score.csv residue number to the residue number for the PDB.\n@returns Array of CouplingScores suitable for bioblocks-viz consumption.",displayName:"getCouplingScoresData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#getCouplingScoresData"]={docgenInfo:getCouplingScoresData.__docgenInfo,name:"getCouplingScoresData",path:"src/helper/index.ts#getCouplingScoresData"})}catch(e){}try{getSecondaryStructureData.displayName="getSecondaryStructureData",getSecondaryStructureData.__docgenInfo={description:"Parses a distance_map.csv file to generate the appropriate secondary structure mapping.\n\n!Important!\nThe first line in the csv will be ignored as it is assumed to be a csv header.\n\n!Important!\nCurrently 3 fields are assumed to be part of a single entry, with the second and third actually being relevant.\nAs such, any other rows will be ignored.\n@param line The csv file as a single string.\n@returns Array of SecondaryStructure mappings suitable for bioblocks-viz consumption.",displayName:"getSecondaryStructureData",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#getSecondaryStructureData"]={docgenInfo:getSecondaryStructureData.__docgenInfo,name:"getSecondaryStructureData",path:"src/helper/index.ts#getSecondaryStructureData"})}catch(e){}try{fetchCSVFile.displayName="fetchCSVFile",fetchCSVFile.__docgenInfo={description:"",displayName:"fetchCSVFile",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchCSVFile"]={docgenInfo:fetchCSVFile.__docgenInfo,name:"fetchCSVFile",path:"src/helper/index.ts#fetchCSVFile"})}catch(e){}try{fetchJSONFile.displayName="fetchJSONFile",fetchJSONFile.__docgenInfo={description:"",displayName:"fetchJSONFile",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchJSONFile"]={docgenInfo:fetchJSONFile.__docgenInfo,name:"fetchJSONFile",path:"src/helper/index.ts#fetchJSONFile"})}catch(e){}try{fetchFastaFile.displayName="fetchFastaFile",fetchFastaFile.__docgenInfo={description:"",displayName:"fetchFastaFile",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#fetchFastaFile"]={docgenInfo:fetchFastaFile.__docgenInfo,name:"fetchFastaFile",path:"src/helper/index.ts#fetchFastaFile"})}catch(e){}try{readFileAsText.displayName="readFileAsText",readFileAsText.__docgenInfo={description:"",displayName:"readFileAsText",props:{lastModified:{defaultValue:null,description:"",name:"lastModified",required:!0,type:{name:"number"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"number"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"string"}},slice:{defaultValue:null,description:"",name:"slice",required:!0,type:{name:"(start?: number, end?: number, contentType?: string) => Blob"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#readFileAsText"]={docgenInfo:readFileAsText.__docgenInfo,name:"readFileAsText",path:"src/helper/index.ts#readFileAsText"})}catch(e){}try{createDistanceRepresentation.displayName="createDistanceRepresentation",createDistanceRepresentation.__docgenInfo={description:"Draws a line between two residues in NGL.\n@param structureComponent The NGL Structure for which these residues belong to.\n@param selection The [NGL Selection](http://nglviewer.org/ngl/api/manual/selection-language.html) defining the residues.",displayName:"createDistanceRepresentation",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#createDistanceRepresentation"]={docgenInfo:createDistanceRepresentation.__docgenInfo,name:"createDistanceRepresentation",path:"src/helper/index.ts#createDistanceRepresentation"})}catch(e){}try{createBallStickRepresentation.displayName="createBallStickRepresentation",createBallStickRepresentation.__docgenInfo={description:"Marks a set of residues with a ball+stick representation in NGL.\n@param structureComponent The NGL Structure for which these residues belong to.\n@param residues The residues to mark.",displayName:"createBallStickRepresentation",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#createBallStickRepresentation"]={docgenInfo:createBallStickRepresentation.__docgenInfo,name:"createBallStickRepresentation",path:"src/helper/index.ts#createBallStickRepresentation"})}catch(e){}try{createSecStructRepresentation.displayName="createSecStructRepresentation",createSecStructRepresentation.__docgenInfo={description:"Highlights a secondary structure in NGL.\n@param structureComponent The NGL Structure for which these residues belong to.\n@param section The secondary structure section to highlight.\n@param radiusScale How large to make the ribbon highlight.\n@param color The color of the ribbon highlight.",displayName:"createSecStructRepresentation",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#createSecStructRepresentation"]={docgenInfo:createSecStructRepresentation.__docgenInfo,name:"createSecStructRepresentation",path:"src/helper/index.ts#createSecStructRepresentation"})}catch(e){}try{generateScatterGLData.displayName="generateScatterGLData",generateScatterGLData.__docgenInfo={description:"Generate data in the expected format for a WebGL Scatter plot.\n@param entry A unit of Plotly data containing points, color, name, and any extras.\n@param mirrorPoints Should we mirror the points on the x/y axis?\n@returns Data suitable for consumption by Plotly.",displayName:"generateScatterGLData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#generateScatterGLData"]={docgenInfo:generateScatterGLData.__docgenInfo,name:"generateScatterGLData",path:"src/helper/index.ts#generateScatterGLData"})}catch(e){}try{generateScatterData.displayName="generateScatterData",generateScatterData.__docgenInfo={description:"Generate data in the expected format for a Scatter plot.\n@param entry A unit of Plotly data containing points, color, name, and any extras.\n@param mirrorPoints Should we mirror the points on the x/y axis?\n@returns Data suitable for consumption by Plotly.",displayName:"generateScatterData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#generateScatterData"]={docgenInfo:generateScatterData.__docgenInfo,name:"generateScatterData",path:"src/helper/index.ts#generateScatterData"})}catch(e){}try{generateCouplingScoreHoverText.displayName="generateCouplingScoreHoverText",generateCouplingScoreHoverText.__docgenInfo={description:"Determines the appropriate hover text in plotly for this coupling score.\n\nCurrently the following 3 fields will be appended if present:\n- Amino acid (A_i, A_j)\n- Score\n- Probability",displayName:"generateCouplingScoreHoverText",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#generateCouplingScoreHoverText"]={docgenInfo:generateCouplingScoreHoverText.__docgenInfo,name:"generateCouplingScoreHoverText",path:"src/helper/index.ts#generateCouplingScoreHoverText"})}catch(e){}try{generateFloat32ArrayFromContacts.displayName="generateFloat32ArrayFromContacts",generateFloat32ArrayFromContacts.__docgenInfo={description:"",displayName:"generateFloat32ArrayFromContacts",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => { i: number; j: number; }"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: { i: number; j: number; }[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<{ i: number; j: number; }>[]): { i: number; j: number; }[]; (...items: ({ i: number; j: number; } | ConcatArray<{ i: number; j: number; }>)[]): { i: number; j: number; }[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => { i: number; j: number; }[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => { i: number; j: number; }"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => { i: number; j: number; }[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.",name:"sort",required:!0,type:{name:"(compareFn?: (a: { i: number; j: number; }, b: { i: number; j: number; }) => number) => { i: number; j: number; }[]"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): { i: number; j: number; }[]; (start: number, deleteCount: number, ...items: { i: number; j: number; }[]): { i: number; j: number; }[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: { i: number; j: number; }[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: { i: number; j: number; }, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: { i: number; j: number; }, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends { i: number; j: number; }>(callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: { i: number; j: number; }, index: number, array: { i: number; j: number; }[]) => unknown, thisArg?: any): { ...; }[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: { i: number; j: number; }, currentValue: { i: number; j: number; }, currentIndex: number, array: { i: number; j: number; }[]) => { i: number; j: number; }): { i: number; j: number; }; (callbackfn: (previousValue: { ...; }, currentValue: { ...; }, currentIndex: number, array: { ...; }[]..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: { i: number; j: number; }, currentValue: { i: number; j: number; }, currentIndex: number, array: { i: number; j: number; }[]) => { i: number; j: number; }): { i: number; j: number; }; (callbackfn: (previousValue: { ...; }, currentValue: { ...; }, currentIndex: number, array: { ...; }[]..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends { i: number; j: number; }>(predicate: (this: void, value: { i: number; j: number; }, index: number, obj: { i: number; j: number; }[]) => value is S, thisArg?: any): S; (predicate: (value: { i: number; j: number; }, index: number, obj: { ...; }[]) => unknown, thisArg?: any): { ...; }; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: { i: number; j: number; }, index: number, obj: { i: number; j: number; }[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: { i: number; j: number; }, start?: number, end?: number) => { i: number; j: number; }[]"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => { i: number; j: number; }[]"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<{ i: number; j: number; }>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, { i: number; j: number; }]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<{ i: number; j: number; }>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: { i: number; j: number; }, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#generateFloat32ArrayFromContacts"]={docgenInfo:generateFloat32ArrayFromContacts.__docgenInfo,name:"generateFloat32ArrayFromContacts",path:"src/helper/index.ts#generateFloat32ArrayFromContacts"})}catch(e){}try{generatePointCloudData.displayName="generatePointCloudData",generatePointCloudData.__docgenInfo={description:"Generate data in the expected format for a Plotly PointCloud.\n@param entry A unit of Plotly data containing points, color, and any extras.\n@param mirrorPoints Should we mirror the points on the x/y axis?\n@returns Data suitable for consumption by Plotly.",displayName:"generatePointCloudData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#generatePointCloudData"]={docgenInfo:generatePointCloudData.__docgenInfo,name:"generatePointCloudData",path:"src/helper/index.ts#generatePointCloudData"})}catch(e){}try{generateResidueMapping.displayName="generateResidueMapping",generateResidueMapping.__docgenInfo={description:"Determines the mapping of residues from a UniProt file to a PDB, given a indextableplus file.\n@description This file is, semantically, a csv with 4 headers:\n\nup_index - UniProt residue number.\n\nup_residue - UniProt residue name.\n\npdb_index - PDB residue number.\n\npdb_residue - PDB residue name.\n@param text The contents of a indextableplus file.\n@returns Array of all residue mappings.",displayName:"generateResidueMapping",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#generateResidueMapping"]={docgenInfo:generateResidueMapping.__docgenInfo,name:"generateResidueMapping",path:"src/helper/index.ts#generateResidueMapping"})}catch(e){}try{capitalizeFirstLetter.displayName="capitalizeFirstLetter",capitalizeFirstLetter.__docgenInfo={description:"",displayName:"capitalizeFirstLetter",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#capitalizeFirstLetter"]={docgenInfo:capitalizeFirstLetter.__docgenInfo,name:"capitalizeFirstLetter",path:"src/helper/index.ts#capitalizeFirstLetter"})}catch(e){}try{capitalizeEveryWord.displayName="capitalizeEveryWord",capitalizeEveryWord.__docgenInfo={description:"",displayName:"capitalizeEveryWord",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/helper/index.ts#capitalizeEveryWord"]={docgenInfo:capitalizeEveryWord.__docgenInfo,name:"capitalizeEveryWord",path:"src/helper/index.ts#capitalizeEveryWord"})}catch(e){}},"./src/reducer/BBStore.ts":function(e,t,n){"use strict";var r=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return s},a=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var i=n("./node_modules/redux/es/redux.js"),s=(n("./node_modules/redux-logger/dist/redux-logger.js"),n("./node_modules/redux-thunk/es/index.js")),o=n("./src/reducer/index.ts"),l=[s.default];l.push(o.BioblocksMiddleware);var u={visualizations:new Array},c=function(e){var t=Object.keys(e);return Object.keys(u).forEach((function(n){-1===t.indexOf(n)&&(e[n]=function(e){return void 0===e&&(e=null),e})})),i.combineReducers(e)},d=c(o.ReducerRegistry.getReducers());o.ReducerRegistry.setChangeListener((function(e){t.BBStore.replaceReducer(c(e))}));t.BBStore=i.createStore(d,u,i.applyMiddleware.apply(void 0,a(l)))},"./src/reducer/BioblocksMiddleware.ts":function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.BioblocksMiddleware=function(e){return function(t){return function(n){var i,s,o=t(n);try{for(var l=r(a.transforms.keys()),u=l.next();!u.done;u=l.next()){var c=u.value,d=c.split("-");if(d[0].includes(n.meta)){var p=a.transforms.get(c);if(p){var h=p(e.getState());e.dispatch({payload:h,type:(d[d.length-1]+"_SET").toUpperCase()})}}}}catch(e){i={error:e}}finally{try{u&&!u.done&&(s=l.return)&&s.call(l)}finally{if(i)throw i.error}}return o}}};var a=function(){function e(e){void 0===e&&(e=[]),this.requiredDataSubs=e}return e.addTransform=function(e){var t=e.fromState,n=e.toState,r="string"==typeof t?t:(t.namespace?t.namespace:"bioblocks")+"/"+t.stateName,a="string"==typeof n?n:(n.namespace?n.namespace:"bioblocks")+"/"+n.stateName;this.transforms.set(r+"-"+a,e.fn)},e.transforms=new Map,e}();t.BioblocksMiddlewareTransformer=a;try{t.BioblocksMiddleware.displayName="BioblocksMiddleware",t.BioblocksMiddleware.__docgenInfo={description:"",displayName:"BioblocksMiddleware",props:{dispatch:{defaultValue:null,description:"",name:"dispatch",required:!0,type:{name:"Dispatch<AnyAction>"}},getState:{defaultValue:null,description:"",name:"getState",required:!0,type:{name:"() => any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/BioblocksMiddleware.ts#BioblocksMiddleware"]={docgenInfo:t.BioblocksMiddleware.__docgenInfo,name:"BioblocksMiddleware",path:"src/reducer/BioblocksMiddleware.ts#BioblocksMiddleware"})}catch(e){}},"./src/reducer/ContainerReducer.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/immutable/dist/immutable.js"),a=n("./node_modules/typesafe-actions/dist/index.umd.js"),i=n("./src/action/index.ts"),s=n("./src/reducer/index.ts");t.ContainerReducer=function(e,t){void 0===t&&(t="bioblocks");var n=i.createContainerActions(e,t),s=r.Set();return function(e,t){switch(void 0===e&&(e=s),t.type){case a.getType(n.add):var i=t.payload;return e.add(i);case a.getType(n.addMultiple):return(i=t.payload).reduce((function(e,t){return e.add(t)}),e);case a.getType(n.clear):return r.Set();case a.getType(n.remove):i=t.payload;return e.remove(i);case a.getType(n.removeMultiple):return(i=t.payload).reduce((function(e,t){return e.remove(t)}),e);case a.getType(n.set):i=t.payload;return r.Set(i);default:return e}}},t.createContainerReducer=function(e,n){void 0===n&&(n="bioblocks");var r=t.ContainerReducer(e,n),a=n+"/"+e;s.ReducerRegistry.register(a,r)}},"./src/reducer/DataReducer.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/typesafe-actions/dist/index.umd.js"),a=n("./src/action/index.ts"),i=n("./src/reducer/index.ts");t.DataReducer=function(e,t,n){void 0===n&&(n="bioblocks");var i=a.createDataActions(e,n);return function(e,n){switch(void 0===e&&(e=t),n.type){case r.getType(i.success):return n.payload;case r.getType(i.failure):var a=n.payload;return console.error(a),t;default:return e}}},t.createDataReducer=function(e,n,r){void 0===r&&(r="bioblocks");var a=t.DataReducer(e,n,r),s=r+"/"+e;i.ReducerRegistry.register(s,a)}},"./src/reducer/ObjectReducer.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/immutable/dist/immutable.js"),a=n("./node_modules/typesafe-actions/dist/index.umd.js"),i=n("./src/action/index.ts"),s=n("./src/reducer/index.ts");t.ObjectReducer=function(e,t){void 0===t&&(t="bioblocks");var n=i.createObjectActions(e,t),s=r.Map();return function(e,t){switch(void 0===e&&(e=s),t.type){case a.getType(n.add):var i=t.payload;return e.merge(i);case a.getType(n.clear):return r.Map();case a.getType(n.remove):i=t.payload;return e.remove(i);case a.getType(n.removeMultiple):return(i=t.payload).reduce((function(e,t){return e.remove(t)}),e);case a.getType(n.set):i=t.payload;return r.Map(i);case a.getType(n.toggle):var o=t.payload,l=e;return Object.keys(o).forEach((function(t){l=e.has(t)?e.remove(t):e.set(t,o[t])})),l;default:return e}}},t.createObjectReducer=function(e,n){void 0===n&&(n="bioblocks");var r=t.ObjectReducer(e,n),a=n+"/"+e;s.ReducerRegistry.register(a,r)}},"./src/reducer/ResiduePairReducer.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/redux/es/redux.js"),a=n("./src/reducer/index.ts");t.RESIDUE_PAIR_DATASET_NAME="residuePair",t.ResiduePairReducer=function(e){return void 0===e&&(e="bioblocks"),r.combineReducers({candidates:a.ContainerReducer(t.RESIDUE_PAIR_DATASET_NAME+"/candidates",e),hovered:a.ContainerReducer(t.RESIDUE_PAIR_DATASET_NAME+"/hovered",e),locked:a.ObjectReducer(t.RESIDUE_PAIR_DATASET_NAME+"/locked",e)})},t.createResiduePairReducer=function(e){void 0===e&&(e="bioblocks");var n=t.ResiduePairReducer(e),r=e+"/"+t.RESIDUE_PAIR_DATASET_NAME;a.ReducerRegistry.register(r,n)};try{t.ResiduePairReducer.displayName="ResiduePairReducer",t.ResiduePairReducer.__docgenInfo={description:"",displayName:"ResiduePairReducer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/ResiduePairReducer.ts#ResiduePairReducer"]={docgenInfo:t.ResiduePairReducer.__docgenInfo,name:"ResiduePairReducer",path:"src/reducer/ResiduePairReducer.ts#ResiduePairReducer"})}catch(e){}try{t.createResiduePairReducer.displayName="createResiduePairReducer",t.createResiduePairReducer.__docgenInfo={description:"",displayName:"createResiduePairReducer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/ResiduePairReducer.ts#createResiduePairReducer"]={docgenInfo:t.createResiduePairReducer.__docgenInfo,name:"createResiduePairReducer",path:"src/reducer/ResiduePairReducer.ts#createResiduePairReducer"})}catch(e){}},"./src/reducer/SpringReducer.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/redux/es/redux.js"),a=n("./src/reducer/index.ts");t.SpringReducer=function(e){return void 0===e&&(e="bioblocks"),r.combineReducers({category:a.ValueReducer("spring/category","",e),graphData:a.DataReducer("spring/graphData",{nodes:[]},e)})},t.createSpringReducer=function(e){void 0===e&&(e="bioblocks");var n=t.SpringReducer(e),r=e+"/spring";a.ReducerRegistry.register(r,n)};try{t.SpringReducer.displayName="SpringReducer",t.SpringReducer.__docgenInfo={description:"",displayName:"SpringReducer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/SpringReducer.ts#SpringReducer"]={docgenInfo:t.SpringReducer.__docgenInfo,name:"SpringReducer",path:"src/reducer/SpringReducer.ts#SpringReducer"})}catch(e){}try{t.createSpringReducer.displayName="createSpringReducer",t.createSpringReducer.__docgenInfo={description:"",displayName:"createSpringReducer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/SpringReducer.ts#createSpringReducer"]={docgenInfo:t.createSpringReducer.__docgenInfo,name:"createSpringReducer",path:"src/reducer/SpringReducer.ts#createSpringReducer"})}catch(e){}},"./src/reducer/ValueReducer.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/typesafe-actions/dist/index.umd.js"),a=n("./src/action/index.ts"),i=n("./src/reducer/index.ts");t.ValueReducer=function(e,t,n){void 0===n&&(n="bioblocks");var i=a.createValueActions(e,n);return function(e,n){switch(void 0===e&&(e=t),n.type){case r.getType(i.clear):return t;case r.getType(i.set):return n.payload;default:return e}}},t.createValueReducer=function(e,n,r){void 0===r&&(r="bioblocks");var a=t.ValueReducer(e,n,r),s=r+"/"+e;i.ReducerRegistry.register(s,a)}},"./src/reducer/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/reducer/registry/index.ts")),r(n("./src/reducer/BioblocksMiddleware.ts")),r(n("./src/reducer/ContainerReducer.ts")),r(n("./src/reducer/ObjectReducer.ts")),r(n("./src/reducer/DataReducer.ts")),r(n("./src/reducer/ResiduePairReducer.ts")),r(n("./src/reducer/SpringReducer.ts")),r(n("./src/reducer/ValueReducer.ts")),r(n("./src/reducer/BBStore.ts"));try{ReducerRegistryClass.displayName="ReducerRegistryClass",ReducerRegistryClass.__docgenInfo={description:"Based off this post on how Twitter handles redux modules:\nhttp://nicolasgallagher.com/redux-modules-and-code-splitting/",displayName:"ReducerRegistryClass",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/index.ts#ReducerRegistryClass"]={docgenInfo:ReducerRegistryClass.__docgenInfo,name:"ReducerRegistryClass",path:"src/reducer/index.ts#ReducerRegistryClass"})}catch(e){}try{BioblocksMiddleware.displayName="BioblocksMiddleware",BioblocksMiddleware.__docgenInfo={description:"",displayName:"BioblocksMiddleware",props:{dispatch:{defaultValue:null,description:"",name:"dispatch",required:!0,type:{name:"Dispatch<AnyAction>"}},getState:{defaultValue:null,description:"",name:"getState",required:!0,type:{name:"() => any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/index.ts#BioblocksMiddleware"]={docgenInfo:BioblocksMiddleware.__docgenInfo,name:"BioblocksMiddleware",path:"src/reducer/index.ts#BioblocksMiddleware"})}catch(e){}try{ResiduePairReducer.displayName="ResiduePairReducer",ResiduePairReducer.__docgenInfo={description:"",displayName:"ResiduePairReducer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/index.ts#ResiduePairReducer"]={docgenInfo:ResiduePairReducer.__docgenInfo,name:"ResiduePairReducer",path:"src/reducer/index.ts#ResiduePairReducer"})}catch(e){}try{createResiduePairReducer.displayName="createResiduePairReducer",createResiduePairReducer.__docgenInfo={description:"",displayName:"createResiduePairReducer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/index.ts#createResiduePairReducer"]={docgenInfo:createResiduePairReducer.__docgenInfo,name:"createResiduePairReducer",path:"src/reducer/index.ts#createResiduePairReducer"})}catch(e){}try{SpringReducer.displayName="SpringReducer",SpringReducer.__docgenInfo={description:"",displayName:"SpringReducer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/index.ts#SpringReducer"]={docgenInfo:SpringReducer.__docgenInfo,name:"SpringReducer",path:"src/reducer/index.ts#SpringReducer"})}catch(e){}try{createSpringReducer.displayName="createSpringReducer",createSpringReducer.__docgenInfo={description:"",displayName:"createSpringReducer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/index.ts#createSpringReducer"]={docgenInfo:createSpringReducer.__docgenInfo,name:"createSpringReducer",path:"src/reducer/index.ts#createSpringReducer"})}catch(e){}},"./src/reducer/registry/ReducerRegistry.ts":function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(){this.reducers={},this.emitChange=null}return e.prototype.getReducers=function(){return r({},this.reducers)},e.prototype.register=function(e,t){var n;Object.keys(this.reducers).includes(e)?console.log("Reducer '"+e+" already exists, not replacing"):this.reducers=r(r({},this.reducers),((n={})[e]=t,n)),this.emitChange&&this.emitChange(this.getReducers())},e.prototype.setChangeListener=function(e){this.emitChange=e},e}(),i=new a;t.ReducerRegistry=i;try{a.displayName="ReducerRegistryClass",a.__docgenInfo={description:"Based off this post on how Twitter handles redux modules:\nhttp://nicolasgallagher.com/redux-modules-and-code-splitting/",displayName:"ReducerRegistryClass",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/registry/ReducerRegistry.ts#ReducerRegistryClass"]={docgenInfo:a.__docgenInfo,name:"ReducerRegistryClass",path:"src/reducer/registry/ReducerRegistry.ts#ReducerRegistryClass"})}catch(e){}},"./src/reducer/registry/index.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n("./src/reducer/registry/ReducerRegistry.ts"));try{ReducerRegistryClass.displayName="ReducerRegistryClass",ReducerRegistryClass.__docgenInfo={description:"Based off this post on how Twitter handles redux modules:\nhttp://nicolasgallagher.com/redux-modules-and-code-splitting/",displayName:"ReducerRegistryClass",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/reducer/registry/index.ts#ReducerRegistryClass"]={docgenInfo:ReducerRegistryClass.__docgenInfo,name:"ReducerRegistryClass",path:"src/reducer/registry/index.ts#ReducerRegistryClass"})}catch(e){}},"./src/selector/ContainerSelectors.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/immutable/dist/immutable.js");t.selectCurrentItems=function(e,t,n){return void 0===n&&(n="bioblocks"),e&&e[n+"/"+t]?e[n+"/"+t]:r.Set()}},"./src/selector/ObjectSelectors.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/immutable/dist/immutable.js");t.selectObject=function(e,t,n){return void 0===n&&(n="bioblocks"),e&&e[n+"/"+t]?e[n+"/"+t]:r.Map()}},"./src/selector/ResiduePairSelectors.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/immutable/dist/immutable.js");t.getResiduePairs=function(e,t){return void 0===t&&(t="bioblocks"),void 0!==e&&e[t+"/residuePair"]?e[t+"/residuePair"]:{candidates:r.Set(),hovered:r.Set(),locked:r.Map()}},t.getCandidates=function(e,n){return void 0===n&&(n="bioblocks"),t.getResiduePairs(e,n).candidates},t.getHovered=function(e,n){return void 0===n&&(n="bioblocks"),t.getResiduePairs(e,n).hovered},t.getLocked=function(e,n){return void 0===n&&(n="bioblocks"),t.getResiduePairs(e,n).locked}},"./src/selector/SpringSelectors.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("./node_modules/immutable/dist/immutable.js"),a=n("./node_modules/reselect/es/index.js");t.getSpring=function(e,t){return void 0===t&&(t="bioblocks"),void 0!==e&&e[t+"/spring"]?e[t+"/spring"]:{category:"",graphData:{nodes:[]}}},t.getGraphData=function(e,n){return void 0===n&&(n="bioblocks"),t.getSpring(e,n).graphData},t.getCategories=a.createSelector([t.getGraphData],(function(e){var t=e&&e.nodes?e.nodes:[],n=r.Set(t.length>=1?Object.keys(t[0].labelForCategory):[]),a=new Map;return n.forEach((function(e){if(e){var n=r.Set(Array.from(t.map((function(t){return t.labelForCategory[e]}))));a.set(e,n)}})),n})),t.getLabels=a.createSelector([t.getGraphData],(function(e){var t=e&&e.nodes?e.nodes:[],n=r.Set(t.length>=1?Object.keys(t[0].labelForCategory):[]),a=r.Set();return n.forEach((function(e){e&&(a=a.merge(r.Set(Array.from(t.map((function(t){return t.labelForCategory[e]}))))))})),a}));try{t.getCategories.displayName="getCategories",t.getCategories.__docgenInfo={description:"",displayName:"getCategories",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/selector/SpringSelectors.ts#getCategories"]={docgenInfo:t.getCategories.__docgenInfo,name:"getCategories",path:"src/selector/SpringSelectors.ts#getCategories"})}catch(e){}try{t.getLabels.displayName="getLabels",t.getLabels.__docgenInfo={description:"",displayName:"getLabels",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/selector/SpringSelectors.ts#getLabels"]={docgenInfo:t.getLabels.__docgenInfo,name:"getLabels",path:"src/selector/SpringSelectors.ts#getLabels"})}catch(e){}},"./src/selector/ValueSelectors.ts":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectCurrentValue=function(e,t,n,r){return void 0===n&&(n=null),void 0===r&&(r="bioblocks"),e&&e[r+"/"+t]?e[r+"/"+t]:n}},"./src/selector/index.ts":function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("./src/selector/ContainerSelectors.ts")),r(n("./src/selector/ObjectSelectors.ts")),r(n("./src/selector/ResiduePairSelectors.ts")),r(n("./src/selector/SpringSelectors.ts")),r(n("./src/selector/ValueSelectors.ts"));try{getCategories.displayName="getCategories",getCategories.__docgenInfo={description:"",displayName:"getCategories",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/selector/index.ts#getCategories"]={docgenInfo:getCategories.__docgenInfo,name:"getCategories",path:"src/selector/index.ts#getCategories"})}catch(e){}try{getLabels.displayName="getLabels",getLabels.__docgenInfo={description:"",displayName:"getLabels",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/selector/index.ts#getLabels"]={docgenInfo:getLabels.__docgenInfo,name:"getLabels",path:"src/selector/index.ts#getLabels"})}catch(e){}},0:function(e,t,n){n("./node_modules/@storybook/core/dist/server/common/polyfills.js"),n("./node_modules/@storybook/core/dist/server/preview/globals.js"),e.exports=n("./.storybook/config.ts")},1:function(e,t){},2:function(e,t){},3:function(e,t){},4:function(e,t){},5:function(e,t){}});
//# sourceMappingURL=main~24120820.655fe03315027db0a1dd.bundle.js.map