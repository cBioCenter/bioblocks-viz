// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactMap Configuration Should match existing snapshot when given configurations. 1`] = `
<div
  id="ContactMapComponent"
  style={Object {}}
>
  <DimmerDimmable
    dimmed={true}
  >
    <Dimmer
      active={false}
    >
      <Loader />
    </Dimmer>
    <ContactMapChart
      candidateResidues={Array []}
      contactData={
        Array [
          Object {
            "hoverinfo": "x+y",
            "marker": Object {
              "colorscale": Array [
                Array [
                  0,
                  "rgb(12,50,102)",
                ],
                Array [
                  0.1,
                  "rgb(17,83,150)",
                ],
                Array [
                  0.2,
                  "rgb(40,114,175)",
                ],
                Array [
                  0.3,
                  "rgb(71,147,193)",
                ],
                Array [
                  0.4,
                  "rgb(111,175,209)",
                ],
                Array [
                  0.5,
                  "rgb(160,202,222)",
                ],
                Array [
                  0.6,
                  "rgb(200,219,237)",
                ],
                Array [
                  0.7,
                  "rgb(224,235,246)",
                ],
                Array [
                  0.8,
                  "rgb(247,251,255)",
                ],
                Array [
                  0.9,
                  "rgb(249,253,255)",
                ],
                Array [
                  1,
                  "rgb(255,255,255)",
                ],
              ],
            },
            "mode": "lines+markers",
            "name": "Known Structure Contact",
            "nodeSize": 4,
            "points": Array [],
            "subtitle": "(from PDB structure)",
          },
        ]
      }
      dataTransformFn={[Function]}
      heightModifier={0.3}
      legendModifiers={
        Object {
          "y": -0.4,
        }
      }
      marginModifiers={
        Object {
          "b": 50,
          "l": 50,
        }
      }
      onClickCallback={[Function]}
      onHoverCallback={[Function]}
      onSelectedCallback={[Function]}
      onUnHoverCallback={[Function]}
      range={70}
      secondaryStructures={Array []}
      selectedSecondaryStructures={
        Array [
          Array [],
        ]
      }
    />
  </DimmerDimmable>
  <Accordion
    fluid={true}
    styled={true}
  >
    <AccordionTitle
      active={false}
      className="contact-map-configuration-toggle"
      index={1}
      onClick={[Function]}
    >
      <Icon
        as="i"
        name="dropdown"
      />
      Configuration
    </AccordionTitle>
    <AccordionContent
      active={false}
    >
      <ChellSlider
        className="node-size-slider-0"
        key="node-size-slider-0"
        label="Known Structure Contact - Node Size"
        max={20}
        min={1}
        onChange={[Function]}
        style={
          Object {
            "width": 360,
          }
        }
        value={4}
      />
      <ChellSlider
        className="sample-slider"
        key="sample-slider"
        label="sample slider"
        max={10}
        min={0}
        onChange={[MockFunction]}
        style={
          Object {
            "width": 360,
          }
        }
        value={5}
      />
      <ChellRadioGroup
        disabled={false}
        id="sample-radio"
        key="radio-group-sample-radio"
        onChange={[MockFunction]}
        title="How to calculate distance between two residues:"
      />
    </AccordionContent>
  </Accordion>
</div>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given empty data. 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given no data. 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given sample data and sliders are _not_ enabled. 1`] = `
<div
  id="ContactMapComponent"
  style={Object {}}
>
  <div
    className="dimmed dimmable"
  >
    <div
      className="ui dimmer"
      onClick={[Function]}
    >
      <div
        className="content"
      >
        <div
          className="ui loader"
        />
      </div>
    </div>
    <div>
      <div
        className="ui dimmer"
        onClick={[Function]}
      >
        <div
          className="content"
        >
          <div
            className="ui loader"
          />
        </div>
      </div>
      <div
        className="plotly-chart"
        style={
          Object {
            "marginBottom": 5,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given sample data and sliders are enabled. 1`] = `
<div
  id="ContactMapComponent"
  style={Object {}}
>
  <div
    className="dimmed dimmable"
  >
    <div
      className="ui dimmer"
      onClick={[Function]}
    >
      <div
        className="content"
      >
        <div
          className="ui loader"
        />
      </div>
    </div>
    <div>
      <div
        className="ui dimmer"
        onClick={[Function]}
      >
        <div
          className="content"
        >
          <div
            className="ui loader"
          />
        </div>
      </div>
      <div
        className="plotly-chart"
        style={
          Object {
            "marginBottom": 5,
          }
        }
      />
    </div>
  </div>
  <div
    className="accordion ui fluid styled"
  >
    <div
      className="title contact-map-configuration-toggle"
      onClick={[Function]}
    >
      <i
        aria-hidden="true"
        className="dropdown icon"
      />
      Configuration
    </div>
    <div
      className="content"
    >
      <div
        className="node-size-slider-0"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          Known Structure Contact - Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            onBlur={[Function]}
            onKeyDown={[Function]}
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`ContactMap Snapshots Should match snapshot when locked residues are added. 1`] = `
<ContactMapClass
  configurations={Array []}
  data={
    Object {
      "couplingScores": CouplingContainer {
        "colCounter": 0,
        "contacts": Array [
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 1.3,
              "i": 41,
              "j": 52,
            },
          ],
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 20.4,
              "i": 42,
              "j": 50,
            },
          ],
          undefined,
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 1.3,
              "i": 44,
              "j": 45,
            },
          ],
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 1.3,
              "i": 45,
              "j": 46,
            },
          ],
          undefined,
          undefined,
          undefined,
          undefined,
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 2.4,
              "i": 56,
              "j": 50,
            },
          ],
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 1.3,
              "i": 56,
              "j": 57,
            },
          ],
        ],
        "getCouplingScore": [Function],
        "includes": [Function],
        "indexRange": Object {
          "max": 57,
          "min": 1,
        },
        "rowCounter": 0,
        "totalStoredContacts": 6,
      },
      "secondaryStructures": Array [
        Array [
          Object {
            "end": 31,
            "label": "C",
            "length": 2,
            "start": 30,
          },
        ],
      ],
    }
  }
  enableSliders={true}
  formattedPoints={Array []}
  height={400}
  highlightColor="#ff8800"
  isDataLoading={false}
  lockedResiduePairs={
    Map {
      "8" => Array [
        8,
      ],
      "37,46" => Array [
        37,
        46,
      ],
    }
  }
  observedColor="#0000ff"
  residueContext={
    Object {
      "addCandidateResidues": [Function],
      "addHoveredResidues": [Function],
      "addLockedResiduePair": [Function],
      "candidateResidues": Array [],
      "clearAllResidues": [Function],
      "hoveredResidues": Array [],
      "lockedResiduePairs": Map {},
      "removeAllLockedResiduePairs": [Function],
      "removeCandidateResidues": [Function],
      "removeHoveredResidues": [Function],
      "removeLockedResiduePair": [Function],
      "removeNonLockedResidues": [Function],
      "toggleLockedResiduePair": [Function],
    }
  }
  secondaryStructureContext={
    Object {
      "addSecondaryStructure": [Function],
      "clearSecondaryStructure": [Function],
      "removeSecondaryStructure": [Function],
      "selectedSecondaryStructures": Array [],
      "temporarySecondaryStructures": Array [],
      "toggleSecondaryStructure": [Function],
    }
  }
  width={400}
>
  <div
    id="ContactMapComponent"
    style={Object {}}
  >
    <DimmerDimmable
      dimmed={true}
    >
      <div
        className="dimmed dimmable"
      >
        <Dimmer
          active={false}
        >
          <DimmerInner
            active={false}
          >
            <div
              className="ui dimmer"
              onClick={[Function]}
            >
              <div
                className="content"
              >
                <Loader>
                  <div
                    className="ui loader"
                  />
                </Loader>
              </div>
            </div>
          </DimmerInner>
        </Dimmer>
        <ContactMapChart
          candidateResidues={Array []}
          contactData={
            Array [
              Object {
                "hoverinfo": "x+y",
                "marker": Object {
                  "colorscale": Array [
                    Array [
                      0,
                      "rgb(12,50,102)",
                    ],
                    Array [
                      0.1,
                      "rgb(17,83,150)",
                    ],
                    Array [
                      0.2,
                      "rgb(40,114,175)",
                    ],
                    Array [
                      0.3,
                      "rgb(71,147,193)",
                    ],
                    Array [
                      0.4,
                      "rgb(111,175,209)",
                    ],
                    Array [
                      0.5,
                      "rgb(160,202,222)",
                    ],
                    Array [
                      0.6,
                      "rgb(200,219,237)",
                    ],
                    Array [
                      0.7,
                      "rgb(224,235,246)",
                    ],
                    Array [
                      0.8,
                      "rgb(247,251,255)",
                    ],
                    Array [
                      0.9,
                      "rgb(249,253,255)",
                    ],
                    Array [
                      1,
                      "rgb(255,255,255)",
                    ],
                  ],
                },
                "mode": "lines+markers",
                "name": "Known Structure Contact",
                "nodeSize": 4,
                "points": Array [
                  Object {
                    "dist": 1.3,
                    "i": 41,
                    "j": 52,
                  },
                  Object {
                    "dist": 2.4,
                    "i": 56,
                    "j": 50,
                  },
                ],
                "subtitle": "(from PDB structure)",
              },
            ]
          }
          dataTransformFn={[Function]}
          heightModifier={0.3}
          legendModifiers={
            Object {
              "y": -0.4,
            }
          }
          marginModifiers={
            Object {
              "b": 50,
              "l": 50,
            }
          }
          onClickCallback={[Function]}
          onHoverCallback={[Function]}
          onSelectedCallback={[Function]}
          onUnHoverCallback={[Function]}
          range={77}
          secondaryStructures={Array []}
          selectedSecondaryStructures={
            Array [
              Array [],
            ]
          }
        >
          <PlotlyChart
            candidateResidues={Array []}
            config={Object {}}
            data={
              Array [
                Object {
                  "hoverinfo": "x+y+z",
                  "marker": Object {
                    "color": Array [
                      "1.3",
                      "2.4",
                      "1.3",
                      "2.4",
                    ],
                    "colorscale": Array [
                      Array [
                        0,
                        "rgb(12,50,102)",
                      ],
                      Array [
                        0.1,
                        "rgb(17,83,150)",
                      ],
                      Array [
                        0.2,
                        "rgb(40,114,175)",
                      ],
                      Array [
                        0.3,
                        "rgb(71,147,193)",
                      ],
                      Array [
                        0.4,
                        "rgb(111,175,209)",
                      ],
                      Array [
                        0.5,
                        "rgb(160,202,222)",
                      ],
                      Array [
                        0.6,
                        "rgb(200,219,237)",
                      ],
                      Array [
                        0.7,
                        "rgb(224,235,246)",
                      ],
                      Array [
                        0.8,
                        "rgb(247,251,255)",
                      ],
                      Array [
                        0.9,
                        "rgb(249,253,255)",
                      ],
                      Array [
                        1,
                        "rgb(255,255,255)",
                      ],
                    ],
                    "size": 4,
                  },
                  "mode": "markers",
                  "name": "Known Structure Contact (from PDB structure)",
                  "type": "scattergl",
                  "x": Array [
                    41,
                    56,
                    52,
                    50,
                  ],
                  "y": Array [
                    52,
                    50,
                    41,
                    56,
                  ],
                  "z": Array [
                    1.3,
                    2.4,
                    1.3,
                    2.4,
                  ],
                },
              ]
            }
            dataTransformFn={[Function]}
            layout={
              Object {
                "height": 520,
                "legend": Object {
                  "orientation": "h",
                  "y": -0.4,
                  "yanchor": "bottom",
                },
                "margin": Object {
                  "b": 50,
                  "l": 50,
                },
                "showlegend": true,
                "xaxis": Object {
                  "autorange": false,
                  "nticks": 10,
                  "range": Array [
                    1,
                    77,
                  ],
                  "showline": true,
                  "tickmode": "auto",
                  "title": "Residue #",
                },
                "yaxis": Object {
                  "autorange": false,
                  "nticks": 10,
                  "range": Array [
                    77,
                    1,
                  ],
                  "showline": true,
                  "tickmode": "auto",
                  "title": "Residue #",
                },
              }
            }
            onClickCallback={[Function]}
            onHoverCallback={[Function]}
            onSelectedCallback={[Function]}
            onUnHoverCallback={[Function]}
            secondaryStructures={Array []}
            selectedSecondaryStructures={
              Array [
                Array [],
              ]
            }
            showLoader={true}
          >
            <div>
              <Dimmer
                active={false}
              >
                <DimmerInner
                  active={false}
                >
                  <div
                    className="ui dimmer"
                    onClick={[Function]}
                  >
                    <div
                      className="content"
                    >
                      <Loader>
                        <div
                          className="ui loader"
                        />
                      </Loader>
                    </div>
                  </div>
                </DimmerInner>
              </Dimmer>
              <div
                className="plotly-chart"
                style={
                  Object {
                    "marginBottom": 5,
                  }
                }
              />
            </div>
          </PlotlyChart>
        </ContactMapChart>
      </div>
    </DimmerDimmable>
    <Accordion
      fluid={true}
      styled={true}
    >
      <AccordionAccordion
        className="ui fluid styled"
        exclusive={true}
      >
        <div
          className="accordion ui fluid styled"
        >
          <AccordionTitle
            active={false}
            className="contact-map-configuration-toggle"
            index={1}
            onClick={[Function]}
          >
            <div
              className="title contact-map-configuration-toggle"
              onClick={[Function]}
            >
              <Icon
                as="i"
                name="dropdown"
              >
                <i
                  aria-hidden="true"
                  className="dropdown icon"
                />
              </Icon>
              Configuration
            </div>
          </AccordionTitle>
          <AccordionContent
            active={false}
          >
            <div
              className="content"
            >
              <ChellSlider
                className="node-size-slider-0"
                key="node-size-slider-0"
                label="Known Structure Contact - Node Size"
                max={20}
                min={1}
                onChange={[Function]}
                style={
                  Object {
                    "width": 360,
                  }
                }
                value={4}
              >
                <div
                  className="node-size-slider-0"
                  style={
                    Object {
                      "padding": 20,
                    }
                  }
                >
                  <p>
                    Known Structure Contact - Node Size: 4
                  </p>
                  <ComponentEnhancer(undefined)
                    activeDotStyle={Object {}}
                    className=""
                    disabled={false}
                    dotStyle={Object {}}
                    dots={false}
                    handle={[Function]}
                    handleStyle={
                      Array [
                        Object {},
                      ]
                    }
                    included={true}
                    marks={Object {}}
                    max={20}
                    min={1}
                    onAfterChange={[Function]}
                    onBeforeChange={[Function]}
                    onChange={[Function]}
                    prefixCls="rc-slider"
                    railStyle={Object {}}
                    step={1}
                    style={
                      Object {
                        "width": 360,
                      }
                    }
                    trackStyle={
                      Array [
                        Object {},
                      ]
                    }
                    value={4}
                    vertical={false}
                  >
                    <div
                      className="rc-slider"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "width": 360,
                        }
                      }
                    >
                      <div
                        className="rc-slider-rail"
                        style={Object {}}
                      />
                      <Track
                        className="rc-slider-track"
                        included={true}
                        length={15.789473684210526}
                        offset={0}
                        style={Object {}}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-track"
                          style={
                            Object {
                              "left": "0%",
                              "width": "15.789473684210526%",
                            }
                          }
                        />
                      </Track>
                      <Steps
                        activeDotStyle={Object {}}
                        dotStyle={Object {}}
                        dots={false}
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        prefixCls="rc-slider"
                        step={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-step"
                        />
                      </Steps>
                      <Handle
                        className="rc-slider-handle"
                        disabled={false}
                        key="0"
                        max={20}
                        min={1}
                        offset={15.789473684210526}
                        prefixCls="rc-slider"
                        style={Object {}}
                        value={4}
                        vertical={false}
                      >
                        <div
                          aria-disabled={false}
                          aria-valuemax={20}
                          aria-valuemin={1}
                          aria-valuenow={4}
                          className="rc-slider-handle"
                          onBlur={[Function]}
                          onKeyDown={[Function]}
                          role="slider"
                          style={
                            Object {
                              "left": "15.789473684210526%",
                            }
                          }
                          tabIndex={0}
                        />
                      </Handle>
                      <Marks
                        className="rc-slider-mark"
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        onClickLabel={[Function]}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-mark"
                        />
                      </Marks>
                    </div>
                  </ComponentEnhancer(undefined)>
                </div>
              </ChellSlider>
            </div>
          </AccordionContent>
        </div>
      </AccordionAccordion>
    </Accordion>
  </div>
</ContactMapClass>
`;
