// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactMap Configuration Should match existing snapshot when given configurations. 1`] = `
<div
  id="ContactMapComponent"
  style={
    Object {
      "padding": 0,
    }
  }
>
  <ContactMapChartClass
    candidateResidues={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Res. Pairs",
          "nodeSize": 6,
          "points": Array [],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    heightModifier={0.3}
    legendModifiers={
      Object {
        "y": -0.1,
      }
    }
    marginModifiers={
      Object {
        "b": 40,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={64}
    secondaryStructures={Array []}
  />
  <Accordion
    fluid={true}
    styled={true}
  >
    <AccordionTitle
      active={false}
      className="contact-map-configuration-toggle"
      index={1}
      onClick={[Function]}
    >
      <Icon
        as="i"
        name="dropdown"
      />
      Configuration
    </AccordionTitle>
    <AccordionContent
      active={false}
    >
      <ChellSlider
        className="node-size-slider-0"
        key="node-size-slider-0"
        label="Selected Res. Pairs - Node Size"
        max={20}
        min={1}
        onChange={[Function]}
        style={
          Object {
            "width": 360,
          }
        }
        value={6}
      />
      <ChellSlider
        className="sample-slider"
        key="sample-slider"
        label="sample slider"
        max={10}
        min={0}
        onChange={[MockFunction]}
        style={
          Object {
            "width": 360,
          }
        }
        value={5}
      />
      <ChellRadioGroup
        id="sample-radio"
        key="radio-group-sample-radio"
        onChange={[MockFunction]}
      />
    </AccordionContent>
  </Accordion>
</div>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given empty data. 1`] = `<[object Object] />`;

exports[`ContactMap Snapshots Should match existing snapshot when given no data. 1`] = `<[object Object] />`;

exports[`ContactMap Snapshots Should match existing snapshot when given sample data and sliders are _not_ enabled. 1`] = `
<div
  id="ContactMapComponent"
  style={
    Object {
      "padding": 0,
    }
  }
>
  <div
    className="plotly-chart"
    style={
      Object {
        "marginBottom": 5,
      }
    }
  />
</div>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given sample data and sliders are enabled. 1`] = `
<div
  id="ContactMapComponent"
  style={
    Object {
      "padding": 0,
    }
  }
>
  <div
    className="plotly-chart"
    style={
      Object {
        "marginBottom": 5,
      }
    }
  />
  <div
    className="accordion ui fluid styled"
  >
    <div
      className="title contact-map-configuration-toggle"
      onClick={[Function]}
    >
      <i
        aria-hidden="true"
        className="dropdown icon"
      />
      Configuration
    </div>
    <div
      className="content"
    >
      <div
        className="node-size-slider-0"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          0 - Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-1"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          1 - Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-2"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          2 - Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-3"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          3 - Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-4"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          4 - Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-5"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          5 - Node Size: 4
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "15.789473684210526%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={4}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "15.789473684210526%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
      <div
        className="node-size-slider-6"
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <p>
          Selected Res. Pairs - Node Size: 6
        </p>
        <div
          className="rc-slider"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "width": 360,
            }
          }
        >
          <div
            className="rc-slider-rail"
            style={Object {}}
          />
          <div
            className="rc-slider-track"
            style={
              Object {
                "left": "0%",
                "width": "26.31578947368421%",
              }
            }
          />
          <div
            className="rc-slider-step"
          />
          <div
            aria-disabled={false}
            aria-valuemax={20}
            aria-valuemin={1}
            aria-valuenow={6}
            className="rc-slider-handle"
            role="slider"
            style={
              Object {
                "left": "26.31578947368421%",
              }
            }
            tabIndex={0}
          />
          <div
            className="rc-slider-mark"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`ContactMap Snapshots Should match snapshot when locked residues are added. 1`] = `
<ContactMapClass
  addCandidateResidues={[Function]}
  addHoveredResidues={[Function]}
  addLockedResiduePair={[Function]}
  addSecondaryStructure={[Function]}
  candidateResidues={Array []}
  chainLength={59}
  clearAllResidues={[Function]}
  clearSecondaryStructure={[Function]}
  configurations={Array []}
  data={
    Object {
      "computedPoints": Array [
        Object {
          "name": "0",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 2.4,
              "i": 56,
              "j": 50,
            },
          ],
        },
        Object {
          "name": "1",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 20.4,
              "i": 42,
              "j": 50,
            },
          ],
        },
        Object {
          "name": "2",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 1.3,
              "i": 41,
              "j": 52,
            },
          ],
        },
        Object {
          "name": "3",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 1.3,
              "i": 45,
              "j": 46,
            },
          ],
        },
        Object {
          "name": "4",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 1.3,
              "i": 44,
              "j": 45,
            },
          ],
        },
        Object {
          "name": "5",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 1.3,
              "i": 56,
              "j": 57,
            },
          ],
        },
      ],
      "secondaryStructures": Array [
        Array [
          Object {
            "end": 31,
            "label": "C",
            "length": 2,
            "start": 30,
          },
        ],
      ],
    }
  }
  enableSliders={true}
  height={400}
  highlightColor="#ff8800"
  hoveredResidues={Array []}
  lockedResiduePairs={
    Map {
      "8" => Array [
        8,
      ],
      "37,46" => Array [
        37,
        46,
      ],
    }
  }
  padding={0}
  removeAllLockedResiduePairs={[Function]}
  removeCandidateResidues={[Function]}
  removeHoveredResidues={[Function]}
  removeLockedResiduePair={[Function]}
  removeNonLockedResidues={[Function]}
  removeSecondaryStructure={[Function]}
  selectedSecondaryStructures={Array []}
  temporarySecondaryStructures={Array []}
  toggleLockedResiduePair={[Function]}
  toggleSecondaryStructure={[Function]}
  width={400}
>
  <div
    id="ContactMapComponent"
    style={
      Object {
        "padding": 0,
      }
    }
  >
    <ContactMapChartClass
      candidateResidues={Array []}
      contactData={
        Array [
          Object {
            "name": "0",
            "nodeSize": 4,
            "points": Array [
              Object {
                "dist": 2.4,
                "i": 56,
                "j": 50,
              },
            ],
          },
          Object {
            "name": "1",
            "nodeSize": 4,
            "points": Array [
              Object {
                "dist": 20.4,
                "i": 42,
                "j": 50,
              },
            ],
          },
          Object {
            "name": "2",
            "nodeSize": 4,
            "points": Array [
              Object {
                "dist": 1.3,
                "i": 41,
                "j": 52,
              },
            ],
          },
          Object {
            "name": "3",
            "nodeSize": 4,
            "points": Array [
              Object {
                "dist": 1.3,
                "i": 45,
                "j": 46,
              },
            ],
          },
          Object {
            "name": "4",
            "nodeSize": 4,
            "points": Array [
              Object {
                "dist": 1.3,
                "i": 44,
                "j": 45,
              },
            ],
          },
          Object {
            "name": "5",
            "nodeSize": 4,
            "points": Array [
              Object {
                "dist": 1.3,
                "i": 56,
                "j": 57,
              },
            ],
          },
          Object {
            "hoverinfo": "none",
            "marker": Object {
              "color": Array [
                "#ff8800",
                "#ff8800",
                "#ff8800",
                "#ff8800",
              ],
              "line": Object {
                "color": "#ff8800",
                "width": 3,
              },
              "symbol": "circle-open",
            },
            "mode": "lines+markers",
            "name": "Selected Res. Pairs",
            "nodeSize": 6,
            "points": Array [
              Object {
                "dist": 0,
                "i": 37,
                "j": 46,
              },
            ],
            "subtitle": "",
          },
        ]
      }
      dataTransformFn={[Function]}
      heightModifier={0.3}
      legendModifiers={
        Object {
          "y": -0.1,
        }
      }
      marginModifiers={
        Object {
          "b": 40,
        }
      }
      onClickCallback={[Function]}
      onHoverCallback={[Function]}
      onSelectedCallback={[Function]}
      onUnHoverCallback={[Function]}
      range={64}
      secondaryStructures={
        Array [
          Array [
            Object {
              "end": 31,
              "label": "C",
              "length": 2,
              "start": 30,
            },
          ],
        ]
      }
    >
      <PlotlyChartClass
        candidateResidues={Array []}
        config={Object {}}
        data={
          Array [
            Object {
              "hoverinfo": "x+y+z",
              "marker": Object {
                "color": Array [
                  2.4,
                  2.4,
                ],
                "size": 4,
              },
              "mode": "markers",
              "name": "0 undefined",
              "type": "scattergl",
              "x": Array [
                56,
                50,
              ],
              "y": Array [
                50,
                56,
              ],
              "z": Array [
                2.4,
                2.4,
              ],
            },
            Object {
              "hoverinfo": "x+y+z",
              "marker": Object {
                "color": Array [
                  20.4,
                  20.4,
                ],
                "size": 4,
              },
              "mode": "markers",
              "name": "1 undefined",
              "type": "scattergl",
              "x": Array [
                42,
                50,
              ],
              "y": Array [
                50,
                42,
              ],
              "z": Array [
                20.4,
                20.4,
              ],
            },
            Object {
              "hoverinfo": "x+y+z",
              "marker": Object {
                "color": Array [
                  1.3,
                  1.3,
                ],
                "size": 4,
              },
              "mode": "markers",
              "name": "2 undefined",
              "type": "scattergl",
              "x": Array [
                41,
                52,
              ],
              "y": Array [
                52,
                41,
              ],
              "z": Array [
                1.3,
                1.3,
              ],
            },
            Object {
              "hoverinfo": "x+y+z",
              "marker": Object {
                "color": Array [
                  1.3,
                  1.3,
                ],
                "size": 4,
              },
              "mode": "markers",
              "name": "3 undefined",
              "type": "scattergl",
              "x": Array [
                45,
                46,
              ],
              "y": Array [
                46,
                45,
              ],
              "z": Array [
                1.3,
                1.3,
              ],
            },
            Object {
              "hoverinfo": "x+y+z",
              "marker": Object {
                "color": Array [
                  1.3,
                  1.3,
                ],
                "size": 4,
              },
              "mode": "markers",
              "name": "4 undefined",
              "type": "scattergl",
              "x": Array [
                44,
                45,
              ],
              "y": Array [
                45,
                44,
              ],
              "z": Array [
                1.3,
                1.3,
              ],
            },
            Object {
              "hoverinfo": "x+y+z",
              "marker": Object {
                "color": Array [
                  1.3,
                  1.3,
                ],
                "size": 4,
              },
              "mode": "markers",
              "name": "5 undefined",
              "type": "scattergl",
              "x": Array [
                56,
                57,
              ],
              "y": Array [
                57,
                56,
              ],
              "z": Array [
                1.3,
                1.3,
              ],
            },
            Object {
              "hoverinfo": "x+y+z",
              "marker": Object {
                "color": Array [
                  "#ff8800",
                  "#ff8800",
                  "#ff8800",
                  "#ff8800",
                ],
                "line": Object {
                  "color": "#ff8800",
                  "width": 3,
                },
                "size": 6,
                "symbol": "circle-open",
              },
              "mode": "markers",
              "name": "Selected Res. Pairs ",
              "type": "scattergl",
              "x": Array [
                37,
                46,
              ],
              "y": Array [
                46,
                37,
              ],
              "z": Array [
                0,
                0,
              ],
            },
            Object {
              "connectgaps": false,
              "hoverinfo": "name",
              "line": Object {
                "color": "red",
                "shape": "spline",
                "smoothing": 1.3,
                "width": 5,
              },
              "marker": Object {
                "symbol": Array [],
              },
              "mode": "lines",
              "name": "C",
              "orientation": "h",
              "showlegend": false,
              "type": "scatter",
              "x": Array [
                30,
                30,
                31,
                31,
              ],
              "xaxis": "x",
              "y": Array [
                null,
                1,
                1,
                null,
              ],
              "yaxis": "y2",
            },
            Object {
              "connectgaps": false,
              "hoverinfo": "name",
              "line": Object {
                "color": "red",
                "shape": "spline",
                "smoothing": 1.3,
                "width": 5,
              },
              "marker": Object {
                "symbol": Array [],
              },
              "mode": "lines",
              "name": "C",
              "orientation": "v",
              "showlegend": false,
              "type": "scatter",
              "x": Array [
                null,
                1,
                1,
                null,
              ],
              "xaxis": "x2",
              "y": Array [
                30,
                30,
                31,
                31,
              ],
              "yaxis": "y",
            },
          ]
        }
        dataTransformFn={[Function]}
        layout={
          Object {
            "height": 520,
            "legend": Object {
              "orientation": "h",
              "y": -0.7000000000000001,
              "yanchor": "bottom",
            },
            "margin": Object {
              "b": 280,
            },
            "showlegend": true,
            "xaxis": Object {
              "autorange": false,
              "nticks": 10,
              "range": Array [
                1,
                64,
              ],
              "showline": true,
              "tickmode": "auto",
              "title": "Residue #",
            },
            "yaxis": Object {
              "autorange": false,
              "nticks": 10,
              "range": Array [
                64,
                1,
              ],
              "showline": true,
              "tickmode": "auto",
              "title": "Residue #",
            },
          }
        }
        onClickCallback={[Function]}
        onHoverCallback={[Function]}
        onSelectedCallback={[Function]}
        onUnHoverCallback={[Function]}
        secondaryStructures={
          Array [
            Array [
              Object {
                "end": 31,
                "label": "C",
                "length": 2,
                "start": 30,
              },
            ],
          ]
        }
      >
        <div
          className="plotly-chart"
          style={
            Object {
              "marginBottom": 5,
            }
          }
        />
      </PlotlyChartClass>
    </ContactMapChartClass>
    <Accordion
      fluid={true}
      styled={true}
    >
      <AccordionAccordion
        className="ui fluid styled"
        exclusive={true}
      >
        <div
          className="accordion ui fluid styled"
        >
          <AccordionTitle
            active={false}
            className="contact-map-configuration-toggle"
            index={1}
            onClick={[Function]}
          >
            <div
              className="title contact-map-configuration-toggle"
              onClick={[Function]}
            >
              <Icon
                as="i"
                name="dropdown"
              >
                <i
                  aria-hidden="true"
                  className="dropdown icon"
                />
              </Icon>
              Configuration
            </div>
          </AccordionTitle>
          <AccordionContent
            active={false}
          >
            <div
              className="content"
            >
              <ChellSlider
                className="node-size-slider-0"
                key="node-size-slider-0"
                label="0 - Node Size"
                max={20}
                min={1}
                onChange={[Function]}
                style={
                  Object {
                    "width": 360,
                  }
                }
                value={4}
              >
                <div
                  className="node-size-slider-0"
                  style={
                    Object {
                      "padding": 20,
                    }
                  }
                >
                  <p>
                    0 - Node Size: 4
                  </p>
                  <ComponentEnhancer(undefined)
                    activeDotStyle={Object {}}
                    className=""
                    disabled={false}
                    dotStyle={Object {}}
                    dots={false}
                    handle={[Function]}
                    handleStyle={
                      Array [
                        Object {},
                      ]
                    }
                    included={true}
                    marks={Object {}}
                    max={20}
                    min={1}
                    onAfterChange={[Function]}
                    onBeforeChange={[Function]}
                    onChange={[Function]}
                    prefixCls="rc-slider"
                    railStyle={Object {}}
                    step={1}
                    style={
                      Object {
                        "width": 360,
                      }
                    }
                    trackStyle={
                      Array [
                        Object {},
                      ]
                    }
                    value={4}
                    vertical={false}
                  >
                    <div
                      className="rc-slider"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "width": 360,
                        }
                      }
                    >
                      <div
                        className="rc-slider-rail"
                        style={Object {}}
                      />
                      <Track
                        className="rc-slider-track"
                        included={true}
                        length={15.789473684210526}
                        offset={0}
                        style={Object {}}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-track"
                          style={
                            Object {
                              "left": "0%",
                              "width": "15.789473684210526%",
                            }
                          }
                        />
                      </Track>
                      <Steps
                        activeDotStyle={Object {}}
                        dotStyle={Object {}}
                        dots={false}
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        prefixCls="rc-slider"
                        step={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-step"
                        />
                      </Steps>
                      <Handle
                        className="rc-slider-handle"
                        disabled={false}
                        key="0"
                        max={20}
                        min={1}
                        offset={15.789473684210526}
                        style={Object {}}
                        value={4}
                        vertical={false}
                      >
                        <div
                          aria-disabled={false}
                          aria-valuemax={20}
                          aria-valuemin={1}
                          aria-valuenow={4}
                          className="rc-slider-handle"
                          role="slider"
                          style={
                            Object {
                              "left": "15.789473684210526%",
                            }
                          }
                          tabIndex={0}
                        />
                      </Handle>
                      <Marks
                        className="rc-slider-mark"
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-mark"
                        />
                      </Marks>
                    </div>
                  </ComponentEnhancer(undefined)>
                </div>
              </ChellSlider>
              <ChellSlider
                className="node-size-slider-1"
                key="node-size-slider-1"
                label="1 - Node Size"
                max={20}
                min={1}
                onChange={[Function]}
                style={
                  Object {
                    "width": 360,
                  }
                }
                value={4}
              >
                <div
                  className="node-size-slider-1"
                  style={
                    Object {
                      "padding": 20,
                    }
                  }
                >
                  <p>
                    1 - Node Size: 4
                  </p>
                  <ComponentEnhancer(undefined)
                    activeDotStyle={Object {}}
                    className=""
                    disabled={false}
                    dotStyle={Object {}}
                    dots={false}
                    handle={[Function]}
                    handleStyle={
                      Array [
                        Object {},
                      ]
                    }
                    included={true}
                    marks={Object {}}
                    max={20}
                    min={1}
                    onAfterChange={[Function]}
                    onBeforeChange={[Function]}
                    onChange={[Function]}
                    prefixCls="rc-slider"
                    railStyle={Object {}}
                    step={1}
                    style={
                      Object {
                        "width": 360,
                      }
                    }
                    trackStyle={
                      Array [
                        Object {},
                      ]
                    }
                    value={4}
                    vertical={false}
                  >
                    <div
                      className="rc-slider"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "width": 360,
                        }
                      }
                    >
                      <div
                        className="rc-slider-rail"
                        style={Object {}}
                      />
                      <Track
                        className="rc-slider-track"
                        included={true}
                        length={15.789473684210526}
                        offset={0}
                        style={Object {}}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-track"
                          style={
                            Object {
                              "left": "0%",
                              "width": "15.789473684210526%",
                            }
                          }
                        />
                      </Track>
                      <Steps
                        activeDotStyle={Object {}}
                        dotStyle={Object {}}
                        dots={false}
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        prefixCls="rc-slider"
                        step={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-step"
                        />
                      </Steps>
                      <Handle
                        className="rc-slider-handle"
                        disabled={false}
                        key="0"
                        max={20}
                        min={1}
                        offset={15.789473684210526}
                        style={Object {}}
                        value={4}
                        vertical={false}
                      >
                        <div
                          aria-disabled={false}
                          aria-valuemax={20}
                          aria-valuemin={1}
                          aria-valuenow={4}
                          className="rc-slider-handle"
                          role="slider"
                          style={
                            Object {
                              "left": "15.789473684210526%",
                            }
                          }
                          tabIndex={0}
                        />
                      </Handle>
                      <Marks
                        className="rc-slider-mark"
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-mark"
                        />
                      </Marks>
                    </div>
                  </ComponentEnhancer(undefined)>
                </div>
              </ChellSlider>
              <ChellSlider
                className="node-size-slider-2"
                key="node-size-slider-2"
                label="2 - Node Size"
                max={20}
                min={1}
                onChange={[Function]}
                style={
                  Object {
                    "width": 360,
                  }
                }
                value={4}
              >
                <div
                  className="node-size-slider-2"
                  style={
                    Object {
                      "padding": 20,
                    }
                  }
                >
                  <p>
                    2 - Node Size: 4
                  </p>
                  <ComponentEnhancer(undefined)
                    activeDotStyle={Object {}}
                    className=""
                    disabled={false}
                    dotStyle={Object {}}
                    dots={false}
                    handle={[Function]}
                    handleStyle={
                      Array [
                        Object {},
                      ]
                    }
                    included={true}
                    marks={Object {}}
                    max={20}
                    min={1}
                    onAfterChange={[Function]}
                    onBeforeChange={[Function]}
                    onChange={[Function]}
                    prefixCls="rc-slider"
                    railStyle={Object {}}
                    step={1}
                    style={
                      Object {
                        "width": 360,
                      }
                    }
                    trackStyle={
                      Array [
                        Object {},
                      ]
                    }
                    value={4}
                    vertical={false}
                  >
                    <div
                      className="rc-slider"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "width": 360,
                        }
                      }
                    >
                      <div
                        className="rc-slider-rail"
                        style={Object {}}
                      />
                      <Track
                        className="rc-slider-track"
                        included={true}
                        length={15.789473684210526}
                        offset={0}
                        style={Object {}}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-track"
                          style={
                            Object {
                              "left": "0%",
                              "width": "15.789473684210526%",
                            }
                          }
                        />
                      </Track>
                      <Steps
                        activeDotStyle={Object {}}
                        dotStyle={Object {}}
                        dots={false}
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        prefixCls="rc-slider"
                        step={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-step"
                        />
                      </Steps>
                      <Handle
                        className="rc-slider-handle"
                        disabled={false}
                        key="0"
                        max={20}
                        min={1}
                        offset={15.789473684210526}
                        style={Object {}}
                        value={4}
                        vertical={false}
                      >
                        <div
                          aria-disabled={false}
                          aria-valuemax={20}
                          aria-valuemin={1}
                          aria-valuenow={4}
                          className="rc-slider-handle"
                          role="slider"
                          style={
                            Object {
                              "left": "15.789473684210526%",
                            }
                          }
                          tabIndex={0}
                        />
                      </Handle>
                      <Marks
                        className="rc-slider-mark"
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-mark"
                        />
                      </Marks>
                    </div>
                  </ComponentEnhancer(undefined)>
                </div>
              </ChellSlider>
              <ChellSlider
                className="node-size-slider-3"
                key="node-size-slider-3"
                label="3 - Node Size"
                max={20}
                min={1}
                onChange={[Function]}
                style={
                  Object {
                    "width": 360,
                  }
                }
                value={4}
              >
                <div
                  className="node-size-slider-3"
                  style={
                    Object {
                      "padding": 20,
                    }
                  }
                >
                  <p>
                    3 - Node Size: 4
                  </p>
                  <ComponentEnhancer(undefined)
                    activeDotStyle={Object {}}
                    className=""
                    disabled={false}
                    dotStyle={Object {}}
                    dots={false}
                    handle={[Function]}
                    handleStyle={
                      Array [
                        Object {},
                      ]
                    }
                    included={true}
                    marks={Object {}}
                    max={20}
                    min={1}
                    onAfterChange={[Function]}
                    onBeforeChange={[Function]}
                    onChange={[Function]}
                    prefixCls="rc-slider"
                    railStyle={Object {}}
                    step={1}
                    style={
                      Object {
                        "width": 360,
                      }
                    }
                    trackStyle={
                      Array [
                        Object {},
                      ]
                    }
                    value={4}
                    vertical={false}
                  >
                    <div
                      className="rc-slider"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "width": 360,
                        }
                      }
                    >
                      <div
                        className="rc-slider-rail"
                        style={Object {}}
                      />
                      <Track
                        className="rc-slider-track"
                        included={true}
                        length={15.789473684210526}
                        offset={0}
                        style={Object {}}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-track"
                          style={
                            Object {
                              "left": "0%",
                              "width": "15.789473684210526%",
                            }
                          }
                        />
                      </Track>
                      <Steps
                        activeDotStyle={Object {}}
                        dotStyle={Object {}}
                        dots={false}
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        prefixCls="rc-slider"
                        step={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-step"
                        />
                      </Steps>
                      <Handle
                        className="rc-slider-handle"
                        disabled={false}
                        key="0"
                        max={20}
                        min={1}
                        offset={15.789473684210526}
                        style={Object {}}
                        value={4}
                        vertical={false}
                      >
                        <div
                          aria-disabled={false}
                          aria-valuemax={20}
                          aria-valuemin={1}
                          aria-valuenow={4}
                          className="rc-slider-handle"
                          role="slider"
                          style={
                            Object {
                              "left": "15.789473684210526%",
                            }
                          }
                          tabIndex={0}
                        />
                      </Handle>
                      <Marks
                        className="rc-slider-mark"
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-mark"
                        />
                      </Marks>
                    </div>
                  </ComponentEnhancer(undefined)>
                </div>
              </ChellSlider>
              <ChellSlider
                className="node-size-slider-4"
                key="node-size-slider-4"
                label="4 - Node Size"
                max={20}
                min={1}
                onChange={[Function]}
                style={
                  Object {
                    "width": 360,
                  }
                }
                value={4}
              >
                <div
                  className="node-size-slider-4"
                  style={
                    Object {
                      "padding": 20,
                    }
                  }
                >
                  <p>
                    4 - Node Size: 4
                  </p>
                  <ComponentEnhancer(undefined)
                    activeDotStyle={Object {}}
                    className=""
                    disabled={false}
                    dotStyle={Object {}}
                    dots={false}
                    handle={[Function]}
                    handleStyle={
                      Array [
                        Object {},
                      ]
                    }
                    included={true}
                    marks={Object {}}
                    max={20}
                    min={1}
                    onAfterChange={[Function]}
                    onBeforeChange={[Function]}
                    onChange={[Function]}
                    prefixCls="rc-slider"
                    railStyle={Object {}}
                    step={1}
                    style={
                      Object {
                        "width": 360,
                      }
                    }
                    trackStyle={
                      Array [
                        Object {},
                      ]
                    }
                    value={4}
                    vertical={false}
                  >
                    <div
                      className="rc-slider"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "width": 360,
                        }
                      }
                    >
                      <div
                        className="rc-slider-rail"
                        style={Object {}}
                      />
                      <Track
                        className="rc-slider-track"
                        included={true}
                        length={15.789473684210526}
                        offset={0}
                        style={Object {}}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-track"
                          style={
                            Object {
                              "left": "0%",
                              "width": "15.789473684210526%",
                            }
                          }
                        />
                      </Track>
                      <Steps
                        activeDotStyle={Object {}}
                        dotStyle={Object {}}
                        dots={false}
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        prefixCls="rc-slider"
                        step={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-step"
                        />
                      </Steps>
                      <Handle
                        className="rc-slider-handle"
                        disabled={false}
                        key="0"
                        max={20}
                        min={1}
                        offset={15.789473684210526}
                        style={Object {}}
                        value={4}
                        vertical={false}
                      >
                        <div
                          aria-disabled={false}
                          aria-valuemax={20}
                          aria-valuemin={1}
                          aria-valuenow={4}
                          className="rc-slider-handle"
                          role="slider"
                          style={
                            Object {
                              "left": "15.789473684210526%",
                            }
                          }
                          tabIndex={0}
                        />
                      </Handle>
                      <Marks
                        className="rc-slider-mark"
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-mark"
                        />
                      </Marks>
                    </div>
                  </ComponentEnhancer(undefined)>
                </div>
              </ChellSlider>
              <ChellSlider
                className="node-size-slider-5"
                key="node-size-slider-5"
                label="5 - Node Size"
                max={20}
                min={1}
                onChange={[Function]}
                style={
                  Object {
                    "width": 360,
                  }
                }
                value={4}
              >
                <div
                  className="node-size-slider-5"
                  style={
                    Object {
                      "padding": 20,
                    }
                  }
                >
                  <p>
                    5 - Node Size: 4
                  </p>
                  <ComponentEnhancer(undefined)
                    activeDotStyle={Object {}}
                    className=""
                    disabled={false}
                    dotStyle={Object {}}
                    dots={false}
                    handle={[Function]}
                    handleStyle={
                      Array [
                        Object {},
                      ]
                    }
                    included={true}
                    marks={Object {}}
                    max={20}
                    min={1}
                    onAfterChange={[Function]}
                    onBeforeChange={[Function]}
                    onChange={[Function]}
                    prefixCls="rc-slider"
                    railStyle={Object {}}
                    step={1}
                    style={
                      Object {
                        "width": 360,
                      }
                    }
                    trackStyle={
                      Array [
                        Object {},
                      ]
                    }
                    value={4}
                    vertical={false}
                  >
                    <div
                      className="rc-slider"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "width": 360,
                        }
                      }
                    >
                      <div
                        className="rc-slider-rail"
                        style={Object {}}
                      />
                      <Track
                        className="rc-slider-track"
                        included={true}
                        length={15.789473684210526}
                        offset={0}
                        style={Object {}}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-track"
                          style={
                            Object {
                              "left": "0%",
                              "width": "15.789473684210526%",
                            }
                          }
                        />
                      </Track>
                      <Steps
                        activeDotStyle={Object {}}
                        dotStyle={Object {}}
                        dots={false}
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        prefixCls="rc-slider"
                        step={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-step"
                        />
                      </Steps>
                      <Handle
                        className="rc-slider-handle"
                        disabled={false}
                        key="0"
                        max={20}
                        min={1}
                        offset={15.789473684210526}
                        style={Object {}}
                        value={4}
                        vertical={false}
                      >
                        <div
                          aria-disabled={false}
                          aria-valuemax={20}
                          aria-valuemin={1}
                          aria-valuenow={4}
                          className="rc-slider-handle"
                          role="slider"
                          style={
                            Object {
                              "left": "15.789473684210526%",
                            }
                          }
                          tabIndex={0}
                        />
                      </Handle>
                      <Marks
                        className="rc-slider-mark"
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        upperBound={4}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-mark"
                        />
                      </Marks>
                    </div>
                  </ComponentEnhancer(undefined)>
                </div>
              </ChellSlider>
              <ChellSlider
                className="node-size-slider-6"
                key="node-size-slider-6"
                label="Selected Res. Pairs - Node Size"
                max={20}
                min={1}
                onChange={[Function]}
                style={
                  Object {
                    "width": 360,
                  }
                }
                value={6}
              >
                <div
                  className="node-size-slider-6"
                  style={
                    Object {
                      "padding": 20,
                    }
                  }
                >
                  <p>
                    Selected Res. Pairs - Node Size: 6
                  </p>
                  <ComponentEnhancer(undefined)
                    activeDotStyle={Object {}}
                    className=""
                    disabled={false}
                    dotStyle={Object {}}
                    dots={false}
                    handle={[Function]}
                    handleStyle={
                      Array [
                        Object {},
                      ]
                    }
                    included={true}
                    marks={Object {}}
                    max={20}
                    min={1}
                    onAfterChange={[Function]}
                    onBeforeChange={[Function]}
                    onChange={[Function]}
                    prefixCls="rc-slider"
                    railStyle={Object {}}
                    step={1}
                    style={
                      Object {
                        "width": 360,
                      }
                    }
                    trackStyle={
                      Array [
                        Object {},
                      ]
                    }
                    value={6}
                    vertical={false}
                  >
                    <div
                      className="rc-slider"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "width": 360,
                        }
                      }
                    >
                      <div
                        className="rc-slider-rail"
                        style={Object {}}
                      />
                      <Track
                        className="rc-slider-track"
                        included={true}
                        length={26.31578947368421}
                        offset={0}
                        style={Object {}}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-track"
                          style={
                            Object {
                              "left": "0%",
                              "width": "26.31578947368421%",
                            }
                          }
                        />
                      </Track>
                      <Steps
                        activeDotStyle={Object {}}
                        dotStyle={Object {}}
                        dots={false}
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        prefixCls="rc-slider"
                        step={1}
                        upperBound={6}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-step"
                        />
                      </Steps>
                      <Handle
                        className="rc-slider-handle"
                        disabled={false}
                        key="0"
                        max={20}
                        min={1}
                        offset={26.31578947368421}
                        style={Object {}}
                        value={6}
                        vertical={false}
                      >
                        <div
                          aria-disabled={false}
                          aria-valuemax={20}
                          aria-valuemin={1}
                          aria-valuenow={6}
                          className="rc-slider-handle"
                          role="slider"
                          style={
                            Object {
                              "left": "26.31578947368421%",
                            }
                          }
                          tabIndex={0}
                        />
                      </Handle>
                      <Marks
                        className="rc-slider-mark"
                        included={true}
                        lowerBound={1}
                        marks={Object {}}
                        max={20}
                        min={1}
                        upperBound={6}
                        vertical={false}
                      >
                        <div
                          className="rc-slider-mark"
                        />
                      </Marks>
                    </div>
                  </ComponentEnhancer(undefined)>
                </div>
              </ChellSlider>
            </div>
          </AccordionContent>
        </div>
      </AccordionAccordion>
    </Accordion>
  </div>
</ContactMapClass>
`;
