// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactMap Snapshots Should match existing snapshot when a single point are hovered. 1`] = `
<ComponentCard
  componentName="Contact Map"
  dockItems={
    Array [
      Object {
        "isVisibleCb": [Function],
        "onClick": [Function],
        "text": "Clear Selections",
      },
    ]
  }
  expandedStyle={
    Object {
      "height": "85vh",
      "width": "85vh",
    }
  }
  frameHeight={0}
  frameWidth={0}
  headerHeight={20}
  height="525px"
  iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
  isDataReady={true}
  isFramedComponent={false}
  isFullPage={false}
  menuItems={
    Array [
      Object {
        "component": Object {
          "configs": Object {
            "Filters": Array [],
          },
          "name": "POPUP",
        },
        "description": "Filter",
        "iconName": "filter",
      },
      Object {
        "component": Object {
          "configs": Object {
            "Node Sizes": Array [
              Object {
                "id": "node-size-slider-0",
                "name": "Structure Contact (Coupling Scores)",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
              Object {
                "id": "node-size-slider-1",
                "name": "Selected Residue Pair",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
            ],
          },
          "name": "POPUP",
        },
        "description": "Settings",
      },
    ]
  }
  padding={0}
  showSettings={false}
  width="525px"
>
  <ContactMapChart
    candidateResidues={Array []}
    configurations={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "colorscale": Array [
              Array [
                0,
                "#0000ff",
              ],
              Array [
                1,
                "rgb(247,251,255)",
              ],
            ],
          },
          "mode": "lines+markers",
          "name": "Structure Contact (Coupling Scores)",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 2.4,
              "i": 50,
              "j": 56,
            },
            Object {
              "dist": 1.3,
              "i": 41,
              "j": 52,
            },
            Object {
              "dist": 1.3,
              "i": 44,
              "j": 45,
            },
            Object {
              "dist": 1.3,
              "i": 45,
              "j": 46,
            },
            Object {
              "dist": 1.3,
              "i": 56,
              "j": 57,
            },
          ],
          "subtitle": "Unknown Structure Contact",
          "text": Array [
            "(50, 56)",
            "(41, 52)",
            "(44, 45)",
            "(45, 46)",
            "(56, 57)",
          ],
        },
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [
              "#ff8800",
              "#ff8800",
            ],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Residue Pair",
          "nodeSize": 4,
          "points": Array [
            Object {
              "i": 41,
              "j": 41,
            },
          ],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    height="100%"
    isDataLoading={false}
    legendModifiers={
      Object {
        "y": -0.4,
      }
    }
    marginModifiers={
      Object {
        "b": 67,
        "l": 67,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={57}
    secondaryStructures={
      Array [
        Array [
          Object {
            "end": 31,
            "label": "C",
            "length": 2,
            "start": 30,
          },
        ],
      ]
    }
    selectedSecondaryStructures={
      Array [
        Array [],
      ]
    }
    selectedSecondaryStructuresColor="#feb83f"
    showConfigurations={true}
    width="100%"
  />
</ComponentCard>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given basic data. 1`] = `
<ComponentCard
  componentName="Contact Map"
  dockItems={
    Array [
      Object {
        "isVisibleCb": [Function],
        "onClick": [Function],
        "text": "Clear Selections",
      },
    ]
  }
  expandedStyle={
    Object {
      "height": "85vh",
      "width": "85vh",
    }
  }
  frameHeight={0}
  frameWidth={0}
  headerHeight={20}
  height="525px"
  iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
  isDataReady={true}
  isFramedComponent={false}
  isFullPage={false}
  menuItems={
    Array [
      Object {
        "component": Object {
          "configs": Object {
            "Filters": Array [],
          },
          "name": "POPUP",
        },
        "description": "Filter",
        "iconName": "filter",
      },
      Object {
        "component": Object {
          "configs": Object {
            "Node Sizes": Array [
              Object {
                "id": "node-size-slider-0",
                "name": "Structure Contact (Coupling Scores)",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
              Object {
                "id": "node-size-slider-1",
                "name": "Selected Residue Pair",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
            ],
          },
          "name": "POPUP",
        },
        "description": "Settings",
      },
    ]
  }
  padding={0}
  showSettings={false}
  width="525px"
>
  <ContactMapChart
    candidateResidues={Array []}
    configurations={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "colorscale": Array [
              Array [
                0,
                "#0000ff",
              ],
              Array [
                1,
                "rgb(247,251,255)",
              ],
            ],
          },
          "mode": "lines+markers",
          "name": "Structure Contact (Coupling Scores)",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 2.4,
              "i": 50,
              "j": 56,
            },
            Object {
              "dist": 1.3,
              "i": 41,
              "j": 52,
            },
            Object {
              "dist": 1.3,
              "i": 44,
              "j": 45,
            },
            Object {
              "dist": 1.3,
              "i": 45,
              "j": 46,
            },
            Object {
              "dist": 1.3,
              "i": 56,
              "j": 57,
            },
          ],
          "subtitle": "Unknown Structure Contact",
          "text": Array [
            "(50, 56)",
            "(41, 52)",
            "(44, 45)",
            "(45, 46)",
            "(56, 57)",
          ],
        },
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Residue Pair",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    height="100%"
    isDataLoading={false}
    legendModifiers={
      Object {
        "y": -0.4,
      }
    }
    marginModifiers={
      Object {
        "b": 67,
        "l": 67,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={57}
    secondaryStructures={
      Array [
        Array [
          Object {
            "end": 31,
            "label": "C",
            "length": 2,
            "start": 30,
          },
        ],
      ]
    }
    selectedSecondaryStructures={
      Array [
        Array [],
      ]
    }
    selectedSecondaryStructuresColor="#feb83f"
    showConfigurations={true}
    width="100%"
  />
</ComponentCard>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given data with a PDB. 1`] = `
<ComponentCard
  componentName="Contact Map"
  dockItems={
    Array [
      Object {
        "isVisibleCb": [Function],
        "onClick": [Function],
        "text": "Clear Selections",
      },
    ]
  }
  expandedStyle={
    Object {
      "height": "85vh",
      "width": "85vh",
    }
  }
  frameHeight={0}
  frameWidth={0}
  headerHeight={20}
  height="525px"
  iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
  isDataReady={true}
  isFramedComponent={false}
  isFullPage={false}
  menuItems={
    Array [
      Object {
        "component": Object {
          "configs": Object {
            "Filters": Array [],
          },
          "name": "POPUP",
        },
        "description": "Filter",
        "iconName": "filter",
      },
      Object {
        "component": Object {
          "configs": Object {
            "Node Sizes": Array [
              Object {
                "id": "node-size-slider-0",
                "name": "Structure Contact (Coupling Scores)",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
              Object {
                "id": "node-size-slider-1",
                "name": "Selected Residue Pair",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
            ],
          },
          "name": "POPUP",
        },
        "description": "Settings",
      },
    ]
  }
  padding={0}
  showSettings={false}
  width="525px"
>
  <ContactMapChart
    candidateResidues={Array []}
    configurations={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "colorscale": Array [
              Array [
                0,
                "#0000ff",
              ],
              Array [
                1,
                "rgb(247,251,255)",
              ],
            ],
          },
          "mode": "lines+markers",
          "name": "Structure Contact (Coupling Scores)",
          "nodeSize": 4,
          "points": Array [
            Object {
              "A_i": "N",
              "A_j": "I",
              "dist": 1.3,
              "i": 1,
              "j": 10,
            },
          ],
          "subtitle": "X-ray Structure Contact",
          "text": Array [
            "(1N, 10I)",
          ],
        },
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Residue Pair",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    height="100%"
    isDataLoading={false}
    legendModifiers={
      Object {
        "y": -0.4,
      }
    }
    marginModifiers={
      Object {
        "b": 67,
        "l": 67,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={10}
    secondaryStructures={Array []}
    selectedSecondaryStructures={
      Array [
        Array [],
      ]
    }
    selectedSecondaryStructuresColor="#feb83f"
    showConfigurations={true}
    width="100%"
  />
</ComponentCard>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given data with amino acids. 1`] = `
<ComponentCard
  componentName="Contact Map"
  dockItems={
    Array [
      Object {
        "isVisibleCb": [Function],
        "onClick": [Function],
        "text": "Clear Selections",
      },
    ]
  }
  expandedStyle={
    Object {
      "height": "85vh",
      "width": "85vh",
    }
  }
  frameHeight={0}
  frameWidth={0}
  headerHeight={20}
  height="525px"
  iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
  isDataReady={true}
  isFramedComponent={false}
  isFullPage={false}
  menuItems={
    Array [
      Object {
        "component": Object {
          "configs": Object {
            "Filters": Array [],
          },
          "name": "POPUP",
        },
        "description": "Filter",
        "iconName": "filter",
      },
      Object {
        "component": Object {
          "configs": Object {
            "Node Sizes": Array [
              Object {
                "id": "node-size-slider-0",
                "name": "Structure Contact (Coupling Scores)",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
              Object {
                "id": "node-size-slider-1",
                "name": "Selected Residue Pair",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
            ],
          },
          "name": "POPUP",
        },
        "description": "Settings",
      },
    ]
  }
  padding={0}
  showSettings={false}
  width="525px"
>
  <ContactMapChart
    candidateResidues={Array []}
    configurations={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "colorscale": Array [
              Array [
                0,
                "#0000ff",
              ],
              Array [
                1,
                "rgb(247,251,255)",
              ],
            ],
          },
          "mode": "lines+markers",
          "name": "Structure Contact (Coupling Scores)",
          "nodeSize": 4,
          "points": Array [
            Object {
              "A_i": "N",
              "A_j": "I",
              "dist": 1.3,
              "i": 1,
              "j": 10,
            },
          ],
          "subtitle": "Unknown Structure Contact",
          "text": Array [
            "(1N, 10I)",
          ],
        },
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Residue Pair",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    height="100%"
    isDataLoading={false}
    legendModifiers={
      Object {
        "y": -0.4,
      }
    }
    marginModifiers={
      Object {
        "b": 67,
        "l": 67,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={10}
    secondaryStructures={Array []}
    selectedSecondaryStructures={
      Array [
        Array [],
      ]
    }
    selectedSecondaryStructuresColor="#feb83f"
    showConfigurations={true}
    width="100%"
  />
</ComponentCard>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given empty data. 1`] = `
<ComponentCard
  componentName="Contact Map"
  dockItems={
    Array [
      Object {
        "isVisibleCb": [Function],
        "onClick": [Function],
        "text": "Clear Selections",
      },
    ]
  }
  expandedStyle={
    Object {
      "height": "85vh",
      "width": "85vh",
    }
  }
  frameHeight={0}
  frameWidth={0}
  headerHeight={20}
  height="525px"
  iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
  isDataReady={false}
  isFramedComponent={false}
  isFullPage={false}
  menuItems={
    Array [
      Object {
        "component": Object {
          "configs": Object {
            "Filters": Array [],
          },
          "name": "POPUP",
        },
        "description": "Filter",
        "iconName": "filter",
      },
      Object {
        "component": Object {
          "configs": Object {
            "Node Sizes": Array [
              Object {
                "id": "node-size-slider-0",
                "name": "Structure Contact (Coupling Scores)",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
              Object {
                "id": "node-size-slider-1",
                "name": "Selected Residue Pair",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
            ],
          },
          "name": "POPUP",
        },
        "description": "Settings",
      },
    ]
  }
  padding={0}
  showSettings={false}
  width="525px"
>
  <ContactMapChart
    candidateResidues={Array []}
    configurations={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "colorscale": Array [
              Array [
                0,
                "#0000ff",
              ],
              Array [
                1,
                "rgb(247,251,255)",
              ],
            ],
          },
          "mode": "lines+markers",
          "name": "Structure Contact (Coupling Scores)",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "Unknown Structure Contact",
          "text": Array [],
        },
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Residue Pair",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    height="100%"
    isDataLoading={false}
    legendModifiers={
      Object {
        "y": -0.4,
      }
    }
    marginModifiers={
      Object {
        "b": 67,
        "l": 67,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={33000}
    secondaryStructures={Array []}
    selectedSecondaryStructures={
      Array [
        Array [],
      ]
    }
    selectedSecondaryStructuresColor="#feb83f"
    showConfigurations={true}
    width="100%"
  />
</ComponentCard>
`;

exports[`ContactMap Snapshots Should match existing snapshot when given no data. 1`] = `
<ComponentCard
  componentName="Contact Map"
  dockItems={
    Array [
      Object {
        "isVisibleCb": [Function],
        "onClick": [Function],
        "text": "Clear Selections",
      },
    ]
  }
  expandedStyle={
    Object {
      "height": "85vh",
      "width": "85vh",
    }
  }
  frameHeight={0}
  frameWidth={0}
  headerHeight={20}
  height="525px"
  iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
  isDataReady={false}
  isFramedComponent={false}
  isFullPage={false}
  menuItems={
    Array [
      Object {
        "component": Object {
          "configs": Object {
            "Filters": Array [],
          },
          "name": "POPUP",
        },
        "description": "Filter",
        "iconName": "filter",
      },
      Object {
        "component": Object {
          "configs": Object {
            "Node Sizes": Array [
              Object {
                "id": "node-size-slider-0",
                "name": "Structure Contact (Coupling Scores)",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
              Object {
                "id": "node-size-slider-1",
                "name": "Selected Residue Pair",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
            ],
          },
          "name": "POPUP",
        },
        "description": "Settings",
      },
    ]
  }
  padding={0}
  showSettings={false}
  width="525px"
>
  <ContactMapChart
    candidateResidues={Array []}
    configurations={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "colorscale": Array [
              Array [
                0,
                "#0000ff",
              ],
              Array [
                1,
                "rgb(247,251,255)",
              ],
            ],
          },
          "mode": "lines+markers",
          "name": "Structure Contact (Coupling Scores)",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "Inferred Structure Contact",
          "text": Array [],
        },
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Residue Pair",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    height="100%"
    isDataLoading={false}
    legendModifiers={
      Object {
        "y": -0.4,
      }
    }
    marginModifiers={
      Object {
        "b": 67,
        "l": 67,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={33000}
    secondaryStructures={Array []}
    selectedSecondaryStructures={
      Array [
        Array [],
      ]
    }
    selectedSecondaryStructuresColor="#feb83f"
    showConfigurations={true}
    width="100%"
  />
</ComponentCard>
`;

exports[`ContactMap Snapshots Should match existing snapshot when multiple points are hovered. 1`] = `
<ComponentCard
  componentName="Contact Map"
  dockItems={
    Array [
      Object {
        "isVisibleCb": [Function],
        "onClick": [Function],
        "text": "Clear Selections",
      },
    ]
  }
  expandedStyle={
    Object {
      "height": "85vh",
      "width": "85vh",
    }
  }
  frameHeight={0}
  frameWidth={0}
  headerHeight={20}
  height="525px"
  iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
  isDataReady={true}
  isFramedComponent={false}
  isFullPage={false}
  menuItems={
    Array [
      Object {
        "component": Object {
          "configs": Object {
            "Filters": Array [],
          },
          "name": "POPUP",
        },
        "description": "Filter",
        "iconName": "filter",
      },
      Object {
        "component": Object {
          "configs": Object {
            "Node Sizes": Array [
              Object {
                "id": "node-size-slider-0",
                "name": "Structure Contact (Coupling Scores)",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
              Object {
                "id": "node-size-slider-1",
                "name": "Selected Residue Pair",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
            ],
          },
          "name": "POPUP",
        },
        "description": "Settings",
      },
    ]
  }
  padding={0}
  showSettings={false}
  width="525px"
>
  <ContactMapChart
    candidateResidues={Array []}
    configurations={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "colorscale": Array [
              Array [
                0,
                "#0000ff",
              ],
              Array [
                1,
                "rgb(247,251,255)",
              ],
            ],
          },
          "mode": "lines+markers",
          "name": "Structure Contact (Coupling Scores)",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 2.4,
              "i": 50,
              "j": 56,
            },
            Object {
              "dist": 1.3,
              "i": 41,
              "j": 52,
            },
            Object {
              "dist": 1.3,
              "i": 44,
              "j": 45,
            },
            Object {
              "dist": 1.3,
              "i": 45,
              "j": 46,
            },
            Object {
              "dist": 1.3,
              "i": 56,
              "j": 57,
            },
          ],
          "subtitle": "Unknown Structure Contact",
          "text": Array [
            "(50, 56)",
            "(41, 52)",
            "(44, 45)",
            "(45, 46)",
            "(56, 57)",
          ],
        },
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [
              "#ff8800",
              "#ff8800",
            ],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Residue Pair",
          "nodeSize": 4,
          "points": Array [
            Object {
              "i": 41,
              "j": 52,
            },
          ],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    height="100%"
    isDataLoading={false}
    legendModifiers={
      Object {
        "y": -0.4,
      }
    }
    marginModifiers={
      Object {
        "b": 67,
        "l": 67,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={57}
    secondaryStructures={
      Array [
        Array [
          Object {
            "end": 31,
            "label": "C",
            "length": 2,
            "start": 30,
          },
        ],
      ]
    }
    selectedSecondaryStructures={
      Array [
        Array [],
      ]
    }
    selectedSecondaryStructuresColor="#feb83f"
    showConfigurations={true}
    width="100%"
  />
</ComponentCard>
`;

exports[`ContactMap Snapshots Should match existing snapshot when multiple points are selected. 1`] = `
<ComponentCard
  componentName="Contact Map"
  dockItems={
    Array [
      Object {
        "isVisibleCb": [Function],
        "onClick": [Function],
        "text": "Clear Selections",
      },
    ]
  }
  expandedStyle={
    Object {
      "height": "85vh",
      "width": "85vh",
    }
  }
  frameHeight={0}
  frameWidth={0}
  headerHeight={20}
  height="525px"
  iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
  isDataReady={true}
  isFramedComponent={false}
  isFullPage={false}
  menuItems={
    Array [
      Object {
        "component": Object {
          "configs": Object {
            "Filters": Array [],
          },
          "name": "POPUP",
        },
        "description": "Filter",
        "iconName": "filter",
      },
      Object {
        "component": Object {
          "configs": Object {
            "Node Sizes": Array [
              Object {
                "id": "node-size-slider-0",
                "name": "Structure Contact (Coupling Scores)",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#0000ff",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
              Object {
                "id": "node-size-slider-1",
                "name": "Selected Residue Pair",
                "options": Array [
                  <Icon
                    as="i"
                    name="minus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="circle"
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                  <Icon
                    as="i"
                    name="plus"
                    onClick={[Function]}
                    size="small"
                    style={
                      Object {
                        "color": "#ff8800",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "padding": ".5em",
                },
                "type": "BUTTON_GROUP",
              },
            ],
          },
          "name": "POPUP",
        },
        "description": "Settings",
      },
    ]
  }
  padding={0}
  showSettings={false}
  width="525px"
>
  <ContactMapChart
    candidateResidues={Array []}
    configurations={Array []}
    contactData={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "colorscale": Array [
              Array [
                0,
                "#0000ff",
              ],
              Array [
                1,
                "rgb(247,251,255)",
              ],
            ],
          },
          "mode": "lines+markers",
          "name": "Structure Contact (Coupling Scores)",
          "nodeSize": 4,
          "points": Array [
            Object {
              "dist": 2.4,
              "i": 50,
              "j": 56,
            },
            Object {
              "dist": 1.3,
              "i": 41,
              "j": 52,
            },
            Object {
              "dist": 1.3,
              "i": 44,
              "j": 45,
            },
            Object {
              "dist": 1.3,
              "i": 45,
              "j": 46,
            },
            Object {
              "dist": 1.3,
              "i": 56,
              "j": 57,
            },
          ],
          "subtitle": "Unknown Structure Contact",
          "text": Array [
            "(50, 56)",
            "(41, 52)",
            "(44, 45)",
            "(45, 46)",
            "(56, 57)",
          ],
        },
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": Array [
              "#ff8800",
              "#ff8800",
              "#ff8800",
              "#ff8800",
              "#ff8800",
              "#ff8800",
            ],
            "line": Object {
              "color": "#ff8800",
              "width": 3,
            },
            "symbol": "circle-open",
          },
          "mode": "lines+markers",
          "name": "Selected Residue Pair",
          "nodeSize": 4,
          "points": Array [
            Object {
              "i": 41,
              "j": 52,
            },
            Object {
              "dist": 0,
              "i": 41,
              "j": 52,
            },
            Object {
              "dist": 0,
              "i": 50,
              "j": 56,
            },
          ],
          "subtitle": "",
        },
      ]
    }
    dataTransformFn={[Function]}
    height="100%"
    isDataLoading={false}
    legendModifiers={
      Object {
        "y": -0.4,
      }
    }
    marginModifiers={
      Object {
        "b": 67,
        "l": 67,
      }
    }
    onClickCallback={[Function]}
    onHoverCallback={[Function]}
    onSelectedCallback={[Function]}
    onUnHoverCallback={[Function]}
    range={57}
    secondaryStructures={
      Array [
        Array [
          Object {
            "end": 31,
            "label": "C",
            "length": 2,
            "start": 30,
          },
        ],
      ]
    }
    selectedSecondaryStructures={
      Array [
        Array [],
      ]
    }
    selectedSecondaryStructuresColor="#feb83f"
    showConfigurations={true}
    width="100%"
  />
</ComponentCard>
`;

exports[`ContactMap Snapshots Should match snapshot when locked residues are added. 1`] = `
<ContactMapClass
  addHoveredResidues={[Function]}
  addHoveredSecondaryStructure={[Function]}
  addSelectedSecondaryStructure={[Function]}
  candidateResidues={Array []}
  configurations={Array []}
  data={
    Object {
      "couplingScores": CouplingContainer {
        "colCounter": 0,
        "contacts": Array [
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 1.3,
              "i": 41,
              "j": 52,
            },
          ],
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 20.4,
              "i": 42,
              "j": 50,
            },
          ],
          undefined,
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 1.3,
              "i": 44,
              "j": 45,
            },
          ],
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 1.3,
              "i": 45,
              "j": 46,
            },
          ],
          undefined,
          undefined,
          undefined,
          undefined,
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 2.4,
              "i": 50,
              "j": 56,
            },
          ],
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "dist": 1.3,
              "i": 56,
              "j": 57,
            },
          ],
        ],
        "derivedFromCouplingScoresFlag": true,
        "getCouplingScore": [Function],
        "includes": [Function],
        "indexRange": Object {
          "max": 57,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 6,
      },
      "secondaryStructures": Array [
        Array [
          Object {
            "end": 31,
            "label": "C",
            "length": 2,
            "start": 30,
          },
        ],
      ],
    }
  }
  enableSliders={true}
  formattedPoints={Array []}
  height="100%"
  highlightColor="#ff8800"
  hoveredResidues={Array []}
  hoveredSecondaryStructures={Array []}
  isDataLoading={false}
  lockedResiduePairs={
    Map {
      "8" => Array [
        8,
      ],
      "37,46" => Array [
        37,
        46,
      ],
    }
  }
  observedColor="#0000ff"
  removeAllLockedResiduePairs={[Function]}
  removeAllSelectedSecondaryStructures={[Function]}
  removeHoveredResidues={[Function]}
  removeHoveredSecondaryStructure={[Function]}
  removeSecondaryStructure={[Function]}
  selectedSecondaryStructures={Array []}
  showConfigurations={true}
  toggleLockedResiduePair={[Function]}
  width="100%"
>
  <ComponentCard
    componentName="Contact Map"
    dockItems={
      Array [
        Object {
          "isVisibleCb": [Function],
          "onClick": [Function],
          "text": "Clear Selections",
        },
      ]
    }
    expandedStyle={
      Object {
        "height": "85vh",
        "width": "85vh",
      }
    }
    frameHeight={0}
    frameWidth={0}
    headerHeight={20}
    height="525px"
    iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
    isDataReady={true}
    isFramedComponent={false}
    isFullPage={false}
    menuItems={
      Array [
        Object {
          "component": Object {
            "configs": Object {
              "Filters": Array [],
            },
            "name": "POPUP",
          },
          "description": "Filter",
          "iconName": "filter",
        },
        Object {
          "component": Object {
            "configs": Object {
              "Node Sizes": Array [
                Object {
                  "id": "node-size-slider-0",
                  "name": "Structure Contact (Coupling Scores)",
                  "options": Array [
                    <Icon
                      as="i"
                      name="minus"
                      onClick={[Function]}
                      size="small"
                      style={
                        Object {
                          "color": "#0000ff",
                        }
                      }
                    />,
                    <Icon
                      as="i"
                      name="circle"
                      size="small"
                      style={
                        Object {
                          "color": "#0000ff",
                        }
                      }
                    />,
                    <Icon
                      as="i"
                      name="plus"
                      onClick={[Function]}
                      size="small"
                      style={
                        Object {
                          "color": "#0000ff",
                        }
                      }
                    />,
                  ],
                  "style": Object {
                    "padding": ".5em",
                  },
                  "type": "BUTTON_GROUP",
                },
                Object {
                  "id": "node-size-slider-1",
                  "name": "Selected Residue Pair",
                  "options": Array [
                    <Icon
                      as="i"
                      name="minus"
                      onClick={[Function]}
                      size="small"
                      style={
                        Object {
                          "color": "#ff8800",
                        }
                      }
                    />,
                    <Icon
                      as="i"
                      name="circle"
                      size="small"
                      style={
                        Object {
                          "color": "#ff8800",
                        }
                      }
                    />,
                    <Icon
                      as="i"
                      name="plus"
                      onClick={[Function]}
                      size="small"
                      style={
                        Object {
                          "color": "#ff8800",
                        }
                      }
                    />,
                  ],
                  "style": Object {
                    "padding": ".5em",
                  },
                  "type": "BUTTON_GROUP",
                },
              ],
            },
            "name": "POPUP",
          },
          "description": "Settings",
        },
      ]
    }
    padding={0}
    showSettings={false}
    width="525px"
  >
    <Card
      centered={true}
      className="bioblocks-component-card"
      style={
        Object {
          "height": "530.25px",
          "maxWidth": "unset",
          "padding": "0 0 0 5px",
          "width": "525px",
        }
      }
    >
      <div
        className="ui centered card bioblocks-component-card"
        onClick={[Function]}
        style={
          Object {
            "height": "530.25px",
            "maxWidth": "unset",
            "padding": "0 0 0 5px",
            "width": "525px",
          }
        }
      >
        <div
          style={
            Object {
              "height": "7%",
            }
          }
        >
          <ComponentMenuBar
            componentName="Contact Map"
            height={20}
            iconSrc="https://bioblocks.org/media/5d3f528028d9720a3428e4b2"
            isExpanded={false}
            menuItems={
              Array [
                Object {
                  "component": Object {
                    "configs": Object {
                      "Filters": Array [],
                    },
                    "name": "POPUP",
                  },
                  "description": "Filter",
                  "iconName": "filter",
                },
                Object {
                  "component": Object {
                    "configs": Object {
                      "Node Sizes": Array [
                        Object {
                          "id": "node-size-slider-0",
                          "name": "Structure Contact (Coupling Scores)",
                          "options": Array [
                            <Icon
                              as="i"
                              name="minus"
                              onClick={[Function]}
                              size="small"
                              style={
                                Object {
                                  "color": "#0000ff",
                                }
                              }
                            />,
                            <Icon
                              as="i"
                              name="circle"
                              size="small"
                              style={
                                Object {
                                  "color": "#0000ff",
                                }
                              }
                            />,
                            <Icon
                              as="i"
                              name="plus"
                              onClick={[Function]}
                              size="small"
                              style={
                                Object {
                                  "color": "#0000ff",
                                }
                              }
                            />,
                          ],
                          "style": Object {
                            "padding": ".5em",
                          },
                          "type": "BUTTON_GROUP",
                        },
                        Object {
                          "id": "node-size-slider-1",
                          "name": "Selected Residue Pair",
                          "options": Array [
                            <Icon
                              as="i"
                              name="minus"
                              onClick={[Function]}
                              size="small"
                              style={
                                Object {
                                  "color": "#ff8800",
                                }
                              }
                            />,
                            <Icon
                              as="i"
                              name="circle"
                              size="small"
                              style={
                                Object {
                                  "color": "#ff8800",
                                }
                              }
                            />,
                            <Icon
                              as="i"
                              name="plus"
                              onClick={[Function]}
                              size="small"
                              style={
                                Object {
                                  "color": "#ff8800",
                                }
                              }
                            />,
                          ],
                          "style": Object {
                            "padding": ".5em",
                          },
                          "type": "BUTTON_GROUP",
                        },
                      ],
                    },
                    "name": "POPUP",
                  },
                  "description": "Settings",
                },
              ]
            }
            onExpandToggleCb={[Function]}
            opacity={0.85}
            width="100%"
          >
            <div
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <Menu
                secondary={true}
                style={
                  Object {
                    "height": 20,
                    "margin": 0,
                  }
                }
              >
                <div
                  className="ui secondary menu"
                  style={
                    Object {
                      "height": 20,
                      "margin": 0,
                    }
                  }
                >
                  <Menu
                    fluid={false}
                    secondary={true}
                    style={
                      Object {
                        "width": "auto",
                      }
                    }
                    widths={6}
                  >
                    <div
                      className="ui secondary six item menu"
                      style={
                        Object {
                          "width": "auto",
                        }
                      }
                    >
                      <MenuItem
                        fitted="horizontally"
                        style={
                          Object {
                            "margin": 0,
                            "padding": 0,
                          }
                        }
                      >
                        <div
                          className="horizontally fitted item"
                          onClick={[Function]}
                          style={
                            Object {
                              "margin": 0,
                              "padding": 0,
                            }
                          }
                        >
                          <img
                            alt="component icon"
                            style={
                              Object {
                                "height": "32px",
                                "padding": "2px",
                                "width": "32px",
                              }
                            }
                          />
                          Contact Map
                        </div>
                      </MenuItem>
                    </div>
                  </Menu>
                  <MenuItem
                    fitted="horizontally"
                    position="right"
                  >
                    <div
                      className="right horizontally fitted item"
                      onClick={[Function]}
                    >
                      <Menu
                        secondary={true}
                      >
                        <div
                          className="ui secondary menu"
                        >
                          <MenuItem
                            key="Contact Map-menu-item-0"
                            onClick={[Function]}
                            style={
                              Object {
                                "flexDirection": "column",
                              }
                            }
                          >
                            <a
                              className="item"
                              onClick={[Function]}
                              style={
                                Object {
                                  "flexDirection": "column",
                                }
                              }
                            >
                              <Popup
                                closeOnPortalMouseLeave={false}
                                closeOnTriggerClick={true}
                                closeOnTriggerMouseLeave={false}
                                disabled={false}
                                hoverable={false}
                                offset={0}
                                on="hover"
                                openOnTriggerClick={true}
                                openOnTriggerFocus={false}
                                openOnTriggerMouseEnter={false}
                                pinned={false}
                                position="bottom left"
                                style={
                                  Object {
                                    "opacity": 0.85,
                                  }
                                }
                                trigger={
                                  <Icon
                                    as="i"
                                    fitted={true}
                                    name="filter"
                                  />
                                }
                                wide={true}
                              >
                                <Portal
                                  closeOnDocumentClick={true}
                                  closeOnEscape={true}
                                  closeOnPortalMouseLeave={false}
                                  closeOnTriggerClick={true}
                                  closeOnTriggerMouseLeave={false}
                                  eventPool="default"
                                  mouseEnterDelay={50}
                                  mouseLeaveDelay={70}
                                  onClose={[Function]}
                                  onMount={[Function]}
                                  onOpen={[Function]}
                                  onUnmount={[Function]}
                                  openOnTriggerClick={true}
                                  openOnTriggerFocus={false}
                                  openOnTriggerMouseEnter={false}
                                  trigger={
                                    <Icon
                                      as="i"
                                      fitted={true}
                                      name="filter"
                                    />
                                  }
                                  triggerRef={
                                    Object {
                                      "current": <i
                                        aria-hidden="true"
                                        class="filter fitted icon"
                                      />,
                                    }
                                  }
                                >
                                  <Ref
                                    innerRef={[Function]}
                                  >
                                    <RefFindNode
                                      innerRef={[Function]}
                                    >
                                      <Icon
                                        as="i"
                                        fitted={true}
                                        name="filter"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        <i
                                          aria-hidden="true"
                                          className="filter fitted icon"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                        />
                                      </Icon>
                                    </RefFindNode>
                                  </Ref>
                                </Portal>
                              </Popup>
                              <span
                                style={
                                  Object {
                                    "fontSize": "11px",
                                    "visibility": "hidden",
                                  }
                                }
                              >
                                Filter
                              </span>
                            </a>
                          </MenuItem>
                          <MenuItem
                            key="Contact Map-menu-item-1"
                            onClick={[Function]}
                            style={
                              Object {
                                "flexDirection": "column",
                              }
                            }
                          >
                            <a
                              className="item"
                              onClick={[Function]}
                              style={
                                Object {
                                  "flexDirection": "column",
                                }
                              }
                            >
                              <Popup
                                closeOnPortalMouseLeave={false}
                                closeOnTriggerClick={true}
                                closeOnTriggerMouseLeave={false}
                                disabled={false}
                                hoverable={false}
                                offset={0}
                                on="hover"
                                openOnTriggerClick={true}
                                openOnTriggerFocus={false}
                                openOnTriggerMouseEnter={false}
                                pinned={false}
                                position="bottom left"
                                style={
                                  Object {
                                    "opacity": 0.85,
                                  }
                                }
                                trigger={
                                  <Icon
                                    as="i"
                                    fitted={true}
                                    name="setting"
                                  />
                                }
                                wide={true}
                              >
                                <Portal
                                  closeOnDocumentClick={true}
                                  closeOnEscape={true}
                                  closeOnPortalMouseLeave={false}
                                  closeOnTriggerClick={true}
                                  closeOnTriggerMouseLeave={false}
                                  eventPool="default"
                                  mouseEnterDelay={50}
                                  mouseLeaveDelay={70}
                                  onClose={[Function]}
                                  onMount={[Function]}
                                  onOpen={[Function]}
                                  onUnmount={[Function]}
                                  openOnTriggerClick={true}
                                  openOnTriggerFocus={false}
                                  openOnTriggerMouseEnter={false}
                                  trigger={
                                    <Icon
                                      as="i"
                                      fitted={true}
                                      name="setting"
                                    />
                                  }
                                  triggerRef={
                                    Object {
                                      "current": <i
                                        aria-hidden="true"
                                        class="setting fitted icon"
                                      />,
                                    }
                                  }
                                >
                                  <Ref
                                    innerRef={[Function]}
                                  >
                                    <RefFindNode
                                      innerRef={[Function]}
                                    >
                                      <Icon
                                        as="i"
                                        fitted={true}
                                        name="setting"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        <i
                                          aria-hidden="true"
                                          className="setting fitted icon"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                        />
                                      </Icon>
                                    </RefFindNode>
                                  </Ref>
                                </Portal>
                              </Popup>
                              <span
                                style={
                                  Object {
                                    "fontSize": "11px",
                                    "visibility": "hidden",
                                  }
                                }
                              >
                                Settings
                              </span>
                            </a>
                          </MenuItem>
                          <MenuItem
                            style={
                              Object {
                                "flexDirection": "column",
                              }
                            }
                          >
                            <div
                              className="item"
                              onClick={[Function]}
                              style={
                                Object {
                                  "flexDirection": "column",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="expand arrows alternate"
                                onClick={[Function]}
                              >
                                <i
                                  aria-hidden="true"
                                  className="expand arrows alternate icon"
                                  onClick={[Function]}
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "fontSize": "11px",
                                    "visibility": "hidden",
                                  }
                                }
                              >
                                Expand
                              </span>
                            </div>
                          </MenuItem>
                        </div>
                      </Menu>
                    </div>
                  </MenuItem>
                </div>
              </Menu>
            </div>
          </ComponentMenuBar>
        </div>
        <div
          style={
            Object {
              "height": "90%",
              "width": "100%",
            }
          }
        >
          <ContactMapChart
            candidateResidues={Array []}
            configurations={Array []}
            contactData={
              Array [
                Object {
                  "hoverinfo": "text",
                  "marker": Object {
                    "colorscale": Array [
                      Array [
                        0,
                        "#0000ff",
                      ],
                      Array [
                        1,
                        "rgb(247,251,255)",
                      ],
                    ],
                  },
                  "mode": "lines+markers",
                  "name": "Structure Contact (Coupling Scores)",
                  "nodeSize": 4,
                  "points": Array [
                    Object {
                      "dist": 2.4,
                      "i": 50,
                      "j": 56,
                    },
                    Object {
                      "dist": 1.3,
                      "i": 41,
                      "j": 52,
                    },
                    Object {
                      "dist": 1.3,
                      "i": 44,
                      "j": 45,
                    },
                    Object {
                      "dist": 1.3,
                      "i": 45,
                      "j": 46,
                    },
                    Object {
                      "dist": 1.3,
                      "i": 56,
                      "j": 57,
                    },
                  ],
                  "subtitle": "Unknown Structure Contact",
                  "text": Array [
                    "(50, 56)",
                    "(41, 52)",
                    "(44, 45)",
                    "(45, 46)",
                    "(56, 57)",
                  ],
                },
                Object {
                  "hoverinfo": "none",
                  "marker": Object {
                    "color": Array [],
                    "line": Object {
                      "color": "#ff8800",
                      "width": 3,
                    },
                    "symbol": "circle-open",
                  },
                  "mode": "lines+markers",
                  "name": "Selected Residue Pair",
                  "nodeSize": 4,
                  "points": Array [],
                  "subtitle": "",
                },
              ]
            }
            dataTransformFn={[Function]}
            height="100%"
            isDataLoading={false}
            legendModifiers={
              Object {
                "y": -0.4,
              }
            }
            marginModifiers={
              Object {
                "b": 67,
                "l": 67,
              }
            }
            onClickCallback={[Function]}
            onHoverCallback={[Function]}
            onSelectedCallback={[Function]}
            onUnHoverCallback={[Function]}
            range={57}
            secondaryStructures={
              Array [
                Array [
                  Object {
                    "end": 31,
                    "label": "C",
                    "length": 2,
                    "start": 30,
                  },
                ],
              ]
            }
            selectedSecondaryStructures={
              Array [
                Array [],
              ]
            }
            selectedSecondaryStructuresColor="#feb83f"
            showConfigurations={true}
            width="100%"
          >
            <PlotlyChart
              candidateResidues={Array []}
              config={Object {}}
              data={
                Array [
                  Object {
                    "hoverinfo": "text",
                    "marker": Object {
                      "color": Array [
                        "2.4",
                        "1.3",
                        "1.3",
                        "1.3",
                        "1.3",
                        "2.4",
                        "1.3",
                        "1.3",
                        "1.3",
                        "1.3",
                      ],
                      "colorscale": Array [
                        Array [
                          0,
                          "#0000ff",
                        ],
                        Array [
                          1,
                          "rgb(247,251,255)",
                        ],
                      ],
                      "size": 4,
                    },
                    "mode": "markers",
                    "name": "Structure Contact (Coupling Scores) Unknown Structure Contact",
                    "text": Array [
                      "(50, 56)",
                      "(41, 52)",
                      "(44, 45)",
                      "(45, 46)",
                      "(56, 57)",
                      "(56, 50)",
                      "(52, 41)",
                      "(45, 44)",
                      "(46, 45)",
                      "(57, 56)",
                    ],
                    "type": "scattergl",
                    "x": Array [
                      50,
                      41,
                      44,
                      45,
                      56,
                      56,
                      52,
                      45,
                      46,
                      57,
                    ],
                    "y": Array [
                      56,
                      52,
                      45,
                      46,
                      57,
                      50,
                      41,
                      44,
                      45,
                      56,
                    ],
                    "z": Array [
                      2.4,
                      1.3,
                      1.3,
                      1.3,
                      1.3,
                      2.4,
                      1.3,
                      1.3,
                      1.3,
                      1.3,
                    ],
                  },
                  Object {
                    "hoverinfo": "none",
                    "marker": Object {
                      "color": Array [],
                      "line": Object {
                        "color": "#ff8800",
                        "width": 3,
                      },
                      "size": 4,
                      "symbol": "circle-open",
                    },
                    "mode": "markers",
                    "name": "Selected Residue Pair ",
                    "text": Array [],
                    "type": "scattergl",
                    "x": Array [],
                    "y": Array [],
                    "z": Array [],
                  },
                  Object {
                    "connectgaps": false,
                    "hoverinfo": "none",
                    "line": Object {
                      "color": "red",
                      "shape": "spline",
                      "smoothing": 1.3,
                      "width": 1.5,
                    },
                    "marker": Object {
                      "symbol": Array [],
                    },
                    "mode": "lines",
                    "name": "C",
                    "orientation": "h",
                    "showlegend": false,
                    "type": "scatter",
                    "x": Array [
                      30,
                      30,
                      31,
                      31,
                    ],
                    "xaxis": "x",
                    "y": Array [
                      null,
                      0,
                      0,
                      null,
                    ],
                    "yaxis": "y2",
                  },
                  Object {
                    "connectgaps": false,
                    "hoverinfo": "none",
                    "line": Object {
                      "color": "red",
                      "shape": "spline",
                      "smoothing": 1.3,
                      "width": 1.5,
                    },
                    "marker": Object {
                      "symbol": Array [],
                    },
                    "mode": "lines",
                    "name": "C",
                    "orientation": "v",
                    "showlegend": false,
                    "type": "scatter",
                    "x": Array [
                      null,
                      0,
                      0,
                      null,
                    ],
                    "xaxis": "x2",
                    "y": Array [
                      30,
                      30,
                      31,
                      31,
                    ],
                    "yaxis": "y",
                  },
                ]
              }
              dataTransformFn={[Function]}
              height="100%"
              layout={
                Object {
                  "legend": Object {
                    "orientation": "h",
                    "y": -0.4,
                    "yanchor": "bottom",
                  },
                  "margin": Object {
                    "b": 67,
                    "l": 67,
                  },
                  "showlegend": false,
                  "xaxis": Object {
                    "fixedrange": true,
                    "nticks": 10,
                    "range": Array [
                      0,
                      57,
                    ],
                    "rangemode": "nonnegative",
                    "showline": true,
                    "tickmode": "auto",
                    "title": "Residue #",
                  },
                  "yaxis": Object {
                    "fixedrange": true,
                    "nticks": 10,
                    "range": Array [
                      57,
                      0,
                    ],
                    "rangemode": "nonnegative",
                    "showline": true,
                    "tickmode": "auto",
                    "title": "Residue #",
                  },
                }
              }
              onClickCallback={[Function]}
              onHoverCallback={[Function]}
              onSelectedCallback={[Function]}
              onUnHoverCallback={[Function]}
              secondaryStructures={
                Array [
                  Array [
                    Object {
                      "end": 31,
                      "label": "C",
                      "length": 2,
                      "start": 30,
                    },
                  ],
                ]
              }
              selectedSecondaryStructures={
                Array [
                  Array [],
                ]
              }
              selectedSecondaryStructuresColor="#feb83f"
              showLoader={false}
              width="100%"
            >
              <div
                className="plotly-chart"
                style={
                  Object {
                    "height": "100%",
                    "marginBottom": 5,
                    "width": "100%",
                  }
                }
              />
            </PlotlyChart>
          </ContactMapChart>
        </div>
        <div
          style={
            Object {
              "height": "3%",
            }
          }
        >
          <ComponentDock
            dockItems={
              Array [
                Object {
                  "isVisibleCb": [Function],
                  "onClick": [Function],
                  "text": "Clear Selections",
                },
              ]
            }
            visible={true}
          >
            <Grid
              centered={true}
              columns="equal"
              stretched={true}
              style={
                Object {
                  "marginLeft": "initial",
                  "marginRight": "initial",
                  "marginTop": "-0.5rem",
                  "padding": 0,
                }
              }
            >
              <div
                className="ui centered stretched equal width grid"
                style={
                  Object {
                    "marginLeft": "initial",
                    "marginRight": "initial",
                    "marginTop": "-0.5rem",
                    "padding": 0,
                  }
                }
              />
            </Grid>
          </ComponentDock>
        </div>
      </div>
    </Card>
  </ComponentCard>
</ContactMapClass>
`;
