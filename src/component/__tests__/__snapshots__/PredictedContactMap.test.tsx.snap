// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PredictedContactMap Should update points to plot when new data is provided. 1`] = `
Array [
  Object {
    "hoverinfo": "text",
    "marker": Object {
      "color": Array [
        "#000000",
        "#000000",
        "#000000",
        "#000000",
        "#000000",
        "#000000",
      ],
    },
    "mode": "lines+markers",
    "name": "Inferred Contact",
    "nodeSize": 4,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 20.4,
        "i": 42,
        "j": 50,
      },
      Object {
        "dist": 2.4,
        "i": 50,
        "j": 56,
      },
    ],
    "subtitle": "(N=28, L=57)",
    "text": Array [
      "(41, 52)",
      "(42, 50)",
      "(50, 56)",
    ],
  },
  Object {
    "hoverinfo": "text",
    "marker": Object {
      "color": Array [
        "#ff0000",
        "#ff0000",
        "#ff0000",
        "#ff0000",
      ],
    },
    "mode": "lines+markers",
    "name": "Inferred Contact Agrees with X-ray Contact",
    "nodeSize": 6,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 2.4,
        "i": 50,
        "j": 56,
      },
    ],
    "subtitle": "(N=2, 66.7%)",
    "text": Array [
      "(41, 52)",
      "(50, 56)",
    ],
  },
]
`;

exports[`PredictedContactMap Snapshots Should match existing snapshot when given empty data. 1`] = `
<div
  className="PredictedContactMapComponent"
>
  <Connect(ContactMapClass)
    agreementColor="#ff0000"
    allColor="#000000"
    configurations={
      Array [
        Object {
          "marks": Object {
            "0": "L/2",
            "1": "L",
            "2": "2L",
            "3": "3L",
          },
          "name": "# Couplings to Display",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 0,
            "defaultValue": 100,
            "max": 3,
            "min": 0,
          },
        },
        Object {
          "name": "Linear Distance Filter (|i - j|)",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 5,
            "defaultValue": 5,
            "max": 10,
            "min": 1,
          },
        },
        Object {
          "name": "Minimum Probability",
          "onChange": [Function],
          "step": 0.01,
          "type": "SLIDER",
          "values": Object {
            "current": 0.9,
            "defaultValue": 0.9,
            "max": 1,
            "min": 0,
          },
        },
      ]
    }
    data={
      Object {
        "couplingScores": CouplingContainer {
          "colCounter": 0,
          "contacts": Array [],
          "getCouplingScore": [Function],
          "includes": [Function],
          "indexRange": Object {
            "max": 1,
            "min": 1,
          },
          "rowCounter": 0,
          "scoreSource": "cn",
          "totalStoredContacts": 0,
        },
        "pdbData": undefined,
        "secondaryStructures": Array [],
      }
    }
    filters={Array []}
    formattedPoints={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "color": Array [],
          },
          "mode": "lines+markers",
          "name": "Inferred Contact",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "(N=0, L=1)",
          "text": Array [],
        },
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "color": Array [],
          },
          "mode": "lines+markers",
          "name": "Inferred Contact Agrees with X-ray Contact",
          "nodeSize": 6,
          "points": Array [],
          "subtitle": "(N=0, NaN%)",
          "text": Array [],
        },
      ]
    }
    height="100%"
    isDataLoading={false}
    width="100%"
  />
</div>
`;

exports[`PredictedContactMap Snapshots Should match existing snapshot when given no data. 1`] = `
<div
  className="PredictedContactMapComponent"
>
  <Connect(ContactMapClass)
    agreementColor="#ff0000"
    allColor="#000000"
    configurations={
      Array [
        Object {
          "marks": Object {
            "0": "L/2",
            "1": "L",
            "2": "2L",
            "3": "3L",
          },
          "name": "# Couplings to Display",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 0,
            "defaultValue": 100,
            "max": 3,
            "min": 0,
          },
        },
        Object {
          "name": "Linear Distance Filter (|i - j|)",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 5,
            "defaultValue": 5,
            "max": 10,
            "min": 1,
          },
        },
        Object {
          "name": "Minimum Probability",
          "onChange": [Function],
          "step": 0.01,
          "type": "SLIDER",
          "values": Object {
            "current": 0.9,
            "defaultValue": 0.9,
            "max": 1,
            "min": 0,
          },
        },
      ]
    }
    data={
      Object {
        "couplingScores": CouplingContainer {
          "colCounter": 0,
          "contacts": Array [],
          "getCouplingScore": [Function],
          "includes": [Function],
          "indexRange": Object {
            "max": 1,
            "min": 1,
          },
          "rowCounter": 0,
          "scoreSource": "cn",
          "totalStoredContacts": 0,
        },
        "pdbData": undefined,
        "secondaryStructures": Array [],
      }
    }
    filters={Array []}
    formattedPoints={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "color": Array [],
          },
          "mode": "lines+markers",
          "name": "Inferred Contact",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "(N=0, L=1)",
          "text": Array [],
        },
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "color": Array [],
          },
          "mode": "lines+markers",
          "name": "Inferred Contact Agrees with X-ray Contact",
          "nodeSize": 6,
          "points": Array [],
          "subtitle": "(N=0, NaN%)",
          "text": Array [],
        },
      ]
    }
    height="100%"
    isDataLoading={false}
    width="100%"
  />
</div>
`;

exports[`PredictedContactMap Snapshots Should match snapshot when locked residues are added. 1`] = `
<div
  className="PredictedContactMapComponent"
>
  <Connect(ContactMapClass)
    agreementColor="#ff0000"
    allColor="#000000"
    configurations={
      Array [
        Object {
          "marks": Object {
            "0": "L/2",
            "1": "L",
            "2": "2L",
            "3": "3L",
          },
          "name": "# Couplings to Display",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 0,
            "defaultValue": 100,
            "max": 3,
            "min": 0,
          },
        },
        Object {
          "name": "Linear Distance Filter (|i - j|)",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 5,
            "defaultValue": 5,
            "max": 10,
            "min": 1,
          },
        },
        Object {
          "name": "Minimum Probability",
          "onChange": [Function],
          "step": 0.01,
          "type": "SLIDER",
          "values": Object {
            "current": 0.9,
            "defaultValue": 0.9,
            "max": 1,
            "min": 0,
          },
        },
      ]
    }
    data={
      Object {
        "couplingScores": CouplingContainer {
          "colCounter": 0,
          "contacts": Array [],
          "getCouplingScore": [Function],
          "includes": [Function],
          "indexRange": Object {
            "max": 1,
            "min": 1,
          },
          "rowCounter": 0,
          "scoreSource": "cn",
          "totalStoredContacts": 0,
        },
        "pdbData": undefined,
        "secondaryStructures": Array [],
      }
    }
    filters={Array []}
    formattedPoints={
      Array [
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "color": Array [],
          },
          "mode": "lines+markers",
          "name": "Inferred Contact",
          "nodeSize": 4,
          "points": Array [],
          "subtitle": "(N=0, L=1)",
          "text": Array [],
        },
        Object {
          "hoverinfo": "text",
          "marker": Object {
            "color": Array [],
          },
          "mode": "lines+markers",
          "name": "Inferred Contact Agrees with X-ray Contact",
          "nodeSize": 6,
          "points": Array [],
          "subtitle": "(N=0, NaN%)",
          "text": Array [],
        },
      ]
    }
    height="100%"
    isDataLoading={false}
    lockedResiduePairs={
      Object {
        "37,46": Array [
          37,
          46,
        ],
        "8": Array [
          8,
        ],
      }
    }
    width="100%"
  />
</div>
`;
