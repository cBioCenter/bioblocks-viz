// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PredictedContactMap Should update points to plot using C-Alpha for distance determination. 1`] = `
Array [
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "colorscale": Array [
        Array [
          0,
          "rgb(12,50,102)",
        ],
        Array [
          0.1,
          "rgb(17,83,150)",
        ],
        Array [
          0.2,
          "rgb(40,114,175)",
        ],
        Array [
          0.3,
          "rgb(71,147,193)",
        ],
        Array [
          0.4,
          "rgb(111,175,209)",
        ],
        Array [
          0.5,
          "rgb(160,202,222)",
        ],
        Array [
          0.6,
          "rgb(200,219,237)",
        ],
        Array [
          0.7,
          "rgb(224,235,246)",
        ],
        Array [
          0.8,
          "rgb(247,251,255)",
        ],
        Array [
          0.9,
          "rgb(249,253,255)",
        ],
        Array [
          1,
          "rgb(255,255,255)",
        ],
      ],
    },
    "mode": "lines+markers",
    "name": "Known Structure Contact",
    "nodeSize": 4,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 2.4,
        "i": 56,
        "j": 50,
      },
    ],
    "subtitle": "(from PDB structure)",
  },
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "color": "#000000",
    },
    "mode": "lines+markers",
    "name": "Predicted Contact",
    "nodeSize": 4,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 20.4,
        "i": 42,
        "j": 50,
      },
      Object {
        "dist": 2.4,
        "i": 56,
        "j": 50,
      },
    ],
    "subtitle": "(N=28, L=56)",
  },
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "color": "#ff0000",
    },
    "mode": "lines+markers",
    "name": "Correct Prediction",
    "nodeSize": 6,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 2.4,
        "i": 56,
        "j": 50,
      },
    ],
    "subtitle": "(N=2, 66.67%)",
  },
]
`;

exports[`PredictedContactMap Should update points to plot using closest atom for distance determination. 1`] = `
Array [
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "colorscale": Array [
        Array [
          0,
          "rgb(12,50,102)",
        ],
        Array [
          0.1,
          "rgb(17,83,150)",
        ],
        Array [
          0.2,
          "rgb(40,114,175)",
        ],
        Array [
          0.3,
          "rgb(71,147,193)",
        ],
        Array [
          0.4,
          "rgb(111,175,209)",
        ],
        Array [
          0.5,
          "rgb(160,202,222)",
        ],
        Array [
          0.6,
          "rgb(200,219,237)",
        ],
        Array [
          0.7,
          "rgb(224,235,246)",
        ],
        Array [
          0.8,
          "rgb(247,251,255)",
        ],
        Array [
          0.9,
          "rgb(249,253,255)",
        ],
        Array [
          1,
          "rgb(255,255,255)",
        ],
      ],
    },
    "mode": "lines+markers",
    "name": "Known Structure Contact",
    "nodeSize": 4,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 2.4,
        "i": 56,
        "j": 50,
      },
    ],
    "subtitle": "(from PDB structure)",
  },
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "color": "#000000",
    },
    "mode": "lines+markers",
    "name": "Predicted Contact",
    "nodeSize": 4,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 20.4,
        "i": 42,
        "j": 50,
      },
    ],
    "subtitle": "(N=-1, L=56)",
  },
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "color": "#ff0000",
    },
    "mode": "lines+markers",
    "name": "Correct Prediction",
    "nodeSize": 6,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
    ],
    "subtitle": "(N=1, 50.00%)",
  },
]
`;

exports[`PredictedContactMap Should update points to plot when new data is provided. 1`] = `
Array [
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "colorscale": Array [
        Array [
          0,
          "rgb(12,50,102)",
        ],
        Array [
          0.1,
          "rgb(17,83,150)",
        ],
        Array [
          0.2,
          "rgb(40,114,175)",
        ],
        Array [
          0.3,
          "rgb(71,147,193)",
        ],
        Array [
          0.4,
          "rgb(111,175,209)",
        ],
        Array [
          0.5,
          "rgb(160,202,222)",
        ],
        Array [
          0.6,
          "rgb(200,219,237)",
        ],
        Array [
          0.7,
          "rgb(224,235,246)",
        ],
        Array [
          0.8,
          "rgb(247,251,255)",
        ],
        Array [
          0.9,
          "rgb(249,253,255)",
        ],
        Array [
          1,
          "rgb(255,255,255)",
        ],
      ],
    },
    "mode": "lines+markers",
    "name": "Known Structure Contact",
    "nodeSize": 4,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 2.4,
        "i": 56,
        "j": 50,
      },
    ],
    "subtitle": "(from PDB structure)",
  },
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "color": "#000000",
    },
    "mode": "lines+markers",
    "name": "Predicted Contact",
    "nodeSize": 4,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
      Object {
        "dist": 20.4,
        "i": 42,
        "j": 50,
      },
    ],
    "subtitle": "(N=-1, L=56)",
  },
  Object {
    "hoverinfo": "x+y",
    "marker": Object {
      "color": "#ff0000",
    },
    "mode": "lines+markers",
    "name": "Correct Prediction",
    "nodeSize": 6,
    "points": Array [
      Object {
        "dist": 1.3,
        "i": 41,
        "j": 52,
      },
    ],
    "subtitle": "(N=1, 50.00%)",
  },
]
`;

exports[`PredictedContactMap Snapshots Should match existing snapshot when given empty data. 1`] = `
<div
  id="PredictedContactMapComponent"
>
  <ContactMap
    addCandidateResidues={[Function]}
    addHoveredResidues={[Function]}
    addLockedResiduePair={[Function]}
    candidateResidues={Array []}
    chainLength={-1}
    clearAllResidues={[Function]}
    configurations={
      Array [
        Object {
          "name": "Calculate Distance: Closest Atom - C-Alpha",
          "onChange": [Function],
          "type": "RADIO",
          "values": Object {
            "current": 0,
            "max": 1,
            "min": 0,
            "options": Array [
              "CLOSEST",
              "C-α",
            ],
          },
        },
        Object {
          "name": "Linear Distance Filter (|i - j|)",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 5,
            "max": 10,
            "min": 1,
          },
        },
        Object {
          "name": "Top N Predictions to Show",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": -1,
            "max": -1,
            "min": 1,
          },
        },
      ]
    }
    correctColor="#ff0000"
    data={
      Object {
        "computedPoints": Array [],
        "secondaryStructures": Array [],
      }
    }
    height={400}
    hoveredResidues={Array []}
    incorrectColor="#000000"
    lockedResiduePairs={Map {}}
    observedColor="#0000ff"
    padding={0}
    removeAllLockedResiduePairs={[Function]}
    removeCandidateResidues={[Function]}
    removeHoveredResidues={[Function]}
    removeLockedResiduePair={[Function]}
    removeNonLockedResidues={[Function]}
    toggleLockedResiduePair={[Function]}
    width={400}
  />
</div>
`;

exports[`PredictedContactMap Snapshots Should match existing snapshot when given no data. 1`] = `
<div
  id="PredictedContactMapComponent"
>
  <ContactMap
    addCandidateResidues={[Function]}
    addHoveredResidues={[Function]}
    addLockedResiduePair={[Function]}
    candidateResidues={Array []}
    chainLength={-1}
    clearAllResidues={[Function]}
    configurations={
      Array [
        Object {
          "name": "Calculate Distance: Closest Atom - C-Alpha",
          "onChange": [Function],
          "type": "RADIO",
          "values": Object {
            "current": 0,
            "max": 1,
            "min": 0,
            "options": Array [
              "CLOSEST",
              "C-α",
            ],
          },
        },
        Object {
          "name": "Linear Distance Filter (|i - j|)",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 5,
            "max": 10,
            "min": 1,
          },
        },
        Object {
          "name": "Top N Predictions to Show",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": -1,
            "max": -1,
            "min": 1,
          },
        },
      ]
    }
    correctColor="#ff0000"
    data={
      Object {
        "computedPoints": Array [],
        "secondaryStructures": Array [],
      }
    }
    height={400}
    hoveredResidues={Array []}
    incorrectColor="#000000"
    lockedResiduePairs={Map {}}
    observedColor="#0000ff"
    padding={0}
    removeAllLockedResiduePairs={[Function]}
    removeCandidateResidues={[Function]}
    removeHoveredResidues={[Function]}
    removeLockedResiduePair={[Function]}
    removeNonLockedResidues={[Function]}
    toggleLockedResiduePair={[Function]}
    width={400}
  />
</div>
`;

exports[`PredictedContactMap Snapshots Should match snapshot when locked residues are added. 1`] = `
<div
  id="PredictedContactMapComponent"
>
  <ContactMap
    addCandidateResidues={[Function]}
    addHoveredResidues={[Function]}
    addLockedResiduePair={[Function]}
    candidateResidues={Array []}
    chainLength={-1}
    clearAllResidues={[Function]}
    configurations={
      Array [
        Object {
          "name": "Calculate Distance: Closest Atom - C-Alpha",
          "onChange": [Function],
          "type": "RADIO",
          "values": Object {
            "current": 0,
            "max": 1,
            "min": 0,
            "options": Array [
              "CLOSEST",
              "C-α",
            ],
          },
        },
        Object {
          "name": "Linear Distance Filter (|i - j|)",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": 5,
            "max": 10,
            "min": 1,
          },
        },
        Object {
          "name": "Top N Predictions to Show",
          "onChange": [Function],
          "type": "SLIDER",
          "values": Object {
            "current": -1,
            "max": -1,
            "min": 1,
          },
        },
      ]
    }
    correctColor="#ff0000"
    data={
      Object {
        "computedPoints": Array [],
        "secondaryStructures": Array [],
      }
    }
    height={400}
    hoveredResidues={Array []}
    incorrectColor="#000000"
    lockedResiduePairs={
      Object {
        "37,46": Array [
          37,
          46,
        ],
        "8": Array [
          8,
        ],
      }
    }
    observedColor="#0000ff"
    padding={0}
    removeAllLockedResiduePairs={[Function]}
    removeCandidateResidues={[Function]}
    removeHoveredResidues={[Function]}
    removeLockedResiduePair={[Function]}
    removeNonLockedResidues={[Function]}
    toggleLockedResiduePair={[Function]}
    width={400}
  />
</div>
`;
