// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlotlyChart Event Callbacks Should attach events when the container is attached. 1`] = `
<PlotlyChart
  config={Object {}}
  data={
    Array [
      Object {
        "marker": Object {
          "color": "blue",
        },
        "mode": "markers",
        "type": "pointcloud",
        "xy": Float32Array [
          1,
          2,
          3,
          4,
        ],
      },
    ]
  }
  height="100%"
  layout={Object {}}
  onClickCallback={[MockFunction]}
  onSelectedCallback={[MockFunction]}
  showLoader={true}
  width="100%"
>
  <Dimmer
    active={false}
  >
    <DimmerInner
      active={false}
    >
      <Ref
        innerRef={
          Object {
            "current": <div
              class="ui dimmer"
            >
              <div
                class="content"
              >
                <div
                  class="ui loader"
                />
              </div>
            </div>,
          }
        }
      >
        <RefFindNode
          innerRef={
            Object {
              "current": <div
                class="ui dimmer"
              >
                <div
                  class="content"
                >
                  <div
                    class="ui loader"
                  />
                </div>
              </div>,
            }
          }
        >
          <div
            className="ui dimmer"
            onClick={[Function]}
          >
            <div
              className="content"
            >
              <Loader>
                <div
                  className="ui loader"
                />
              </Loader>
            </div>
          </div>
        </RefFindNode>
      </Ref>
    </DimmerInner>
  </Dimmer>
  <div
    className="plotly-chart"
    style={
      Object {
        "height": "100%",
        "marginBottom": 5,
        "width": "100%",
      }
    }
  />
</PlotlyChart>
`;

exports[`PlotlyChart Should handle extra axes correctly. 1`] = `
<PlotlyChart
  config={Object {}}
  data={
    Array [
      Object {
        "marker": Object {
          "color": "blue",
        },
        "mode": "markers",
        "type": "pointcloud",
        "xy": Float32Array [
          1,
          2,
          3,
          4,
        ],
      },
      Object {
        "xaxis": "x2",
      },
      Object {
        "yaxis": "y2",
      },
    ]
  }
  height="100%"
  layout={Object {}}
  showLoader={true}
  width="100%"
>
  <Dimmer
    active={false}
  >
    <DimmerInner
      active={false}
    >
      <Ref
        innerRef={
          Object {
            "current": <div
              class="ui dimmer"
            >
              <div
                class="content"
              >
                <div
                  class="ui loader"
                />
              </div>
            </div>,
          }
        }
      >
        <RefFindNode
          innerRef={
            Object {
              "current": <div
                class="ui dimmer"
              >
                <div
                  class="content"
                >
                  <div
                    class="ui loader"
                  />
                </div>
              </div>,
            }
          }
        >
          <div
            className="ui dimmer"
            onClick={[Function]}
          >
            <div
              className="content"
            >
              <Loader>
                <div
                  className="ui loader"
                />
              </Loader>
            </div>
          </div>
        </RefFindNode>
      </Ref>
    </DimmerInner>
  </Dimmer>
  <div
    className="plotly-chart"
    style={
      Object {
        "height": "100%",
        "marginBottom": 5,
        "width": "100%",
      }
    }
  />
</PlotlyChart>
`;

exports[`PlotlyChart Should match existing snapshot when given empty data. 1`] = `
<PlotlyChart
  config={Object {}}
  data={Array []}
  height="100%"
  layout={Object {}}
  showLoader={true}
  width="100%"
>
  <Dimmer
    active={true}
  >
    <DimmerInner
      active={true}
    >
      <Ref
        innerRef={
          Object {
            "current": <div
              class="ui active transition visible dimmer"
              style="display: flex;"
            >
              <div
                class="content"
              >
                <div
                  class="ui loader"
                />
              </div>
            </div>,
          }
        }
      >
        <RefFindNode
          innerRef={
            Object {
              "current": <div
                class="ui active transition visible dimmer"
                style="display: flex;"
              >
                <div
                  class="content"
                >
                  <div
                    class="ui loader"
                  />
                </div>
              </div>,
            }
          }
        >
          <div
            className="ui active transition visible dimmer"
            onClick={[Function]}
          >
            <div
              className="content"
            >
              <Loader>
                <div
                  className="ui loader"
                />
              </Loader>
            </div>
          </div>
        </RefFindNode>
      </Ref>
    </DimmerInner>
  </Dimmer>
  <div
    className="plotly-chart"
    style={
      Object {
        "height": "100%",
        "marginBottom": 5,
        "width": "100%",
      }
    }
  />
</PlotlyChart>
`;

exports[`PlotlyChart Should match existing snapshot when given sample data. 1`] = `
<PlotlyChart
  config={Object {}}
  data={
    Array [
      Object {
        "marker": Object {
          "color": "blue",
        },
        "mode": "markers",
        "type": "pointcloud",
        "xy": Float32Array [
          1,
          2,
          3,
          4,
        ],
      },
    ]
  }
  height="100%"
  layout={Object {}}
  showLoader={true}
  width="100%"
>
  <Dimmer
    active={false}
  >
    <DimmerInner
      active={false}
    >
      <Ref
        innerRef={
          Object {
            "current": <div
              class="ui dimmer"
            >
              <div
                class="content"
              >
                <div
                  class="ui loader"
                />
              </div>
            </div>,
          }
        }
      >
        <RefFindNode
          innerRef={
            Object {
              "current": <div
                class="ui dimmer"
              >
                <div
                  class="content"
                >
                  <div
                    class="ui loader"
                  />
                </div>
              </div>,
            }
          }
        >
          <div
            className="ui dimmer"
            onClick={[Function]}
          >
            <div
              className="content"
            >
              <Loader>
                <div
                  className="ui loader"
                />
              </Loader>
            </div>
          </div>
        </RefFindNode>
      </Ref>
    </DimmerInner>
  </Dimmer>
  <div
    className="plotly-chart"
    style={
      Object {
        "height": "100%",
        "marginBottom": 5,
        "width": "100%",
      }
    }
  />
</PlotlyChart>
`;
